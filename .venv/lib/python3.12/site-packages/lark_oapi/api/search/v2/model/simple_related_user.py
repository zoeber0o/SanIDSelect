# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class SimpleRelatedUser(object):
    _types = {
        "user_id": int,
        "score": float,
    }

    def __init__(self, d=None):
        self.user_id: Optional[int] = None
        self.score: Optional[float] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SimpleRelatedUserBuilder":
        return SimpleRelatedUserBuilder()


class SimpleRelatedUserBuilder(object):
    def __init__(self) -> None:
        self._simple_related_user = SimpleRelatedUser()

    def user_id(self, user_id: int) -> "SimpleRelatedUserBuilder":
        self._simple_related_user.user_id = user_id
        return self

    def score(self, score: float) -> "SimpleRelatedUserBuilder":
        self._simple_related_user.score = score
        return self

    def build(self) -> "SimpleRelatedUser":
        return self._simple_related_user
