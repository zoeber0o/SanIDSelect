# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class SimpleGetRelatedUsersRequest(object):
    _types = {
        "user_id": int,
        "top_k": int,
        "start_time_filter": int,
        "end_time_filter": int,
    }

    def __init__(self, d=None):
        self.user_id: Optional[int] = None
        self.top_k: Optional[int] = None
        self.start_time_filter: Optional[int] = None
        self.end_time_filter: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SimpleGetRelatedUsersRequestBuilder":
        return SimpleGetRelatedUsersRequestBuilder()


class SimpleGetRelatedUsersRequestBuilder(object):
    def __init__(self) -> None:
        self._simple_get_related_users_request = SimpleGetRelatedUsersRequest()

    def user_id(self, user_id: int) -> "SimpleGetRelatedUsersRequestBuilder":
        self._simple_get_related_users_request.user_id = user_id
        return self

    def top_k(self, top_k: int) -> "SimpleGetRelatedUsersRequestBuilder":
        self._simple_get_related_users_request.top_k = top_k
        return self

    def start_time_filter(self, start_time_filter: int) -> "SimpleGetRelatedUsersRequestBuilder":
        self._simple_get_related_users_request.start_time_filter = start_time_filter
        return self

    def end_time_filter(self, end_time_filter: int) -> "SimpleGetRelatedUsersRequestBuilder":
        self._simple_get_related_users_request.end_time_filter = end_time_filter
        return self

    def build(self) -> "SimpleGetRelatedUsersRequest":
        return self._simple_get_related_users_request
