# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class LingoPassageParam(object):
    _types = {
        "searchable": bool,
    }

    def __init__(self, d=None):
        self.searchable: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "LingoPassageParamBuilder":
        return LingoPassageParamBuilder()


class LingoPassageParamBuilder(object):
    def __init__(self) -> None:
        self._lingo_passage_param = LingoPassageParam()

    def searchable(self, searchable: bool) -> "LingoPassageParamBuilder":
        self._lingo_passage_param.searchable = searchable
        return self

    def build(self) -> "LingoPassageParam":
        return self._lingo_passage_param
