# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class SchemaUserIdsOption(object):
    _types = {
        "id_type": str,
    }

    def __init__(self, d=None):
        self.id_type: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SchemaUserIdsOptionBuilder":
        return SchemaUserIdsOptionBuilder()


class SchemaUserIdsOptionBuilder(object):
    def __init__(self) -> None:
        self._schema_user_ids_option = SchemaUserIdsOption()

    def id_type(self, id_type: str) -> "SchemaUserIdsOptionBuilder":
        self._schema_user_ids_option.id_type = id_type
        return self

    def build(self) -> "SchemaUserIdsOption":
        return self._schema_user_ids_option
