# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class KnowledgeSourceSpaceReject(object):
    _types = {
        "doc_tokens": List[str],
        "folder_tokens": List[str],
    }

    def __init__(self, d=None):
        self.doc_tokens: Optional[List[str]] = None
        self.folder_tokens: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "KnowledgeSourceSpaceRejectBuilder":
        return KnowledgeSourceSpaceRejectBuilder()


class KnowledgeSourceSpaceRejectBuilder(object):
    def __init__(self) -> None:
        self._knowledge_source_space_reject = KnowledgeSourceSpaceReject()

    def doc_tokens(self, doc_tokens: List[str]) -> "KnowledgeSourceSpaceRejectBuilder":
        self._knowledge_source_space_reject.doc_tokens = doc_tokens
        return self

    def folder_tokens(self, folder_tokens: List[str]) -> "KnowledgeSourceSpaceRejectBuilder":
        self._knowledge_source_space_reject.folder_tokens = folder_tokens
        return self

    def build(self) -> "KnowledgeSourceSpaceReject":
        return self._knowledge_source_space_reject
