# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class BlockI18nInfo(object):
    _types = {
        "i18n_key": str,
        "name": str,
    }

    def __init__(self, d=None):
        self.i18n_key: Optional[str] = None
        self.name: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BlockI18nInfoBuilder":
        return BlockI18nInfoBuilder()


class BlockI18nInfoBuilder(object):
    def __init__(self) -> None:
        self._block_i18n_info = BlockI18nInfo()

    def i18n_key(self, i18n_key: str) -> "BlockI18nInfoBuilder":
        self._block_i18n_info.i18n_key = i18n_key
        return self

    def name(self, name: str) -> "BlockI18nInfoBuilder":
        self._block_i18n_info.name = name
        return self

    def build(self) -> "BlockI18nInfo":
        return self._block_i18n_info
