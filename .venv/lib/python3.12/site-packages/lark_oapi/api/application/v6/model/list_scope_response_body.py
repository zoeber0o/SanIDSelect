# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .scope import Scope


class ListScopeResponseBody(object):
    _types = {
        "scopes": List[Scope],
    }

    def __init__(self, d=None):
        self.scopes: Optional[List[Scope]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ListScopeResponseBodyBuilder":
        return ListScopeResponseBodyBuilder()


class ListScopeResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._list_scope_response_body = ListScopeResponseBody()

    def scopes(self, scopes: List[Scope]) -> "ListScopeResponseBodyBuilder":
        self._list_scope_response_body.scopes = scopes
        return self

    def build(self) -> "ListScopeResponseBody":
        return self._list_scope_response_body
