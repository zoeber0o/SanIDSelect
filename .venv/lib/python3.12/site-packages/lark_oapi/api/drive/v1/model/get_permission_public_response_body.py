# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .permission_public import PermissionPublic


class GetPermissionPublicResponseBody(object):
    _types = {
        "permission_public": PermissionPublic,
    }

    def __init__(self, d=None):
        self.permission_public: Optional[PermissionPublic] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetPermissionPublicResponseBodyBuilder":
        return GetPermissionPublicResponseBodyBuilder()


class GetPermissionPublicResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_permission_public_response_body = GetPermissionPublicResponseBody()

    def permission_public(self, permission_public: PermissionPublic) -> "GetPermissionPublicResponseBodyBuilder":
        self._get_permission_public_response_body.permission_public = permission_public
        return self

    def build(self) -> "GetPermissionPublicResponseBody":
        return self._get_permission_public_response_body
