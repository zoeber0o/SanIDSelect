# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .base_member import BaseMember


class BatchCreatePermissionMemberRequestBody(object):
    _types = {
        "members": List[BaseMember],
    }

    def __init__(self, d=None):
        self.members: Optional[List[BaseMember]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchCreatePermissionMemberRequestBodyBuilder":
        return BatchCreatePermissionMemberRequestBodyBuilder()


class BatchCreatePermissionMemberRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_create_permission_member_request_body = BatchCreatePermissionMemberRequestBody()

    def members(self, members: List[BaseMember]) -> "BatchCreatePermissionMemberRequestBodyBuilder":
        self._batch_create_permission_member_request_body.members = members
        return self

    def build(self) -> "BatchCreatePermissionMemberRequestBody":
        return self._batch_create_permission_member_request_body
