# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ImportJobMountPoint(object):
    _types = {
        "mount_type": int,
        "mount_key": str,
    }

    def __init__(self, d=None):
        self.mount_type: Optional[int] = None
        self.mount_key: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ImportJobMountPointBuilder":
        return ImportJobMountPointBuilder()


class ImportJobMountPointBuilder(object):
    def __init__(self) -> None:
        self._import_job_mount_point = ImportJobMountPoint()

    def mount_type(self, mount_type: int) -> "ImportJobMountPointBuilder":
        self._import_job_mount_point.mount_type = mount_type
        return self

    def mount_key(self, mount_key: str) -> "ImportJobMountPointBuilder":
        self._import_job_mount_point.mount_key = mount_key
        return self

    def build(self) -> "ImportJobMountPoint":
        return self._import_job_mount_point
