# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ResumeLanguage(object):
    _types = {
        "level": int,
        "description": str,
    }

    def __init__(self, d=None):
        self.level: Optional[int] = None
        self.description: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ResumeLanguageBuilder":
        return ResumeLanguageBuilder()


class ResumeLanguageBuilder(object):
    def __init__(self) -> None:
        self._resume_language = ResumeLanguage()

    def level(self, level: int) -> "ResumeLanguageBuilder":
        self._resume_language.level = level
        return self

    def description(self, description: str) -> "ResumeLanguageBuilder":
        self._resume_language.description = description
        return self

    def build(self) -> "ResumeLanguage":
        return self._resume_language
