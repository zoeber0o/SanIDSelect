# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ResumeProject(object):
    _types = {
        "name": str,
        "title": str,
        "start_date": str,
        "start_time": str,
        "end_date": str,
        "end_time": str,
        "description": str,
    }

    def __init__(self, d=None):
        self.name: Optional[str] = None
        self.title: Optional[str] = None
        self.start_date: Optional[str] = None
        self.start_time: Optional[str] = None
        self.end_date: Optional[str] = None
        self.end_time: Optional[str] = None
        self.description: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ResumeProjectBuilder":
        return ResumeProjectBuilder()


class ResumeProjectBuilder(object):
    def __init__(self) -> None:
        self._resume_project = ResumeProject()

    def name(self, name: str) -> "ResumeProjectBuilder":
        self._resume_project.name = name
        return self

    def title(self, title: str) -> "ResumeProjectBuilder":
        self._resume_project.title = title
        return self

    def start_date(self, start_date: str) -> "ResumeProjectBuilder":
        self._resume_project.start_date = start_date
        return self

    def start_time(self, start_time: str) -> "ResumeProjectBuilder":
        self._resume_project.start_time = start_time
        return self

    def end_date(self, end_date: str) -> "ResumeProjectBuilder":
        self._resume_project.end_date = end_date
        return self

    def end_time(self, end_time: str) -> "ResumeProjectBuilder":
        self._resume_project.end_time = end_time
        return self

    def description(self, description: str) -> "ResumeProjectBuilder":
        self._resume_project.description = description
        return self

    def build(self) -> "ResumeProject":
        return self._resume_project
