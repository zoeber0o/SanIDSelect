# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .business_license import BusinessLicense


class RecognizeBusinessLicenseResponseBody(object):
    _types = {
        "business_license": BusinessLicense,
    }

    def __init__(self, d=None):
        self.business_license: Optional[BusinessLicense] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RecognizeBusinessLicenseResponseBodyBuilder":
        return RecognizeBusinessLicenseResponseBodyBuilder()


class RecognizeBusinessLicenseResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._recognize_business_license_response_body = RecognizeBusinessLicenseResponseBody()

    def business_license(self, business_license: BusinessLicense) -> "RecognizeBusinessLicenseResponseBodyBuilder":
        self._recognize_business_license_response_body.business_license = business_license
        return self

    def build(self) -> "RecognizeBusinessLicenseResponseBody":
        return self._recognize_business_license_response_body
