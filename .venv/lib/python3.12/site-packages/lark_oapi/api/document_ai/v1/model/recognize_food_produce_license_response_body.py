# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .food_produce_license import FoodProduceLicense


class RecognizeFoodProduceLicenseResponseBody(object):
    _types = {
        "food_produce_license": FoodProduceLicense,
    }

    def __init__(self, d=None):
        self.food_produce_license: Optional[FoodProduceLicense] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RecognizeFoodProduceLicenseResponseBodyBuilder":
        return RecognizeFoodProduceLicenseResponseBodyBuilder()


class RecognizeFoodProduceLicenseResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._recognize_food_produce_license_response_body = RecognizeFoodProduceLicenseResponseBody()

    def food_produce_license(self,
                             food_produce_license: FoodProduceLicense) -> "RecognizeFoodProduceLicenseResponseBodyBuilder":
        self._recognize_food_produce_license_response_body.food_produce_license = food_produce_license
        return self

    def build(self) -> "RecognizeFoodProduceLicenseResponseBody":
        return self._recognize_food_produce_license_response_body
