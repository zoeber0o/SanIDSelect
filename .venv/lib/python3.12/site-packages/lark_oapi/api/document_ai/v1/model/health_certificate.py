# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .health_certificate_entity import HealthCertificateEntity


class HealthCertificate(object):
    _types = {
        "entities": List[HealthCertificateEntity],
    }

    def __init__(self, d=None):
        self.entities: Optional[List[HealthCertificateEntity]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "HealthCertificateBuilder":
        return HealthCertificateBuilder()


class HealthCertificateBuilder(object):
    def __init__(self) -> None:
        self._health_certificate = HealthCertificate()

    def entities(self, entities: List[HealthCertificateEntity]) -> "HealthCertificateBuilder":
        self._health_certificate.entities = entities
        return self

    def build(self) -> "HealthCertificate":
        return self._health_certificate
