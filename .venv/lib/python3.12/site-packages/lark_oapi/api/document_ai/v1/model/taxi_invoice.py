# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .taxi_entity import TaxiEntity


class TaxiInvoice(object):
    _types = {
        "entities": List[TaxiEntity],
    }

    def __init__(self, d=None):
        self.entities: Optional[List[TaxiEntity]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "TaxiInvoiceBuilder":
        return TaxiInvoiceBuilder()


class TaxiInvoiceBuilder(object):
    def __init__(self) -> None:
        self._taxi_invoice = TaxiInvoice()

    def entities(self, entities: List[TaxiEntity]) -> "TaxiInvoiceBuilder":
        self._taxi_invoice.entities = entities
        return self

    def build(self) -> "TaxiInvoice":
        return self._taxi_invoice
