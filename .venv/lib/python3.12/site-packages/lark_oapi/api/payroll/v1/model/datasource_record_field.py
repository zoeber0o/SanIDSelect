# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class DatasourceRecordField(object):
    _types = {
        "field_code": str,
        "value": str,
        "field_type": int,
    }

    def __init__(self, d=None):
        self.field_code: Optional[str] = None
        self.value: Optional[str] = None
        self.field_type: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DatasourceRecordFieldBuilder":
        return DatasourceRecordFieldBuilder()


class DatasourceRecordFieldBuilder(object):
    def __init__(self) -> None:
        self._datasource_record_field = DatasourceRecordField()

    def field_code(self, field_code: str) -> "DatasourceRecordFieldBuilder":
        self._datasource_record_field.field_code = field_code
        return self

    def value(self, value: str) -> "DatasourceRecordFieldBuilder":
        self._datasource_record_field.value = value
        return self

    def field_type(self, field_type: int) -> "DatasourceRecordFieldBuilder":
        self._datasource_record_field.field_type = field_type
        return self

    def build(self) -> "DatasourceRecordField":
        return self._datasource_record_field
