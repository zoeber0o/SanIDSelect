# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .enum_object import EnumObject
from .dimension_value_lookup_info import DimensionValueLookupInfo
from .i18n_content import I18nContent
from .i18n_content import I18nContent


class DataSummaryDimension(object):
    _types = {
        "dimension_level": int,
        "dimension_type": int,
        "dimension_value_id": str,
        "enum_dimension": EnumObject,
        "dimension_value_lookup_info": DimensionValueLookupInfo,
        "dimension_names": List[I18nContent],
        "dimension_titles": List[I18nContent],
    }

    def __init__(self, d=None):
        self.dimension_level: Optional[int] = None
        self.dimension_type: Optional[int] = None
        self.dimension_value_id: Optional[str] = None
        self.enum_dimension: Optional[EnumObject] = None
        self.dimension_value_lookup_info: Optional[DimensionValueLookupInfo] = None
        self.dimension_names: Optional[List[I18nContent]] = None
        self.dimension_titles: Optional[List[I18nContent]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DataSummaryDimensionBuilder":
        return DataSummaryDimensionBuilder()


class DataSummaryDimensionBuilder(object):
    def __init__(self) -> None:
        self._data_summary_dimension = DataSummaryDimension()

    def dimension_level(self, dimension_level: int) -> "DataSummaryDimensionBuilder":
        self._data_summary_dimension.dimension_level = dimension_level
        return self

    def dimension_type(self, dimension_type: int) -> "DataSummaryDimensionBuilder":
        self._data_summary_dimension.dimension_type = dimension_type
        return self

    def dimension_value_id(self, dimension_value_id: str) -> "DataSummaryDimensionBuilder":
        self._data_summary_dimension.dimension_value_id = dimension_value_id
        return self

    def enum_dimension(self, enum_dimension: EnumObject) -> "DataSummaryDimensionBuilder":
        self._data_summary_dimension.enum_dimension = enum_dimension
        return self

    def dimension_value_lookup_info(self,
                                    dimension_value_lookup_info: DimensionValueLookupInfo) -> "DataSummaryDimensionBuilder":
        self._data_summary_dimension.dimension_value_lookup_info = dimension_value_lookup_info
        return self

    def dimension_names(self, dimension_names: List[I18nContent]) -> "DataSummaryDimensionBuilder":
        self._data_summary_dimension.dimension_names = dimension_names
        return self

    def dimension_titles(self, dimension_titles: List[I18nContent]) -> "DataSummaryDimensionBuilder":
        self._data_summary_dimension.dimension_titles = dimension_titles
        return self

    def build(self) -> "DataSummaryDimension":
        return self._data_summary_dimension
