# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .archive_payment_activity_request_body import ArchivePaymentActivityRequestBody


class ArchivePaymentActivityRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.request_body: Optional[ArchivePaymentActivityRequestBody] = None

    @staticmethod
    def builder() -> "ArchivePaymentActivityRequestBuilder":
        return ArchivePaymentActivityRequestBuilder()


class ArchivePaymentActivityRequestBuilder(object):

    def __init__(self) -> None:
        archive_payment_activity_request = ArchivePaymentActivityRequest()
        archive_payment_activity_request.http_method = HttpMethod.POST
        archive_payment_activity_request.uri = "/open-apis/payroll/v1/payment_activitys/archive"
        archive_payment_activity_request.token_types = {AccessTokenType.USER, AccessTokenType.TENANT}
        self._archive_payment_activity_request: ArchivePaymentActivityRequest = archive_payment_activity_request

    def request_body(self, request_body: ArchivePaymentActivityRequestBody) -> "ArchivePaymentActivityRequestBuilder":
        self._archive_payment_activity_request.request_body = request_body
        self._archive_payment_activity_request.body = request_body
        return self

    def build(self) -> ArchivePaymentActivityRequest:
        return self._archive_payment_activity_request
