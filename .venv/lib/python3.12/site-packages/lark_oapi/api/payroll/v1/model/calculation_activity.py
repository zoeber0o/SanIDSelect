# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n_content import I18nContent


class CalculationActivity(object):
    _types = {
        "calculation_activity_id": int,
        "calculation_activity_names": List[I18nContent],
    }

    def __init__(self, d=None):
        self.calculation_activity_id: Optional[int] = None
        self.calculation_activity_names: Optional[List[I18nContent]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CalculationActivityBuilder":
        return CalculationActivityBuilder()


class CalculationActivityBuilder(object):
    def __init__(self) -> None:
        self._calculation_activity = CalculationActivity()

    def calculation_activity_id(self, calculation_activity_id: int) -> "CalculationActivityBuilder":
        self._calculation_activity.calculation_activity_id = calculation_activity_id
        return self

    def calculation_activity_names(self, calculation_activity_names: List[I18nContent]) -> "CalculationActivityBuilder":
        self._calculation_activity.calculation_activity_names = calculation_activity_names
        return self

    def build(self) -> "CalculationActivity":
        return self._calculation_activity
