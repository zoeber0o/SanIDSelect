# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .verif_act_item_value import VerifActItemValue


class VerifActProration(object):
    _types = {
        "start_date": str,
        "end_date": str,
        "cutoff_date": str,
        "item_values": List[VerifActItemValue],
    }

    def __init__(self, d=None):
        self.start_date: Optional[str] = None
        self.end_date: Optional[str] = None
        self.cutoff_date: Optional[str] = None
        self.item_values: Optional[List[VerifActItemValue]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "VerifActProrationBuilder":
        return VerifActProrationBuilder()


class VerifActProrationBuilder(object):
    def __init__(self) -> None:
        self._verif_act_proration = VerifActProration()

    def start_date(self, start_date: str) -> "VerifActProrationBuilder":
        self._verif_act_proration.start_date = start_date
        return self

    def end_date(self, end_date: str) -> "VerifActProrationBuilder":
        self._verif_act_proration.end_date = end_date
        return self

    def cutoff_date(self, cutoff_date: str) -> "VerifActProrationBuilder":
        self._verif_act_proration.cutoff_date = cutoff_date
        return self

    def item_values(self, item_values: List[VerifActItemValue]) -> "VerifActProrationBuilder":
        self._verif_act_proration.item_values = item_values
        return self

    def build(self) -> "VerifActProration":
        return self._verif_act_proration
