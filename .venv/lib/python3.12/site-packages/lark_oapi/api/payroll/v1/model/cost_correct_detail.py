# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .dimension_value import DimensionValue
from .cost_item_value import CostItemValue


class CostCorrectDetail(object):
    _types = {
        "employee_id": str,
        "active_status": int,
        "dimensions": List[DimensionValue],
        "cost_items": List[CostItemValue],
    }

    def __init__(self, d=None):
        self.employee_id: Optional[str] = None
        self.active_status: Optional[int] = None
        self.dimensions: Optional[List[DimensionValue]] = None
        self.cost_items: Optional[List[CostItemValue]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CostCorrectDetailBuilder":
        return CostCorrectDetailBuilder()


class CostCorrectDetailBuilder(object):
    def __init__(self) -> None:
        self._cost_correct_detail = CostCorrectDetail()

    def employee_id(self, employee_id: str) -> "CostCorrectDetailBuilder":
        self._cost_correct_detail.employee_id = employee_id
        return self

    def active_status(self, active_status: int) -> "CostCorrectDetailBuilder":
        self._cost_correct_detail.active_status = active_status
        return self

    def dimensions(self, dimensions: List[DimensionValue]) -> "CostCorrectDetailBuilder":
        self._cost_correct_detail.dimensions = dimensions
        return self

    def cost_items(self, cost_items: List[CostItemValue]) -> "CostCorrectDetailBuilder":
        self._cost_correct_detail.cost_items = cost_items
        return self

    def build(self) -> "CostCorrectDetail":
        return self._cost_correct_detail
