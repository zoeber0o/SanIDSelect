# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .collection_activity_data_with_details import CollectionActivityDataWithDetails


class CollectionDetail(object):
    _types = {
        "employment_id": str,
        "activities": List[CollectionActivityDataWithDetails],
    }

    def __init__(self, d=None):
        self.employment_id: Optional[str] = None
        self.activities: Optional[List[CollectionActivityDataWithDetails]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CollectionDetailBuilder":
        return CollectionDetailBuilder()


class CollectionDetailBuilder(object):
    def __init__(self) -> None:
        self._collection_detail = CollectionDetail()

    def employment_id(self, employment_id: str) -> "CollectionDetailBuilder":
        self._collection_detail.employment_id = employment_id
        return self

    def activities(self, activities: List[CollectionActivityDataWithDetails]) -> "CollectionDetailBuilder":
        self._collection_detail.activities = activities
        return self

    def build(self) -> "CollectionDetail":
        return self._collection_detail
