# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .payment_activity_detail import PaymentActivityDetail


class ListPaymentActivityDetailResponseBody(object):
    _types = {
        "payment_activity_details": List[PaymentActivityDetail],
        "total": int,
    }

    def __init__(self, d=None):
        self.payment_activity_details: Optional[List[PaymentActivityDetail]] = None
        self.total: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ListPaymentActivityDetailResponseBodyBuilder":
        return ListPaymentActivityDetailResponseBodyBuilder()


class ListPaymentActivityDetailResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._list_payment_activity_detail_response_body = ListPaymentActivityDetailResponseBody()

    def payment_activity_details(self, payment_activity_details: List[
        PaymentActivityDetail]) -> "ListPaymentActivityDetailResponseBodyBuilder":
        self._list_payment_activity_detail_response_body.payment_activity_details = payment_activity_details
        return self

    def total(self, total: int) -> "ListPaymentActivityDetailResponseBodyBuilder":
        self._list_payment_activity_detail_response_body.total = total
        return self

    def build(self) -> "ListPaymentActivityDetailResponseBody":
        return self._list_payment_activity_detail_response_body
