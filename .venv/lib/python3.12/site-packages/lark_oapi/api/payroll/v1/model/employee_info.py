# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n import I18n


class EmployeeInfo(object):
    _types = {
        "user_id": str,
        "name": I18n,
        "employee_number": str,
        "employee_id": str,
    }

    def __init__(self, d=None):
        self.user_id: Optional[str] = None
        self.name: Optional[I18n] = None
        self.employee_number: Optional[str] = None
        self.employee_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "EmployeeInfoBuilder":
        return EmployeeInfoBuilder()


class EmployeeInfoBuilder(object):
    def __init__(self) -> None:
        self._employee_info = EmployeeInfo()

    def user_id(self, user_id: str) -> "EmployeeInfoBuilder":
        self._employee_info.user_id = user_id
        return self

    def name(self, name: I18n) -> "EmployeeInfoBuilder":
        self._employee_info.name = name
        return self

    def employee_number(self, employee_number: str) -> "EmployeeInfoBuilder":
        self._employee_info.employee_number = employee_number
        return self

    def employee_id(self, employee_id: str) -> "EmployeeInfoBuilder":
        self._employee_info.employee_id = employee_id
        return self

    def build(self) -> "EmployeeInfo":
        return self._employee_info
