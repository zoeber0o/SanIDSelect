# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class SaveDatasourceRecordResponseBody(object):
    _types = {
        "affect_counts": str,
    }

    def __init__(self, d=None):
        self.affect_counts: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SaveDatasourceRecordResponseBodyBuilder":
        return SaveDatasourceRecordResponseBodyBuilder()


class SaveDatasourceRecordResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._save_datasource_record_response_body = SaveDatasourceRecordResponseBody()

    def affect_counts(self, affect_counts: str) -> "SaveDatasourceRecordResponseBodyBuilder":
        self._save_datasource_record_response_body.affect_counts = affect_counts
        return self

    def build(self) -> "SaveDatasourceRecordResponseBody":
        return self._save_datasource_record_response_body
