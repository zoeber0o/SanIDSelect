# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class CreateRuleExternalResponseBody(object):
    _types = {
        "rule_id": int,
    }

    def __init__(self, d=None):
        self.rule_id: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateRuleExternalResponseBodyBuilder":
        return CreateRuleExternalResponseBodyBuilder()


class CreateRuleExternalResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_rule_external_response_body = CreateRuleExternalResponseBody()

    def rule_id(self, rule_id: int) -> "CreateRuleExternalResponseBodyBuilder":
        self._create_rule_external_response_body.rule_id = rule_id
        return self

    def build(self) -> "CreateRuleExternalResponseBody":
        return self._create_rule_external_response_body
