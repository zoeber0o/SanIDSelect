# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class DeviceBindRuleExternalRequestBody(object):
    _types = {
        "device_id": int,
        "rule_ids": List[str],
    }

    def __init__(self, d=None):
        self.device_id: Optional[int] = None
        self.rule_ids: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DeviceBindRuleExternalRequestBodyBuilder":
        return DeviceBindRuleExternalRequestBodyBuilder()


class DeviceBindRuleExternalRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._device_bind_rule_external_request_body = DeviceBindRuleExternalRequestBody()

    def device_id(self, device_id: int) -> "DeviceBindRuleExternalRequestBodyBuilder":
        self._device_bind_rule_external_request_body.device_id = device_id
        return self

    def rule_ids(self, rule_ids: List[str]) -> "DeviceBindRuleExternalRequestBodyBuilder":
        self._device_bind_rule_external_request_body.rule_ids = rule_ids
        return self

    def build(self) -> "DeviceBindRuleExternalRequestBody":
        return self._device_bind_rule_external_request_body
