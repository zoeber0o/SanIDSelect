# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MindMap(object):
    _types = {
        "parent_id": str,
    }

    def __init__(self, d=None):
        self.parent_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MindMapBuilder":
        return MindMapBuilder()


class MindMapBuilder(object):
    def __init__(self) -> None:
        self._mind_map = MindMap()

    def parent_id(self, parent_id: str) -> "MindMapBuilder":
        self._mind_map.parent_id = parent_id
        return self

    def build(self) -> "MindMap":
        return self._mind_map
