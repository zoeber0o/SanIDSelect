# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ReactionList(object):
    _types = {
        "type": str,
        "count": int,
    }

    def __init__(self, d=None):
        self.type: Optional[str] = None
        self.count: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ReactionListBuilder":
        return ReactionListBuilder()


class ReactionListBuilder(object):
    def __init__(self) -> None:
        self._reaction_list = ReactionList()

    def type(self, type: str) -> "ReactionListBuilder":
        self._reaction_list.type = type
        return self

    def count(self, count: int) -> "ReactionListBuilder":
        self._reaction_list.count = count
        return self

    def build(self) -> "ReactionList":
        return self._reaction_list
