# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .filter import Filter
from .common import Common


class ListCountryRegionRequestBody(object):
    _types = {
        "filter": Filter,
        "common": Common,
    }

    def __init__(self, d=None):
        self.filter: Optional[Filter] = None
        self.common: Optional[Common] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ListCountryRegionRequestBodyBuilder":
        return ListCountryRegionRequestBodyBuilder()


class ListCountryRegionRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._list_country_region_request_body = ListCountryRegionRequestBody()

    def filter(self, filter: Filter) -> "ListCountryRegionRequestBodyBuilder":
        self._list_country_region_request_body.filter = filter
        return self

    def common(self, common: Common) -> "ListCountryRegionRequestBodyBuilder":
        self._list_country_region_request_body.common = common
        return self

    def build(self) -> "ListCountryRegionRequestBody":
        return self._list_country_region_request_body
