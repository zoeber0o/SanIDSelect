# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MeetingWebinarSetting(object):
    _types = {
        "webinar_type": int,
    }

    def __init__(self, d=None):
        self.webinar_type: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MeetingWebinarSettingBuilder":
        return MeetingWebinarSettingBuilder()


class MeetingWebinarSettingBuilder(object):
    def __init__(self) -> None:
        self._meeting_webinar_setting = MeetingWebinarSetting()

    def webinar_type(self, webinar_type: int) -> "MeetingWebinarSettingBuilder":
        self._meeting_webinar_setting.webinar_type = webinar_type
        return self

    def build(self) -> "MeetingWebinarSetting":
        return self._meeting_webinar_setting
