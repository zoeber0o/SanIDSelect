# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .room import Room


class GetRoomResponseBody(object):
    _types = {
        "room": Room,
    }

    def __init__(self, d=None):
        self.room: Optional[Room] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetRoomResponseBodyBuilder":
        return GetRoomResponseBodyBuilder()


class GetRoomResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_room_response_body = GetRoomResponseBody()

    def room(self, room: Room) -> "GetRoomResponseBodyBuilder":
        self._get_room_response_body.room = room
        return self

    def build(self) -> "GetRoomResponseBody":
        return self._get_room_response_body
