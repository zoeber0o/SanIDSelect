# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MeetingUser(object):
    _types = {
        "id": str,
        "user_type": int,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.user_type: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MeetingUserBuilder":
        return MeetingUserBuilder()


class MeetingUserBuilder(object):
    def __init__(self) -> None:
        self._meeting_user = MeetingUser()

    def id(self, id: str) -> "MeetingUserBuilder":
        self._meeting_user.id = id
        return self

    def user_type(self, user_type: int) -> "MeetingUserBuilder":
        self._meeting_user.user_type = user_type
        return self

    def build(self) -> "MeetingUser":
        return self._meeting_user
