# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .reserve_admin_config import ReserveAdminConfig


class PatchReserveConfigAdminRequestBody(object):
    _types = {
        "scope_type": int,
        "reserve_admin_config": ReserveAdminConfig,
    }

    def __init__(self, d=None):
        self.scope_type: Optional[int] = None
        self.reserve_admin_config: Optional[ReserveAdminConfig] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PatchReserveConfigAdminRequestBodyBuilder":
        return PatchReserveConfigAdminRequestBodyBuilder()


class PatchReserveConfigAdminRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._patch_reserve_config_admin_request_body = PatchReserveConfigAdminRequestBody()

    def scope_type(self, scope_type: int) -> "PatchReserveConfigAdminRequestBodyBuilder":
        self._patch_reserve_config_admin_request_body.scope_type = scope_type
        return self

    def reserve_admin_config(self,
                             reserve_admin_config: ReserveAdminConfig) -> "PatchReserveConfigAdminRequestBodyBuilder":
        self._patch_reserve_config_admin_request_body.reserve_admin_config = reserve_admin_config
        return self

    def build(self) -> "PatchReserveConfigAdminRequestBody":
        return self._patch_reserve_config_admin_request_body
