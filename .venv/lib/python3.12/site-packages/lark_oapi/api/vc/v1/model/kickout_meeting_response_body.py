# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .meeting_participant_result import MeetingParticipantResult


class KickoutMeetingResponseBody(object):
    _types = {
        "kickout_results": List[MeetingParticipantResult],
    }

    def __init__(self, d=None):
        self.kickout_results: Optional[List[MeetingParticipantResult]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "KickoutMeetingResponseBodyBuilder":
        return KickoutMeetingResponseBodyBuilder()


class KickoutMeetingResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._kickout_meeting_response_body = KickoutMeetingResponseBody()

    def kickout_results(self, kickout_results: List[MeetingParticipantResult]) -> "KickoutMeetingResponseBodyBuilder":
        self._kickout_meeting_response_body.kickout_results = kickout_results
        return self

    def build(self) -> "KickoutMeetingResponseBody":
        return self._kickout_meeting_response_body
