# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ObjectiveCheckParam(object):
    _types = {
        "params": List[int],
    }

    def __init__(self, d=None):
        self.params: Optional[List[int]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ObjectiveCheckParamBuilder":
        return ObjectiveCheckParamBuilder()


class ObjectiveCheckParamBuilder(object):
    def __init__(self) -> None:
        self._objective_check_param = ObjectiveCheckParam()

    def params(self, params: List[int]) -> "ObjectiveCheckParamBuilder":
        self._objective_check_param.params = params
        return self

    def build(self) -> "ObjectiveCheckParam":
        return self._objective_check_param
