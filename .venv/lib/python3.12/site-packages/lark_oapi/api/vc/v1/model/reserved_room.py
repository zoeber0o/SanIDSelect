# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ReservedRoom(object):
    _types = {
        "room_id": str,
        "room_name": str,
    }

    def __init__(self, d=None):
        self.room_id: Optional[str] = None
        self.room_name: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ReservedRoomBuilder":
        return ReservedRoomBuilder()


class ReservedRoomBuilder(object):
    def __init__(self) -> None:
        self._reserved_room = ReservedRoom()

    def room_id(self, room_id: str) -> "ReservedRoomBuilder":
        self._reserved_room.room_id = room_id
        return self

    def room_name(self, room_name: str) -> "ReservedRoomBuilder":
        self._reserved_room.room_name = room_name
        return self

    def build(self) -> "ReservedRoom":
        return self._reserved_room
