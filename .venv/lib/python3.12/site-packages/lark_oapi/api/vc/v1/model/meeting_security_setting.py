# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user_id import UserId


class MeetingSecuritySetting(object):
    _types = {
        "security_level": int,
        "group_ids": List[str],
        "user_ids": List[UserId],
        "room_ids": List[str],
        "has_set_security_contacts_and_group": bool,
    }

    def __init__(self, d=None):
        self.security_level: Optional[int] = None
        self.group_ids: Optional[List[str]] = None
        self.user_ids: Optional[List[UserId]] = None
        self.room_ids: Optional[List[str]] = None
        self.has_set_security_contacts_and_group: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MeetingSecuritySettingBuilder":
        return MeetingSecuritySettingBuilder()


class MeetingSecuritySettingBuilder(object):
    def __init__(self) -> None:
        self._meeting_security_setting = MeetingSecuritySetting()

    def security_level(self, security_level: int) -> "MeetingSecuritySettingBuilder":
        self._meeting_security_setting.security_level = security_level
        return self

    def group_ids(self, group_ids: List[str]) -> "MeetingSecuritySettingBuilder":
        self._meeting_security_setting.group_ids = group_ids
        return self

    def user_ids(self, user_ids: List[UserId]) -> "MeetingSecuritySettingBuilder":
        self._meeting_security_setting.user_ids = user_ids
        return self

    def room_ids(self, room_ids: List[str]) -> "MeetingSecuritySettingBuilder":
        self._meeting_security_setting.room_ids = room_ids
        return self

    def has_set_security_contacts_and_group(self,
                                            has_set_security_contacts_and_group: bool) -> "MeetingSecuritySettingBuilder":
        self._meeting_security_setting.has_set_security_contacts_and_group = has_set_security_contacts_and_group
        return self

    def build(self) -> "MeetingSecuritySetting":
        return self._meeting_security_setting
