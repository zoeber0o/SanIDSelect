# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MyAiAvPluginCardVariables(object):
    _types = {
        "content": str,
    }

    def __init__(self, d=None):
        self.content: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MyAiAvPluginCardVariablesBuilder":
        return MyAiAvPluginCardVariablesBuilder()


class MyAiAvPluginCardVariablesBuilder(object):
    def __init__(self) -> None:
        self._my_ai_av_plugin_card_variables = MyAiAvPluginCardVariables()

    def content(self, content: str) -> "MyAiAvPluginCardVariablesBuilder":
        self._my_ai_av_plugin_card_variables.content = content
        return self

    def build(self) -> "MyAiAvPluginCardVariables":
        return self._my_ai_av_plugin_card_variables
