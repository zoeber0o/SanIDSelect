# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .room import Room


class CreateRoomResponseBody(object):
    _types = {
        "room": Room,
    }

    def __init__(self, d=None):
        self.room: Optional[Room] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateRoomResponseBodyBuilder":
        return CreateRoomResponseBodyBuilder()


class CreateRoomResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_room_response_body = CreateRoomResponseBody()

    def room(self, room: Room) -> "CreateRoomResponseBodyBuilder":
        self._create_room_response_body.room = room
        return self

    def build(self) -> "CreateRoomResponseBody":
        return self._create_room_response_body
