# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .employee_type import EmployeeType


class GetEmployeeTypeResponseBody(object):
    _types = {
        "employee_type": EmployeeType,
    }

    def __init__(self, d=None):
        self.employee_type: Optional[EmployeeType] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetEmployeeTypeResponseBodyBuilder":
        return GetEmployeeTypeResponseBodyBuilder()


class GetEmployeeTypeResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_employee_type_response_body = GetEmployeeTypeResponseBody()

    def employee_type(self, employee_type: EmployeeType) -> "GetEmployeeTypeResponseBodyBuilder":
        self._get_employee_type_response_body.employee_type = employee_type
        return self

    def build(self) -> "GetEmployeeTypeResponseBody":
        return self._get_employee_type_response_body
