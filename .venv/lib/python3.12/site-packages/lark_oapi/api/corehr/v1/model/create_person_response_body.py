# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .person import Person


class CreatePersonResponseBody(object):
    _types = {
        "person": Person,
    }

    def __init__(self, d=None):
        self.person: Optional[Person] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreatePersonResponseBodyBuilder":
        return CreatePersonResponseBodyBuilder()


class CreatePersonResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_person_response_body = CreatePersonResponseBody()

    def person(self, person: Person) -> "CreatePersonResponseBodyBuilder":
        self._create_person_response_body.person = person
        return self

    def build(self) -> "CreatePersonResponseBody":
        return self._create_person_response_body
