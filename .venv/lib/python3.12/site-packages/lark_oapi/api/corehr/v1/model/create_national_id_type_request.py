# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .national_id_type import NationalIdType


class CreateNationalIdTypeRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.client_token: Optional[str] = None
        self.request_body: Optional[NationalIdType] = None

    @staticmethod
    def builder() -> "CreateNationalIdTypeRequestBuilder":
        return CreateNationalIdTypeRequestBuilder()


class CreateNationalIdTypeRequestBuilder(object):

    def __init__(self) -> None:
        create_national_id_type_request = CreateNationalIdTypeRequest()
        create_national_id_type_request.http_method = HttpMethod.POST
        create_national_id_type_request.uri = "/open-apis/corehr/v1/national_id_types"
        create_national_id_type_request.token_types = {AccessTokenType.TENANT}
        self._create_national_id_type_request: CreateNationalIdTypeRequest = create_national_id_type_request

    def client_token(self, client_token: str) -> "CreateNationalIdTypeRequestBuilder":
        self._create_national_id_type_request.client_token = client_token
        self._create_national_id_type_request.add_query("client_token", client_token)
        return self

    def request_body(self, request_body: NationalIdType) -> "CreateNationalIdTypeRequestBuilder":
        self._create_national_id_type_request.request_body = request_body
        self._create_national_id_type_request.body = request_body
        return self

    def build(self) -> CreateNationalIdTypeRequest:
        return self._create_national_id_type_request
