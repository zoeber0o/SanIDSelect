# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class FormFieldVariableDatetimeValue(object):
    _types = {
        "value": int,
        "zone": str,
    }

    def __init__(self, d=None):
        self.value: Optional[int] = None
        self.zone: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "FormFieldVariableDatetimeValueBuilder":
        return FormFieldVariableDatetimeValueBuilder()


class FormFieldVariableDatetimeValueBuilder(object):
    def __init__(self) -> None:
        self._form_field_variable_datetime_value = FormFieldVariableDatetimeValue()

    def value(self, value: int) -> "FormFieldVariableDatetimeValueBuilder":
        self._form_field_variable_datetime_value.value = value
        return self

    def zone(self, zone: str) -> "FormFieldVariableDatetimeValueBuilder":
        self._form_field_variable_datetime_value.zone = zone
        return self

    def build(self) -> "FormFieldVariableDatetimeValue":
        return self._form_field_variable_datetime_value
