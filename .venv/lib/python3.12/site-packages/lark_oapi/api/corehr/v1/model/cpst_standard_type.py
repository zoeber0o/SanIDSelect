# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class CpstStandardType(object):
    _types = {
        "api_name": str,
    }

    def __init__(self, d=None):
        self.api_name: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CpstStandardTypeBuilder":
        return CpstStandardTypeBuilder()


class CpstStandardTypeBuilder(object):
    def __init__(self) -> None:
        self._cpst_standard_type = CpstStandardType()

    def api_name(self, api_name: str) -> "CpstStandardTypeBuilder":
        self._cpst_standard_type.api_name = api_name
        return self

    def build(self) -> "CpstStandardType":
        return self._cpst_standard_type
