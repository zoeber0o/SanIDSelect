# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class Process(object):
    _types = {
        "id": str,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ProcessBuilder":
        return ProcessBuilder()


class ProcessBuilder(object):
    def __init__(self) -> None:
        self._process = Process()

    def id(self, id: str) -> "ProcessBuilder":
        self._process.id = id
        return self

    def build(self) -> "Process":
        return self._process
