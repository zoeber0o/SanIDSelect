# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class TerminateSignatureFailIdAndReason(object):
    _types = {
        "signature_file_id": str,
        "fail_reason": str,
    }

    def __init__(self, d=None):
        self.signature_file_id: Optional[str] = None
        self.fail_reason: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "TerminateSignatureFailIdAndReasonBuilder":
        return TerminateSignatureFailIdAndReasonBuilder()


class TerminateSignatureFailIdAndReasonBuilder(object):
    def __init__(self) -> None:
        self._terminate_signature_fail_id_and_reason = TerminateSignatureFailIdAndReason()

    def signature_file_id(self, signature_file_id: str) -> "TerminateSignatureFailIdAndReasonBuilder":
        self._terminate_signature_fail_id_and_reason.signature_file_id = signature_file_id
        return self

    def fail_reason(self, fail_reason: str) -> "TerminateSignatureFailIdAndReasonBuilder":
        self._terminate_signature_fail_id_and_reason.fail_reason = fail_reason
        return self

    def build(self) -> "TerminateSignatureFailIdAndReason":
        return self._terminate_signature_fail_id_and_reason
