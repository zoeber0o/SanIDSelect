# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .process_approver import ProcessApprover


class UpdateProcessApproverRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.user_id_type: Optional[str] = None
        self.department_id_type: Optional[str] = None
        self.process_id: Optional[str] = None
        self.approver_id: Optional[str] = None
        self.request_body: Optional[ProcessApprover] = None

    @staticmethod
    def builder() -> "UpdateProcessApproverRequestBuilder":
        return UpdateProcessApproverRequestBuilder()


class UpdateProcessApproverRequestBuilder(object):

    def __init__(self) -> None:
        update_process_approver_request = UpdateProcessApproverRequest()
        update_process_approver_request.http_method = HttpMethod.PUT
        update_process_approver_request.uri = "/open-apis/corehr/v2/processes/:process_id/approvers/:approver_id"
        update_process_approver_request.token_types = {AccessTokenType.TENANT}
        self._update_process_approver_request: UpdateProcessApproverRequest = update_process_approver_request

    def user_id_type(self, user_id_type: str) -> "UpdateProcessApproverRequestBuilder":
        self._update_process_approver_request.user_id_type = user_id_type
        self._update_process_approver_request.add_query("user_id_type", user_id_type)
        return self

    def department_id_type(self, department_id_type: str) -> "UpdateProcessApproverRequestBuilder":
        self._update_process_approver_request.department_id_type = department_id_type
        self._update_process_approver_request.add_query("department_id_type", department_id_type)
        return self

    def process_id(self, process_id: str) -> "UpdateProcessApproverRequestBuilder":
        self._update_process_approver_request.process_id = process_id
        self._update_process_approver_request.paths["process_id"] = str(process_id)
        return self

    def approver_id(self, approver_id: str) -> "UpdateProcessApproverRequestBuilder":
        self._update_process_approver_request.approver_id = approver_id
        self._update_process_approver_request.paths["approver_id"] = str(approver_id)
        return self

    def request_body(self, request_body: ProcessApprover) -> "UpdateProcessApproverRequestBuilder":
        self._update_process_approver_request.request_body = request_body
        self._update_process_approver_request.body = request_body
        return self

    def build(self) -> UpdateProcessApproverRequest:
        return self._update_process_approver_request
