# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ProfileSettingCitizenshipStatus(object):
    _types = {
        "country_region": str,
        "citizenship_status": str,
    }

    def __init__(self, d=None):
        self.country_region: Optional[str] = None
        self.citizenship_status: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ProfileSettingCitizenshipStatusBuilder":
        return ProfileSettingCitizenshipStatusBuilder()


class ProfileSettingCitizenshipStatusBuilder(object):
    def __init__(self) -> None:
        self._profile_setting_citizenship_status = ProfileSettingCitizenshipStatus()

    def country_region(self, country_region: str) -> "ProfileSettingCitizenshipStatusBuilder":
        self._profile_setting_citizenship_status.country_region = country_region
        return self

    def citizenship_status(self, citizenship_status: str) -> "ProfileSettingCitizenshipStatusBuilder":
        self._profile_setting_citizenship_status.citizenship_status = citizenship_status
        return self

    def build(self) -> "ProfileSettingCitizenshipStatus":
        return self._profile_setting_citizenship_status
