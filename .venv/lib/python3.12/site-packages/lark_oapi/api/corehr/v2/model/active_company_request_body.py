# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ActiveCompanyRequestBody(object):
    _types = {
        "company_id": str,
        "effective_time": str,
        "active": bool,
        "operation_reason": str,
    }

    def __init__(self, d=None):
        self.company_id: Optional[str] = None
        self.effective_time: Optional[str] = None
        self.active: Optional[bool] = None
        self.operation_reason: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ActiveCompanyRequestBodyBuilder":
        return ActiveCompanyRequestBodyBuilder()


class ActiveCompanyRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._active_company_request_body = ActiveCompanyRequestBody()

    def company_id(self, company_id: str) -> "ActiveCompanyRequestBodyBuilder":
        self._active_company_request_body.company_id = company_id
        return self

    def effective_time(self, effective_time: str) -> "ActiveCompanyRequestBodyBuilder":
        self._active_company_request_body.effective_time = effective_time
        return self

    def active(self, active: bool) -> "ActiveCompanyRequestBodyBuilder":
        self._active_company_request_body.active = active
        return self

    def operation_reason(self, operation_reason: str) -> "ActiveCompanyRequestBodyBuilder":
        self._active_company_request_body.operation_reason = operation_reason
        return self

    def build(self) -> "ActiveCompanyRequestBody":
        return self._active_company_request_body
