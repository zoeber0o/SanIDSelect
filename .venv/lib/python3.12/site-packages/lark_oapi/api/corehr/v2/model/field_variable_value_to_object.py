# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class FieldVariableValueToObject(object):
    _types = {
        "wk_id": str,
        "wk_api_name": str,
    }

    def __init__(self, d=None):
        self.wk_id: Optional[str] = None
        self.wk_api_name: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "FieldVariableValueToObjectBuilder":
        return FieldVariableValueToObjectBuilder()


class FieldVariableValueToObjectBuilder(object):
    def __init__(self) -> None:
        self._field_variable_value_to_object = FieldVariableValueToObject()

    def wk_id(self, wk_id: str) -> "FieldVariableValueToObjectBuilder":
        self._field_variable_value_to_object.wk_id = wk_id
        return self

    def wk_api_name(self, wk_api_name: str) -> "FieldVariableValueToObjectBuilder":
        self._field_variable_value_to_object.wk_api_name = wk_api_name
        return self

    def build(self) -> "FieldVariableValueToObject":
        return self._field_variable_value_to_object
