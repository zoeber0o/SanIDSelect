# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OrgdraftDepartmentId(object):
    _types = {
        "department_id": str,
        "draft_department_id": str,
    }

    def __init__(self, d=None):
        self.department_id: Optional[str] = None
        self.draft_department_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OrgdraftDepartmentIdBuilder":
        return OrgdraftDepartmentIdBuilder()


class OrgdraftDepartmentIdBuilder(object):
    def __init__(self) -> None:
        self._orgdraft_department_id = OrgdraftDepartmentId()

    def department_id(self, department_id: str) -> "OrgdraftDepartmentIdBuilder":
        self._orgdraft_department_id.department_id = department_id
        return self

    def draft_department_id(self, draft_department_id: str) -> "OrgdraftDepartmentIdBuilder":
        self._orgdraft_department_id.draft_department_id = draft_department_id
        return self

    def build(self) -> "OrgdraftDepartmentId":
        return self._orgdraft_department_id
