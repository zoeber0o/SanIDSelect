# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class BatchGetPathwayRequestBody(object):
    _types = {
        "pathway_ids": List[str],
    }

    def __init__(self, d=None):
        self.pathway_ids: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchGetPathwayRequestBodyBuilder":
        return BatchGetPathwayRequestBodyBuilder()


class BatchGetPathwayRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_get_pathway_request_body = BatchGetPathwayRequestBody()

    def pathway_ids(self, pathway_ids: List[str]) -> "BatchGetPathwayRequestBodyBuilder":
        self._batch_get_pathway_request_body.pathway_ids = pathway_ids
        return self

    def build(self) -> "BatchGetPathwayRequestBody":
        return self._batch_get_pathway_request_body
