# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class QueryPositionRequestBody(object):
    _types = {
        "department_ids": List[str],
        "effective_time": str,
        "active": bool,
        "fields": List[str],
        "position_ids": List[str],
        "position_codes": List[str],
    }

    def __init__(self, d=None):
        self.department_ids: Optional[List[str]] = None
        self.effective_time: Optional[str] = None
        self.active: Optional[bool] = None
        self.fields: Optional[List[str]] = None
        self.position_ids: Optional[List[str]] = None
        self.position_codes: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryPositionRequestBodyBuilder":
        return QueryPositionRequestBodyBuilder()


class QueryPositionRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._query_position_request_body = QueryPositionRequestBody()

    def department_ids(self, department_ids: List[str]) -> "QueryPositionRequestBodyBuilder":
        self._query_position_request_body.department_ids = department_ids
        return self

    def effective_time(self, effective_time: str) -> "QueryPositionRequestBodyBuilder":
        self._query_position_request_body.effective_time = effective_time
        return self

    def active(self, active: bool) -> "QueryPositionRequestBodyBuilder":
        self._query_position_request_body.active = active
        return self

    def fields(self, fields: List[str]) -> "QueryPositionRequestBodyBuilder":
        self._query_position_request_body.fields = fields
        return self

    def position_ids(self, position_ids: List[str]) -> "QueryPositionRequestBodyBuilder":
        self._query_position_request_body.position_ids = position_ids
        return self

    def position_codes(self, position_codes: List[str]) -> "QueryPositionRequestBodyBuilder":
        self._query_position_request_body.position_codes = position_codes
        return self

    def build(self) -> "QueryPositionRequestBody":
        return self._query_position_request_body
