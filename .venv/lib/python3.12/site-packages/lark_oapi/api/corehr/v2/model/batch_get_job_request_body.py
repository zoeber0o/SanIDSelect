# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class BatchGetJobRequestBody(object):
    _types = {
        "job_ids": List[str],
        "job_codes": List[str],
        "fields": List[str],
    }

    def __init__(self, d=None):
        self.job_ids: Optional[List[str]] = None
        self.job_codes: Optional[List[str]] = None
        self.fields: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchGetJobRequestBodyBuilder":
        return BatchGetJobRequestBodyBuilder()


class BatchGetJobRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_get_job_request_body = BatchGetJobRequestBody()

    def job_ids(self, job_ids: List[str]) -> "BatchGetJobRequestBodyBuilder":
        self._batch_get_job_request_body.job_ids = job_ids
        return self

    def job_codes(self, job_codes: List[str]) -> "BatchGetJobRequestBodyBuilder":
        self._batch_get_job_request_body.job_codes = job_codes
        return self

    def fields(self, fields: List[str]) -> "BatchGetJobRequestBodyBuilder":
        self._batch_get_job_request_body.fields = fields
        return self

    def build(self) -> "BatchGetJobRequestBody":
        return self._batch_get_job_request_body
