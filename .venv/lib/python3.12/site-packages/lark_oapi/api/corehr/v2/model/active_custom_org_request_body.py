# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ActiveCustomOrgRequestBody(object):
    _types = {
        "org_id": str,
        "object_api_name": str,
        "active": bool,
        "effective_time": str,
    }

    def __init__(self, d=None):
        self.org_id: Optional[str] = None
        self.object_api_name: Optional[str] = None
        self.active: Optional[bool] = None
        self.effective_time: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ActiveCustomOrgRequestBodyBuilder":
        return ActiveCustomOrgRequestBodyBuilder()


class ActiveCustomOrgRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._active_custom_org_request_body = ActiveCustomOrgRequestBody()

    def org_id(self, org_id: str) -> "ActiveCustomOrgRequestBodyBuilder":
        self._active_custom_org_request_body.org_id = org_id
        return self

    def object_api_name(self, object_api_name: str) -> "ActiveCustomOrgRequestBodyBuilder":
        self._active_custom_org_request_body.object_api_name = object_api_name
        return self

    def active(self, active: bool) -> "ActiveCustomOrgRequestBodyBuilder":
        self._active_custom_org_request_body.active = active
        return self

    def effective_time(self, effective_time: str) -> "ActiveCustomOrgRequestBodyBuilder":
        self._active_custom_org_request_body.effective_time = effective_time
        return self

    def build(self) -> "ActiveCustomOrgRequestBody":
        return self._active_custom_org_request_body
