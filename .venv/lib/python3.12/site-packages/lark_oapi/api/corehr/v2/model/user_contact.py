# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class UserContact(object):
    _types = {
        "user_ids": List[str],
        "mobile": str,
    }

    def __init__(self, d=None):
        self.user_ids: Optional[List[str]] = None
        self.mobile: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "UserContactBuilder":
        return UserContactBuilder()


class UserContactBuilder(object):
    def __init__(self) -> None:
        self._user_contact = UserContact()

    def user_ids(self, user_ids: List[str]) -> "UserContactBuilder":
        self._user_contact.user_ids = user_ids
        return self

    def mobile(self, mobile: str) -> "UserContactBuilder":
        self._user_contact.mobile = mobile
        return self

    def build(self) -> "UserContact":
        return self._user_contact
