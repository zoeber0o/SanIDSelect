# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .batch_get_job_request_body import BatchGetJobRequestBody


class BatchGetJobRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.user_id_type: Optional[str] = None
        self.request_body: Optional[BatchGetJobRequestBody] = None

    @staticmethod
    def builder() -> "BatchGetJobRequestBuilder":
        return BatchGetJobRequestBuilder()


class BatchGetJobRequestBuilder(object):

    def __init__(self) -> None:
        batch_get_job_request = BatchGetJobRequest()
        batch_get_job_request.http_method = HttpMethod.POST
        batch_get_job_request.uri = "/open-apis/corehr/v2/jobs/batch_get"
        batch_get_job_request.token_types = {AccessTokenType.TENANT}
        self._batch_get_job_request: BatchGetJobRequest = batch_get_job_request

    def user_id_type(self, user_id_type: str) -> "BatchGetJobRequestBuilder":
        self._batch_get_job_request.user_id_type = user_id_type
        self._batch_get_job_request.add_query("user_id_type", user_id_type)
        return self

    def request_body(self, request_body: BatchGetJobRequestBody) -> "BatchGetJobRequestBuilder":
        self._batch_get_job_request.request_body = request_body
        self._batch_get_job_request.body = request_body
        return self

    def build(self) -> BatchGetJobRequest:
        return self._batch_get_job_request
