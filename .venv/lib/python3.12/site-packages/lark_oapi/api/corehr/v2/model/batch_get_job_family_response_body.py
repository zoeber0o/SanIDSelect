# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .job_family import JobFamily


class BatchGetJobFamilyResponseBody(object):
    _types = {
        "items": List[JobFamily],
    }

    def __init__(self, d=None):
        self.items: Optional[List[JobFamily]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchGetJobFamilyResponseBodyBuilder":
        return BatchGetJobFamilyResponseBodyBuilder()


class BatchGetJobFamilyResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_get_job_family_response_body = BatchGetJobFamilyResponseBody()

    def items(self, items: List[JobFamily]) -> "BatchGetJobFamilyResponseBodyBuilder":
        self._batch_get_job_family_response_body.items = items
        return self

    def build(self) -> "BatchGetJobFamilyResponseBody":
        return self._batch_get_job_family_response_body
