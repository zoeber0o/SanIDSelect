# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .probation_info_for_submit import ProbationInfoForSubmit


class SubmitProbationResponseBody(object):
    _types = {
        "probation_info": ProbationInfoForSubmit,
    }

    def __init__(self, d=None):
        self.probation_info: Optional[ProbationInfoForSubmit] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SubmitProbationResponseBodyBuilder":
        return SubmitProbationResponseBodyBuilder()


class SubmitProbationResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._submit_probation_response_body = SubmitProbationResponseBody()

    def probation_info(self, probation_info: ProbationInfoForSubmit) -> "SubmitProbationResponseBodyBuilder":
        self._submit_probation_response_body.probation_info = probation_info
        return self

    def build(self) -> "SubmitProbationResponseBody":
        return self._submit_probation_response_body
