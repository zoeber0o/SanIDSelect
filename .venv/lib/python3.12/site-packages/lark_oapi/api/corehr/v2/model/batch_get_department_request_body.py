# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class BatchGetDepartmentRequestBody(object):
    _types = {
        "department_id_list": List[str],
        "fields": List[str],
        "department_name_list": List[str],
    }

    def __init__(self, d=None):
        self.department_id_list: Optional[List[str]] = None
        self.fields: Optional[List[str]] = None
        self.department_name_list: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchGetDepartmentRequestBodyBuilder":
        return BatchGetDepartmentRequestBodyBuilder()


class BatchGetDepartmentRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_get_department_request_body = BatchGetDepartmentRequestBody()

    def department_id_list(self, department_id_list: List[str]) -> "BatchGetDepartmentRequestBodyBuilder":
        self._batch_get_department_request_body.department_id_list = department_id_list
        return self

    def fields(self, fields: List[str]) -> "BatchGetDepartmentRequestBodyBuilder":
        self._batch_get_department_request_body.fields = fields
        return self

    def department_name_list(self, department_name_list: List[str]) -> "BatchGetDepartmentRequestBodyBuilder":
        self._batch_get_department_request_body.department_name_list = department_name_list
        return self

    def build(self) -> "BatchGetDepartmentRequestBody":
        return self._batch_get_department_request_body
