# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class EmploymentCustomObjectRecord(object):
    _types = {
        "employment_id": str,
        "record_list": str,
    }

    def __init__(self, d=None):
        self.employment_id: Optional[str] = None
        self.record_list: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "EmploymentCustomObjectRecordBuilder":
        return EmploymentCustomObjectRecordBuilder()


class EmploymentCustomObjectRecordBuilder(object):
    def __init__(self) -> None:
        self._employment_custom_object_record = EmploymentCustomObjectRecord()

    def employment_id(self, employment_id: str) -> "EmploymentCustomObjectRecordBuilder":
        self._employment_custom_object_record.employment_id = employment_id
        return self

    def record_list(self, record_list: str) -> "EmploymentCustomObjectRecordBuilder":
        self._employment_custom_object_record.record_list = record_list
        return self

    def build(self) -> "EmploymentCustomObjectRecord":
        return self._employment_custom_object_record
