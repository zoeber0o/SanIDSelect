# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .batch_get_pathway_request_body import BatchGetPathwayRequestBody


class BatchGetPathwayRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.request_body: Optional[BatchGetPathwayRequestBody] = None

    @staticmethod
    def builder() -> "BatchGetPathwayRequestBuilder":
        return BatchGetPathwayRequestBuilder()


class BatchGetPathwayRequestBuilder(object):

    def __init__(self) -> None:
        batch_get_pathway_request = BatchGetPathwayRequest()
        batch_get_pathway_request.http_method = HttpMethod.POST
        batch_get_pathway_request.uri = "/open-apis/corehr/v2/pathways/batch_get"
        batch_get_pathway_request.token_types = {AccessTokenType.TENANT}
        self._batch_get_pathway_request: BatchGetPathwayRequest = batch_get_pathway_request

    def request_body(self, request_body: BatchGetPathwayRequestBody) -> "BatchGetPathwayRequestBuilder":
        self._batch_get_pathway_request.request_body = request_body
        self._batch_get_pathway_request.body = request_body
        return self

    def build(self) -> BatchGetPathwayRequest:
        return self._batch_get_pathway_request
