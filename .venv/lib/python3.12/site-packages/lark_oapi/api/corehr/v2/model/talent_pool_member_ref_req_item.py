# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .object_field_data import ObjectFieldData


class TalentPoolMemberRefReqItem(object):
    _types = {
        "employment_id": str,
        "tagged_at_date": str,
        "in_reason": str,
        "removed_at_date": str,
        "out_reason": str,
        "custom_fields": List[ObjectFieldData],
    }

    def __init__(self, d=None):
        self.employment_id: Optional[str] = None
        self.tagged_at_date: Optional[str] = None
        self.in_reason: Optional[str] = None
        self.removed_at_date: Optional[str] = None
        self.out_reason: Optional[str] = None
        self.custom_fields: Optional[List[ObjectFieldData]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "TalentPoolMemberRefReqItemBuilder":
        return TalentPoolMemberRefReqItemBuilder()


class TalentPoolMemberRefReqItemBuilder(object):
    def __init__(self) -> None:
        self._talent_pool_member_ref_req_item = TalentPoolMemberRefReqItem()

    def employment_id(self, employment_id: str) -> "TalentPoolMemberRefReqItemBuilder":
        self._talent_pool_member_ref_req_item.employment_id = employment_id
        return self

    def tagged_at_date(self, tagged_at_date: str) -> "TalentPoolMemberRefReqItemBuilder":
        self._talent_pool_member_ref_req_item.tagged_at_date = tagged_at_date
        return self

    def in_reason(self, in_reason: str) -> "TalentPoolMemberRefReqItemBuilder":
        self._talent_pool_member_ref_req_item.in_reason = in_reason
        return self

    def removed_at_date(self, removed_at_date: str) -> "TalentPoolMemberRefReqItemBuilder":
        self._talent_pool_member_ref_req_item.removed_at_date = removed_at_date
        return self

    def out_reason(self, out_reason: str) -> "TalentPoolMemberRefReqItemBuilder":
        self._talent_pool_member_ref_req_item.out_reason = out_reason
        return self

    def custom_fields(self, custom_fields: List[ObjectFieldData]) -> "TalentPoolMemberRefReqItemBuilder":
        self._talent_pool_member_ref_req_item.custom_fields = custom_fields
        return self

    def build(self) -> "TalentPoolMemberRefReqItem":
        return self._talent_pool_member_ref_req_item
