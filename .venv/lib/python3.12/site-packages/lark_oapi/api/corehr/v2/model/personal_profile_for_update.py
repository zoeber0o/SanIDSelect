# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .file import File


class PersonalProfileForUpdate(object):
    _types = {
        "personal_profile_type": str,
        "files": List[File],
    }

    def __init__(self, d=None):
        self.personal_profile_type: Optional[str] = None
        self.files: Optional[List[File]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PersonalProfileForUpdateBuilder":
        return PersonalProfileForUpdateBuilder()


class PersonalProfileForUpdateBuilder(object):
    def __init__(self) -> None:
        self._personal_profile_for_update = PersonalProfileForUpdate()

    def personal_profile_type(self, personal_profile_type: str) -> "PersonalProfileForUpdateBuilder":
        self._personal_profile_for_update.personal_profile_type = personal_profile_type
        return self

    def files(self, files: List[File]) -> "PersonalProfileForUpdateBuilder":
        self._personal_profile_for_update.files = files
        return self

    def build(self) -> "PersonalProfileForUpdate":
        return self._personal_profile_for_update
