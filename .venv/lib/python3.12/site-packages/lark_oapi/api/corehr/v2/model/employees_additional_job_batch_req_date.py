# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class EmployeesAdditionalJobBatchReqDate(object):
    _types = {
        "start": str,
        "end": str,
    }

    def __init__(self, d=None):
        self.start: Optional[str] = None
        self.end: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "EmployeesAdditionalJobBatchReqDateBuilder":
        return EmployeesAdditionalJobBatchReqDateBuilder()


class EmployeesAdditionalJobBatchReqDateBuilder(object):
    def __init__(self) -> None:
        self._employees_additional_job_batch_req_date = EmployeesAdditionalJobBatchReqDate()

    def start(self, start: str) -> "EmployeesAdditionalJobBatchReqDateBuilder":
        self._employees_additional_job_batch_req_date.start = start
        return self

    def end(self, end: str) -> "EmployeesAdditionalJobBatchReqDateBuilder":
        self._employees_additional_job_batch_req_date.end = end
        return self

    def build(self) -> "EmployeesAdditionalJobBatchReqDate":
        return self._employees_additional_job_batch_req_date
