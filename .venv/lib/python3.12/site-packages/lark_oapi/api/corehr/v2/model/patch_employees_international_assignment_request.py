# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .employees_international_assignment_req import EmployeesInternationalAssignmentReq


class PatchEmployeesInternationalAssignmentRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.client_token: Optional[str] = None
        self.user_id_type: Optional[str] = None
        self.department_id_type: Optional[str] = None
        self.international_assignment_id: Optional[str] = None
        self.request_body: Optional[EmployeesInternationalAssignmentReq] = None

    @staticmethod
    def builder() -> "PatchEmployeesInternationalAssignmentRequestBuilder":
        return PatchEmployeesInternationalAssignmentRequestBuilder()


class PatchEmployeesInternationalAssignmentRequestBuilder(object):

    def __init__(self) -> None:
        patch_employees_international_assignment_request = PatchEmployeesInternationalAssignmentRequest()
        patch_employees_international_assignment_request.http_method = HttpMethod.PATCH
        patch_employees_international_assignment_request.uri = "/open-apis/corehr/v2/employees/international_assignments/:international_assignment_id"
        patch_employees_international_assignment_request.token_types = {AccessTokenType.TENANT}
        self._patch_employees_international_assignment_request: PatchEmployeesInternationalAssignmentRequest = patch_employees_international_assignment_request

    def client_token(self, client_token: str) -> "PatchEmployeesInternationalAssignmentRequestBuilder":
        self._patch_employees_international_assignment_request.client_token = client_token
        self._patch_employees_international_assignment_request.add_query("client_token", client_token)
        return self

    def user_id_type(self, user_id_type: str) -> "PatchEmployeesInternationalAssignmentRequestBuilder":
        self._patch_employees_international_assignment_request.user_id_type = user_id_type
        self._patch_employees_international_assignment_request.add_query("user_id_type", user_id_type)
        return self

    def department_id_type(self, department_id_type: str) -> "PatchEmployeesInternationalAssignmentRequestBuilder":
        self._patch_employees_international_assignment_request.department_id_type = department_id_type
        self._patch_employees_international_assignment_request.add_query("department_id_type", department_id_type)
        return self

    def international_assignment_id(self,
                                    international_assignment_id: str) -> "PatchEmployeesInternationalAssignmentRequestBuilder":
        self._patch_employees_international_assignment_request.international_assignment_id = international_assignment_id
        self._patch_employees_international_assignment_request.paths["international_assignment_id"] = str(
            international_assignment_id)
        return self

    def request_body(self,
                     request_body: EmployeesInternationalAssignmentReq) -> "PatchEmployeesInternationalAssignmentRequestBuilder":
        self._patch_employees_international_assignment_request.request_body = request_body
        self._patch_employees_international_assignment_request.body = request_body
        return self

    def build(self) -> PatchEmployeesInternationalAssignmentRequest:
        return self._patch_employees_international_assignment_request
