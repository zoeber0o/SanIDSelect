# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .employees_international_assignment_resp import EmployeesInternationalAssignmentResp


class CreateEmployeesInternationalAssignmentResponseBody(object):
    _types = {
        "international_assignment": EmployeesInternationalAssignmentResp,
    }

    def __init__(self, d=None):
        self.international_assignment: Optional[EmployeesInternationalAssignmentResp] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateEmployeesInternationalAssignmentResponseBodyBuilder":
        return CreateEmployeesInternationalAssignmentResponseBodyBuilder()


class CreateEmployeesInternationalAssignmentResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_employees_international_assignment_response_body = CreateEmployeesInternationalAssignmentResponseBody()

    def international_assignment(self,
                                 international_assignment: EmployeesInternationalAssignmentResp) -> "CreateEmployeesInternationalAssignmentResponseBodyBuilder":
        self._create_employees_international_assignment_response_body.international_assignment = international_assignment
        return self

    def build(self) -> "CreateEmployeesInternationalAssignmentResponseBody":
        return self._create_employees_international_assignment_response_body
