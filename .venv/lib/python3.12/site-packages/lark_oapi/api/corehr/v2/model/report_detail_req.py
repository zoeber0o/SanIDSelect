# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .workforce_plan_detail_row import WorkforcePlanDetailRow


class ReportDetailReq(object):
    _types = {
        "workforce_plan_id": str,
        "centralized_reporting_project_id": str,
        "items": List[WorkforcePlanDetailRow],
    }

    def __init__(self, d=None):
        self.workforce_plan_id: Optional[str] = None
        self.centralized_reporting_project_id: Optional[str] = None
        self.items: Optional[List[WorkforcePlanDetailRow]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ReportDetailReqBuilder":
        return ReportDetailReqBuilder()


class ReportDetailReqBuilder(object):
    def __init__(self) -> None:
        self._report_detail_req = ReportDetailReq()

    def workforce_plan_id(self, workforce_plan_id: str) -> "ReportDetailReqBuilder":
        self._report_detail_req.workforce_plan_id = workforce_plan_id
        return self

    def centralized_reporting_project_id(self, centralized_reporting_project_id: str) -> "ReportDetailReqBuilder":
        self._report_detail_req.centralized_reporting_project_id = centralized_reporting_project_id
        return self

    def items(self, items: List[WorkforcePlanDetailRow]) -> "ReportDetailReqBuilder":
        self._report_detail_req.items = items
        return self

    def build(self) -> "ReportDetailReq":
        return self._report_detail_req
