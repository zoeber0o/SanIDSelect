# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ActivePathwayRequestBody(object):
    _types = {
        "pathway_id": str,
        "active": bool,
    }

    def __init__(self, d=None):
        self.pathway_id: Optional[str] = None
        self.active: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ActivePathwayRequestBodyBuilder":
        return ActivePathwayRequestBodyBuilder()


class ActivePathwayRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._active_pathway_request_body = ActivePathwayRequestBody()

    def pathway_id(self, pathway_id: str) -> "ActivePathwayRequestBodyBuilder":
        self._active_pathway_request_body.pathway_id = pathway_id
        return self

    def active(self, active: bool) -> "ActivePathwayRequestBodyBuilder":
        self._active_pathway_request_body.active = active
        return self

    def build(self) -> "ActivePathwayRequestBody":
        return self._active_pathway_request_body
