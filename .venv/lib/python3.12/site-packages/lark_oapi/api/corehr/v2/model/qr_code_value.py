# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class QrCodeValue(object):
    _types = {
        "select_value": str,
        "multi_select_value": List[str],
        "bool_value": bool,
    }

    def __init__(self, d=None):
        self.select_value: Optional[str] = None
        self.multi_select_value: Optional[List[str]] = None
        self.bool_value: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QrCodeValueBuilder":
        return QrCodeValueBuilder()


class QrCodeValueBuilder(object):
    def __init__(self) -> None:
        self._qr_code_value = QrCodeValue()

    def select_value(self, select_value: str) -> "QrCodeValueBuilder":
        self._qr_code_value.select_value = select_value
        return self

    def multi_select_value(self, multi_select_value: List[str]) -> "QrCodeValueBuilder":
        self._qr_code_value.multi_select_value = multi_select_value
        return self

    def bool_value(self, bool_value: bool) -> "QrCodeValueBuilder":
        self._qr_code_value.bool_value = bool_value
        return self

    def build(self) -> "QrCodeValue":
        return self._qr_code_value
