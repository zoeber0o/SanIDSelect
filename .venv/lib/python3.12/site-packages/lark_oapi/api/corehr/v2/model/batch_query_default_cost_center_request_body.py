# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class BatchQueryDefaultCostCenterRequestBody(object):
    _types = {
        "employment_ids": List[str],
    }

    def __init__(self, d=None):
        self.employment_ids: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchQueryDefaultCostCenterRequestBodyBuilder":
        return BatchQueryDefaultCostCenterRequestBodyBuilder()


class BatchQueryDefaultCostCenterRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_query_default_cost_center_request_body = BatchQueryDefaultCostCenterRequestBody()

    def employment_ids(self, employment_ids: List[str]) -> "BatchQueryDefaultCostCenterRequestBodyBuilder":
        self._batch_query_default_cost_center_request_body.employment_ids = employment_ids
        return self

    def build(self) -> "BatchQueryDefaultCostCenterRequestBody":
        return self._batch_query_default_cost_center_request_body
