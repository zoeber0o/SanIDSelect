# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n import I18n
from .i18n import I18n
from .i18n import I18n
from .i18n import I18n
from .orgdraft_department_id import OrgdraftDepartmentId
from .orgdraft_department_id import OrgdraftDepartmentId
from .change_field_pair import ChangeFieldPair


class PositionAdjustmentInfo(object):
    _types = {
        "original_job_families": List[str],
        "target_job_families": List[str],
        "original_department": str,
        "target_department": str,
        "target_draft_department": str,
        "original_cost_center": str,
        "target_cost_center": str,
        "original_working_hours_type": str,
        "target_working_hours_type": str,
        "original_job": str,
        "target_job": str,
        "original_is_key_position": bool,
        "target_is_key_position": bool,
        "original_employee_types": List[str],
        "target_employee_types": List[str],
        "original_names": List[I18n],
        "target_names": List[I18n],
        "original_job_grades": List[str],
        "target_job_grades": List[str],
        "original_code": str,
        "target_code": str,
        "original_job_levels": List[str],
        "target_job_levels": List[str],
        "original_active": bool,
        "target_active": bool,
        "original_direct_leader": str,
        "target_direct_leader": str,
        "target_draft_direct_leader": str,
        "original_work_locations": List[str],
        "target_work_locations": List[str],
        "original_descriptions": List[I18n],
        "target_descriptions": List[I18n],
        "original_department_id_paths": List[OrgdraftDepartmentId],
        "target_department_id_paths": List[OrgdraftDepartmentId],
        "custom_fields": List[ChangeFieldPair],
    }

    def __init__(self, d=None):
        self.original_job_families: Optional[List[str]] = None
        self.target_job_families: Optional[List[str]] = None
        self.original_department: Optional[str] = None
        self.target_department: Optional[str] = None
        self.target_draft_department: Optional[str] = None
        self.original_cost_center: Optional[str] = None
        self.target_cost_center: Optional[str] = None
        self.original_working_hours_type: Optional[str] = None
        self.target_working_hours_type: Optional[str] = None
        self.original_job: Optional[str] = None
        self.target_job: Optional[str] = None
        self.original_is_key_position: Optional[bool] = None
        self.target_is_key_position: Optional[bool] = None
        self.original_employee_types: Optional[List[str]] = None
        self.target_employee_types: Optional[List[str]] = None
        self.original_names: Optional[List[I18n]] = None
        self.target_names: Optional[List[I18n]] = None
        self.original_job_grades: Optional[List[str]] = None
        self.target_job_grades: Optional[List[str]] = None
        self.original_code: Optional[str] = None
        self.target_code: Optional[str] = None
        self.original_job_levels: Optional[List[str]] = None
        self.target_job_levels: Optional[List[str]] = None
        self.original_active: Optional[bool] = None
        self.target_active: Optional[bool] = None
        self.original_direct_leader: Optional[str] = None
        self.target_direct_leader: Optional[str] = None
        self.target_draft_direct_leader: Optional[str] = None
        self.original_work_locations: Optional[List[str]] = None
        self.target_work_locations: Optional[List[str]] = None
        self.original_descriptions: Optional[List[I18n]] = None
        self.target_descriptions: Optional[List[I18n]] = None
        self.original_department_id_paths: Optional[List[OrgdraftDepartmentId]] = None
        self.target_department_id_paths: Optional[List[OrgdraftDepartmentId]] = None
        self.custom_fields: Optional[List[ChangeFieldPair]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PositionAdjustmentInfoBuilder":
        return PositionAdjustmentInfoBuilder()


class PositionAdjustmentInfoBuilder(object):
    def __init__(self) -> None:
        self._position_adjustment_info = PositionAdjustmentInfo()

    def original_job_families(self, original_job_families: List[str]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_job_families = original_job_families
        return self

    def target_job_families(self, target_job_families: List[str]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_job_families = target_job_families
        return self

    def original_department(self, original_department: str) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_department = original_department
        return self

    def target_department(self, target_department: str) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_department = target_department
        return self

    def target_draft_department(self, target_draft_department: str) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_draft_department = target_draft_department
        return self

    def original_cost_center(self, original_cost_center: str) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_cost_center = original_cost_center
        return self

    def target_cost_center(self, target_cost_center: str) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_cost_center = target_cost_center
        return self

    def original_working_hours_type(self, original_working_hours_type: str) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_working_hours_type = original_working_hours_type
        return self

    def target_working_hours_type(self, target_working_hours_type: str) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_working_hours_type = target_working_hours_type
        return self

    def original_job(self, original_job: str) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_job = original_job
        return self

    def target_job(self, target_job: str) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_job = target_job
        return self

    def original_is_key_position(self, original_is_key_position: bool) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_is_key_position = original_is_key_position
        return self

    def target_is_key_position(self, target_is_key_position: bool) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_is_key_position = target_is_key_position
        return self

    def original_employee_types(self, original_employee_types: List[str]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_employee_types = original_employee_types
        return self

    def target_employee_types(self, target_employee_types: List[str]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_employee_types = target_employee_types
        return self

    def original_names(self, original_names: List[I18n]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_names = original_names
        return self

    def target_names(self, target_names: List[I18n]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_names = target_names
        return self

    def original_job_grades(self, original_job_grades: List[str]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_job_grades = original_job_grades
        return self

    def target_job_grades(self, target_job_grades: List[str]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_job_grades = target_job_grades
        return self

    def original_code(self, original_code: str) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_code = original_code
        return self

    def target_code(self, target_code: str) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_code = target_code
        return self

    def original_job_levels(self, original_job_levels: List[str]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_job_levels = original_job_levels
        return self

    def target_job_levels(self, target_job_levels: List[str]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_job_levels = target_job_levels
        return self

    def original_active(self, original_active: bool) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_active = original_active
        return self

    def target_active(self, target_active: bool) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_active = target_active
        return self

    def original_direct_leader(self, original_direct_leader: str) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_direct_leader = original_direct_leader
        return self

    def target_direct_leader(self, target_direct_leader: str) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_direct_leader = target_direct_leader
        return self

    def target_draft_direct_leader(self, target_draft_direct_leader: str) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_draft_direct_leader = target_draft_direct_leader
        return self

    def original_work_locations(self, original_work_locations: List[str]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_work_locations = original_work_locations
        return self

    def target_work_locations(self, target_work_locations: List[str]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_work_locations = target_work_locations
        return self

    def original_descriptions(self, original_descriptions: List[I18n]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_descriptions = original_descriptions
        return self

    def target_descriptions(self, target_descriptions: List[I18n]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_descriptions = target_descriptions
        return self

    def original_department_id_paths(self, original_department_id_paths: List[
        OrgdraftDepartmentId]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.original_department_id_paths = original_department_id_paths
        return self

    def target_department_id_paths(self, target_department_id_paths: List[
        OrgdraftDepartmentId]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.target_department_id_paths = target_department_id_paths
        return self

    def custom_fields(self, custom_fields: List[ChangeFieldPair]) -> "PositionAdjustmentInfoBuilder":
        self._position_adjustment_info.custom_fields = custom_fields
        return self

    def build(self) -> "PositionAdjustmentInfo":
        return self._position_adjustment_info
