# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .organization_op_log import OrganizationOpLog


class QueryOperationLogsDepartmentResponseBody(object):
    _types = {
        "op_logs": List[OrganizationOpLog],
        "next_page_token": str,
        "has_more": bool,
    }

    def __init__(self, d=None):
        self.op_logs: Optional[List[OrganizationOpLog]] = None
        self.next_page_token: Optional[str] = None
        self.has_more: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryOperationLogsDepartmentResponseBodyBuilder":
        return QueryOperationLogsDepartmentResponseBodyBuilder()


class QueryOperationLogsDepartmentResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._query_operation_logs_department_response_body = QueryOperationLogsDepartmentResponseBody()

    def op_logs(self, op_logs: List[OrganizationOpLog]) -> "QueryOperationLogsDepartmentResponseBodyBuilder":
        self._query_operation_logs_department_response_body.op_logs = op_logs
        return self

    def next_page_token(self, next_page_token: str) -> "QueryOperationLogsDepartmentResponseBodyBuilder":
        self._query_operation_logs_department_response_body.next_page_token = next_page_token
        return self

    def has_more(self, has_more: bool) -> "QueryOperationLogsDepartmentResponseBodyBuilder":
        self._query_operation_logs_department_response_body.has_more = has_more
        return self

    def build(self) -> "QueryOperationLogsDepartmentResponseBody":
        return self._query_operation_logs_department_response_body
