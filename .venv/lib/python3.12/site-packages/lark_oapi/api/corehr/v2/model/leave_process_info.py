# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class LeaveProcessInfo(object):
    _types = {
        "process_id": str,
        "process_status": str,
        "process_apply_time": str,
    }

    def __init__(self, d=None):
        self.process_id: Optional[str] = None
        self.process_status: Optional[str] = None
        self.process_apply_time: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "LeaveProcessInfoBuilder":
        return LeaveProcessInfoBuilder()


class LeaveProcessInfoBuilder(object):
    def __init__(self) -> None:
        self._leave_process_info = LeaveProcessInfo()

    def process_id(self, process_id: str) -> "LeaveProcessInfoBuilder":
        self._leave_process_info.process_id = process_id
        return self

    def process_status(self, process_status: str) -> "LeaveProcessInfoBuilder":
        self._leave_process_info.process_status = process_status
        return self

    def process_apply_time(self, process_apply_time: str) -> "LeaveProcessInfoBuilder":
        self._leave_process_info.process_apply_time = process_apply_time
        return self

    def build(self) -> "LeaveProcessInfo":
        return self._leave_process_info
