# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .employees_additional_job_edit import EmployeesAdditionalJobEdit


class CreateEmployeesAdditionalJobRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.client_token: Optional[str] = None
        self.user_id_type: Optional[str] = None
        self.department_id_type: Optional[str] = None
        self.request_body: Optional[EmployeesAdditionalJobEdit] = None

    @staticmethod
    def builder() -> "CreateEmployeesAdditionalJobRequestBuilder":
        return CreateEmployeesAdditionalJobRequestBuilder()


class CreateEmployeesAdditionalJobRequestBuilder(object):

    def __init__(self) -> None:
        create_employees_additional_job_request = CreateEmployeesAdditionalJobRequest()
        create_employees_additional_job_request.http_method = HttpMethod.POST
        create_employees_additional_job_request.uri = "/open-apis/corehr/v2/employees/additional_jobs"
        create_employees_additional_job_request.token_types = {AccessTokenType.TENANT}
        self._create_employees_additional_job_request: CreateEmployeesAdditionalJobRequest = create_employees_additional_job_request

    def client_token(self, client_token: str) -> "CreateEmployeesAdditionalJobRequestBuilder":
        self._create_employees_additional_job_request.client_token = client_token
        self._create_employees_additional_job_request.add_query("client_token", client_token)
        return self

    def user_id_type(self, user_id_type: str) -> "CreateEmployeesAdditionalJobRequestBuilder":
        self._create_employees_additional_job_request.user_id_type = user_id_type
        self._create_employees_additional_job_request.add_query("user_id_type", user_id_type)
        return self

    def department_id_type(self, department_id_type: str) -> "CreateEmployeesAdditionalJobRequestBuilder":
        self._create_employees_additional_job_request.department_id_type = department_id_type
        self._create_employees_additional_job_request.add_query("department_id_type", department_id_type)
        return self

    def request_body(self, request_body: EmployeesAdditionalJobEdit) -> "CreateEmployeesAdditionalJobRequestBuilder":
        self._create_employees_additional_job_request.request_body = request_body
        self._create_employees_additional_job_request.body = request_body
        return self

    def build(self) -> CreateEmployeesAdditionalJobRequest:
        return self._create_employees_additional_job_request
