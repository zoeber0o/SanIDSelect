# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .signature_custom_field_value_multilingual_value import SignatureCustomFieldValueMultilingualValue


class SignatureCustomFieldValue(object):
    _types = {
        "text_value": str,
        "multilingual_value": SignatureCustomFieldValueMultilingualValue,
    }

    def __init__(self, d=None):
        self.text_value: Optional[str] = None
        self.multilingual_value: Optional[SignatureCustomFieldValueMultilingualValue] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SignatureCustomFieldValueBuilder":
        return SignatureCustomFieldValueBuilder()


class SignatureCustomFieldValueBuilder(object):
    def __init__(self) -> None:
        self._signature_custom_field_value = SignatureCustomFieldValue()

    def text_value(self, text_value: str) -> "SignatureCustomFieldValueBuilder":
        self._signature_custom_field_value.text_value = text_value
        return self

    def multilingual_value(self,
                           multilingual_value: SignatureCustomFieldValueMultilingualValue) -> "SignatureCustomFieldValueBuilder":
        self._signature_custom_field_value.multilingual_value = multilingual_value
        return self

    def build(self) -> "SignatureCustomFieldValue":
        return self._signature_custom_field_value
