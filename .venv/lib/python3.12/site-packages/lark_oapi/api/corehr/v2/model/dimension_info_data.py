# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .dimension_info import DimensionInfo


class DimensionInfoData(object):
    _types = {
        "dimension_key": str,
        "dimension_info": DimensionInfo,
    }

    def __init__(self, d=None):
        self.dimension_key: Optional[str] = None
        self.dimension_info: Optional[DimensionInfo] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DimensionInfoDataBuilder":
        return DimensionInfoDataBuilder()


class DimensionInfoDataBuilder(object):
    def __init__(self) -> None:
        self._dimension_info_data = DimensionInfoData()

    def dimension_key(self, dimension_key: str) -> "DimensionInfoDataBuilder":
        self._dimension_info_data.dimension_key = dimension_key
        return self

    def dimension_info(self, dimension_info: DimensionInfo) -> "DimensionInfoDataBuilder":
        self._dimension_info_data.dimension_info = dimension_info
        return self

    def build(self) -> "DimensionInfoData":
        return self._dimension_info_data
