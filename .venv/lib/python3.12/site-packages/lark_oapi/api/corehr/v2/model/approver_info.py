# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ApproverInfo(object):
    _types = {
        "approver_id": str,
        "process_id": str,
        "approver_status": int,
    }

    def __init__(self, d=None):
        self.approver_id: Optional[str] = None
        self.process_id: Optional[str] = None
        self.approver_status: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ApproverInfoBuilder":
        return ApproverInfoBuilder()


class ApproverInfoBuilder(object):
    def __init__(self) -> None:
        self._approver_info = ApproverInfo()

    def approver_id(self, approver_id: str) -> "ApproverInfoBuilder":
        self._approver_info.approver_id = approver_id
        return self

    def process_id(self, process_id: str) -> "ApproverInfoBuilder":
        self._approver_info.process_id = process_id
        return self

    def approver_status(self, approver_status: int) -> "ApproverInfoBuilder":
        self._approver_info.approver_status = approver_status
        return self

    def build(self) -> "ApproverInfo":
        return self._approver_info
