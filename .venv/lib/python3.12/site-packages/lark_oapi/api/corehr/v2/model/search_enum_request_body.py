# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class SearchEnumRequestBody(object):
    _types = {
        "enum_apiname_lists": List[str],
    }

    def __init__(self, d=None):
        self.enum_apiname_lists: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SearchEnumRequestBodyBuilder":
        return SearchEnumRequestBodyBuilder()


class SearchEnumRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._search_enum_request_body = SearchEnumRequestBody()

    def enum_apiname_lists(self, enum_apiname_lists: List[str]) -> "SearchEnumRequestBodyBuilder":
        self._search_enum_request_body.enum_apiname_lists = enum_apiname_lists
        return self

    def build(self) -> "SearchEnumRequestBody":
        return self._search_enum_request_body
