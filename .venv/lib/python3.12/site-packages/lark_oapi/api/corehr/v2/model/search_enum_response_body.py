# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .enums import Enums


class SearchEnumResponseBody(object):
    _types = {
        "enums": List[Enums],
    }

    def __init__(self, d=None):
        self.enums: Optional[List[Enums]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SearchEnumResponseBodyBuilder":
        return SearchEnumResponseBodyBuilder()


class SearchEnumResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._search_enum_response_body = SearchEnumResponseBody()

    def enums(self, enums: List[Enums]) -> "SearchEnumResponseBodyBuilder":
        self._search_enum_response_body.enums = enums
        return self

    def build(self) -> "SearchEnumResponseBody":
        return self._search_enum_response_body
