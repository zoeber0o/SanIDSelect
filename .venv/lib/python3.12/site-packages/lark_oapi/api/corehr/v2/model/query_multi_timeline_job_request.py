# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .query_multi_timeline_job_request_body import QueryMultiTimelineJobRequestBody


class QueryMultiTimelineJobRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.request_body: Optional[QueryMultiTimelineJobRequestBody] = None

    @staticmethod
    def builder() -> "QueryMultiTimelineJobRequestBuilder":
        return QueryMultiTimelineJobRequestBuilder()


class QueryMultiTimelineJobRequestBuilder(object):

    def __init__(self) -> None:
        query_multi_timeline_job_request = QueryMultiTimelineJobRequest()
        query_multi_timeline_job_request.http_method = HttpMethod.POST
        query_multi_timeline_job_request.uri = "/open-apis/corehr/v2/jobs/query_multi_timeline"
        query_multi_timeline_job_request.token_types = {AccessTokenType.TENANT}
        self._query_multi_timeline_job_request: QueryMultiTimelineJobRequest = query_multi_timeline_job_request

    def request_body(self, request_body: QueryMultiTimelineJobRequestBody) -> "QueryMultiTimelineJobRequestBuilder":
        self._query_multi_timeline_job_request.request_body = request_body
        self._query_multi_timeline_job_request.body = request_body
        return self

    def build(self) -> QueryMultiTimelineJobRequest:
        return self._query_multi_timeline_job_request
