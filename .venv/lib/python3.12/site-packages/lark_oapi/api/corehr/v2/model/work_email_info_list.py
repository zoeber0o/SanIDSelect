# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class WorkEmailInfoList(object):
    _types = {
        "work_email": str,
        "country_region_alpha_3_code": str,
        "pinyin": str,
    }

    def __init__(self, d=None):
        self.work_email: Optional[str] = None
        self.country_region_alpha_3_code: Optional[str] = None
        self.pinyin: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "WorkEmailInfoListBuilder":
        return WorkEmailInfoListBuilder()


class WorkEmailInfoListBuilder(object):
    def __init__(self) -> None:
        self._work_email_info_list = WorkEmailInfoList()

    def work_email(self, work_email: str) -> "WorkEmailInfoListBuilder":
        self._work_email_info_list.work_email = work_email
        return self

    def country_region_alpha_3_code(self, country_region_alpha_3_code: str) -> "WorkEmailInfoListBuilder":
        self._work_email_info_list.country_region_alpha_3_code = country_region_alpha_3_code
        return self

    def pinyin(self, pinyin: str) -> "WorkEmailInfoListBuilder":
        self._work_email_info_list.pinyin = pinyin
        return self

    def build(self) -> "WorkEmailInfoList":
        return self._work_email_info_list
