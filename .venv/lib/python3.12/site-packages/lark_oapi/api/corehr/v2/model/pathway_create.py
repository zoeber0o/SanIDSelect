# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n import I18n
from .i18n import I18n


class PathwayCreate(object):
    _types = {
        "code": str,
        "names": List[I18n],
        "descriptions": List[I18n],
    }

    def __init__(self, d=None):
        self.code: Optional[str] = None
        self.names: Optional[List[I18n]] = None
        self.descriptions: Optional[List[I18n]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PathwayCreateBuilder":
        return PathwayCreateBuilder()


class PathwayCreateBuilder(object):
    def __init__(self) -> None:
        self._pathway_create = PathwayCreate()

    def code(self, code: str) -> "PathwayCreateBuilder":
        self._pathway_create.code = code
        return self

    def names(self, names: List[I18n]) -> "PathwayCreateBuilder":
        self._pathway_create.names = names
        return self

    def descriptions(self, descriptions: List[I18n]) -> "PathwayCreateBuilder":
        self._pathway_create.descriptions = descriptions
        return self

    def build(self) -> "PathwayCreate":
        return self._pathway_create
