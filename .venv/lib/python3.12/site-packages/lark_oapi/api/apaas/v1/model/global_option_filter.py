# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class GlobalOptionFilter(object):
    _types = {
        "quick_query": str,
    }

    def __init__(self, d=None):
        self.quick_query: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GlobalOptionFilterBuilder":
        return GlobalOptionFilterBuilder()


class GlobalOptionFilterBuilder(object):
    def __init__(self) -> None:
        self._global_option_filter = GlobalOptionFilter()

    def quick_query(self, quick_query: str) -> "GlobalOptionFilterBuilder":
        self._global_option_filter.quick_query = quick_query
        return self

    def build(self) -> "GlobalOptionFilter":
        return self._global_option_filter
