# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .environment_variable import EnvironmentVariable


class QueryApplicationEnvironmentVariableResponseBody(object):
    _types = {
        "items": List[EnvironmentVariable],
        "total": int,
    }

    def __init__(self, d=None):
        self.items: Optional[List[EnvironmentVariable]] = None
        self.total: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryApplicationEnvironmentVariableResponseBodyBuilder":
        return QueryApplicationEnvironmentVariableResponseBodyBuilder()


class QueryApplicationEnvironmentVariableResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._query_application_environment_variable_response_body = QueryApplicationEnvironmentVariableResponseBody()

    def items(self, items: List[EnvironmentVariable]) -> "QueryApplicationEnvironmentVariableResponseBodyBuilder":
        self._query_application_environment_variable_response_body.items = items
        return self

    def total(self, total: int) -> "QueryApplicationEnvironmentVariableResponseBodyBuilder":
        self._query_application_environment_variable_response_body.total = total
        return self

    def build(self) -> "QueryApplicationEnvironmentVariableResponseBody":
        return self._query_application_environment_variable_response_body
