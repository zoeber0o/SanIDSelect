# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class BatchCreateAuthorizationApplicationRecordPermissionMemberRequestBody(object):
    _types = {
        "user_ids": List[str],
    }

    def __init__(self, d=None):
        self.user_ids: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchCreateAuthorizationApplicationRecordPermissionMemberRequestBodyBuilder":
        return BatchCreateAuthorizationApplicationRecordPermissionMemberRequestBodyBuilder()


class BatchCreateAuthorizationApplicationRecordPermissionMemberRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_create_authorization_application_record_permission_member_request_body = BatchCreateAuthorizationApplicationRecordPermissionMemberRequestBody()

    def user_ids(self,
                 user_ids: List[str]) -> "BatchCreateAuthorizationApplicationRecordPermissionMemberRequestBodyBuilder":
        self._batch_create_authorization_application_record_permission_member_request_body.user_ids = user_ids
        return self

    def build(self) -> "BatchCreateAuthorizationApplicationRecordPermissionMemberRequestBody":
        return self._batch_create_authorization_application_record_permission_member_request_body
