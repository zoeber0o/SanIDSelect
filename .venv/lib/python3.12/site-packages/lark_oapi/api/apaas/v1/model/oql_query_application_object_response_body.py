# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OqlQueryApplicationObjectResponseBody(object):
    _types = {
        "columns": List[str],
        "rows": str,
    }

    def __init__(self, d=None):
        self.columns: Optional[List[str]] = None
        self.rows: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OqlQueryApplicationObjectResponseBodyBuilder":
        return OqlQueryApplicationObjectResponseBodyBuilder()


class OqlQueryApplicationObjectResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._oql_query_application_object_response_body = OqlQueryApplicationObjectResponseBody()

    def columns(self, columns: List[str]) -> "OqlQueryApplicationObjectResponseBodyBuilder":
        self._oql_query_application_object_response_body.columns = columns
        return self

    def rows(self, rows: str) -> "OqlQueryApplicationObjectResponseBodyBuilder":
        self._oql_query_application_object_response_body.rows = rows
        return self

    def build(self) -> "OqlQueryApplicationObjectResponseBody":
        return self._oql_query_application_object_response_body
