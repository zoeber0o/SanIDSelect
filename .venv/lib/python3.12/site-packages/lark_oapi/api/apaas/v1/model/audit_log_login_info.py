# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class AuditLogLoginInfo(object):
    _types = {
        "login_type": str,
    }

    def __init__(self, d=None):
        self.login_type: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "AuditLogLoginInfoBuilder":
        return AuditLogLoginInfoBuilder()


class AuditLogLoginInfoBuilder(object):
    def __init__(self) -> None:
        self._audit_log_login_info = AuditLogLoginInfo()

    def login_type(self, login_type: str) -> "AuditLogLoginInfoBuilder":
        self._audit_log_login_info.login_type = login_type
        return self

    def build(self) -> "AuditLogLoginInfo":
        return self._audit_log_login_info
