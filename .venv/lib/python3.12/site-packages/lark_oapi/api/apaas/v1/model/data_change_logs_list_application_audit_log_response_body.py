# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .audit_log_es_field import AuditLogEsField


class DataChangeLogsListApplicationAuditLogResponseBody(object):
    _types = {
        "items": List[AuditLogEsField],
        "total": str,
    }

    def __init__(self, d=None):
        self.items: Optional[List[AuditLogEsField]] = None
        self.total: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DataChangeLogsListApplicationAuditLogResponseBodyBuilder":
        return DataChangeLogsListApplicationAuditLogResponseBodyBuilder()


class DataChangeLogsListApplicationAuditLogResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._data_change_logs_list_application_audit_log_response_body = DataChangeLogsListApplicationAuditLogResponseBody()

    def items(self, items: List[AuditLogEsField]) -> "DataChangeLogsListApplicationAuditLogResponseBodyBuilder":
        self._data_change_logs_list_application_audit_log_response_body.items = items
        return self

    def total(self, total: str) -> "DataChangeLogsListApplicationAuditLogResponseBodyBuilder":
        self._data_change_logs_list_application_audit_log_response_body.total = total
        return self

    def build(self) -> "DataChangeLogsListApplicationAuditLogResponseBody":
        return self._data_change_logs_list_application_audit_log_response_body
