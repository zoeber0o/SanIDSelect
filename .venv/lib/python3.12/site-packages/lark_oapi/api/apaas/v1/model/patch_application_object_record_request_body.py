# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class PatchApplicationObjectRecordRequestBody(object):
    _types = {
        "record": str,
    }

    def __init__(self, d=None):
        self.record: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PatchApplicationObjectRecordRequestBodyBuilder":
        return PatchApplicationObjectRecordRequestBodyBuilder()


class PatchApplicationObjectRecordRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._patch_application_object_record_request_body = PatchApplicationObjectRecordRequestBody()

    def record(self, record: str) -> "PatchApplicationObjectRecordRequestBodyBuilder":
        self._patch_application_object_record_request_body.record = record
        return self

    def build(self) -> "PatchApplicationObjectRecordRequestBody":
        return self._patch_application_object_record_request_body
