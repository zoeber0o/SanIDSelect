# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class TaskInfo(object):
    _types = {
        "task_id": str,
        "task_progress": str,
        "task_status": str,
    }

    def __init__(self, d=None):
        self.task_id: Optional[str] = None
        self.task_progress: Optional[str] = None
        self.task_status: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "TaskInfoBuilder":
        return TaskInfoBuilder()


class TaskInfoBuilder(object):
    def __init__(self) -> None:
        self._task_info = TaskInfo()

    def task_id(self, task_id: str) -> "TaskInfoBuilder":
        self._task_info.task_id = task_id
        return self

    def task_progress(self, task_progress: str) -> "TaskInfoBuilder":
        self._task_info.task_progress = task_progress
        return self

    def task_status(self, task_status: str) -> "TaskInfoBuilder":
        self._task_info.task_status = task_status
        return self

    def build(self) -> "TaskInfo":
        return self._task_info
