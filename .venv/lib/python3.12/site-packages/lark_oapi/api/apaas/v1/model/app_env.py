# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class AppEnv(object):
    _types = {
        "dev_id": str,
        "test_id": str,
        "prod_id": str,
    }

    def __init__(self, d=None):
        self.dev_id: Optional[str] = None
        self.test_id: Optional[str] = None
        self.prod_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "AppEnvBuilder":
        return AppEnvBuilder()


class AppEnvBuilder(object):
    def __init__(self) -> None:
        self._app_env = AppEnv()

    def dev_id(self, dev_id: str) -> "AppEnvBuilder":
        self._app_env.dev_id = dev_id
        return self

    def test_id(self, test_id: str) -> "AppEnvBuilder":
        self._app_env.test_id = test_id
        return self

    def prod_id(self, prod_id: str) -> "AppEnvBuilder":
        self._app_env.prod_id = prod_id
        return self

    def build(self) -> "AppEnv":
        return self._app_env
