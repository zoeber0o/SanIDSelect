# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n import I18n
from .i18n import I18n


class UserTaskSummaryType(object):
    _types = {
        "file_key": I18n,
        "file_value": List[I18n],
    }

    def __init__(self, d=None):
        self.file_key: Optional[I18n] = None
        self.file_value: Optional[List[I18n]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "UserTaskSummaryTypeBuilder":
        return UserTaskSummaryTypeBuilder()


class UserTaskSummaryTypeBuilder(object):
    def __init__(self) -> None:
        self._user_task_summary_type = UserTaskSummaryType()

    def file_key(self, file_key: I18n) -> "UserTaskSummaryTypeBuilder":
        self._user_task_summary_type.file_key = file_key
        return self

    def file_value(self, file_value: List[I18n]) -> "UserTaskSummaryTypeBuilder":
        self._user_task_summary_type.file_value = file_value
        return self

    def build(self) -> "UserTaskSummaryType":
        return self._user_task_summary_type
