# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .query_user_task_request_body import QueryUserTaskRequestBody


class QueryUserTaskRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.request_body: Optional[QueryUserTaskRequestBody] = None

    @staticmethod
    def builder() -> "QueryUserTaskRequestBuilder":
        return QueryUserTaskRequestBuilder()


class QueryUserTaskRequestBuilder(object):

    def __init__(self) -> None:
        query_user_task_request = QueryUserTaskRequest()
        query_user_task_request.http_method = HttpMethod.POST
        query_user_task_request.uri = "/open-apis/apaas/v1/user_task/query"
        query_user_task_request.token_types = {AccessTokenType.TENANT}
        self._query_user_task_request: QueryUserTaskRequest = query_user_task_request

    def request_body(self, request_body: QueryUserTaskRequestBody) -> "QueryUserTaskRequestBuilder":
        self._query_user_task_request.request_body = request_body
        self._query_user_task_request.body = request_body
        return self

    def build(self) -> QueryUserTaskRequest:
        return self._query_user_task_request
