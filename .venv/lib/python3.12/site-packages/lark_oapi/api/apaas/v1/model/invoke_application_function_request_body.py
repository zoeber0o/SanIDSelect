# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class InvokeApplicationFunctionRequestBody(object):
    _types = {
        "params": str,
    }

    def __init__(self, d=None):
        self.params: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "InvokeApplicationFunctionRequestBodyBuilder":
        return InvokeApplicationFunctionRequestBodyBuilder()


class InvokeApplicationFunctionRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._invoke_application_function_request_body = InvokeApplicationFunctionRequestBody()

    def params(self, params: str) -> "InvokeApplicationFunctionRequestBodyBuilder":
        self._invoke_application_function_request_body.params = params
        return self

    def build(self) -> "InvokeApplicationFunctionRequestBody":
        return self._invoke_application_function_request_body
