# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class TalentInterviewRegistrationSimple(object):
    _types = {
        "id": str,
        "registration_time": int,
        "download_url": str,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.registration_time: Optional[int] = None
        self.download_url: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "TalentInterviewRegistrationSimpleBuilder":
        return TalentInterviewRegistrationSimpleBuilder()


class TalentInterviewRegistrationSimpleBuilder(object):
    def __init__(self) -> None:
        self._talent_interview_registration_simple = TalentInterviewRegistrationSimple()

    def id(self, id: str) -> "TalentInterviewRegistrationSimpleBuilder":
        self._talent_interview_registration_simple.id = id
        return self

    def registration_time(self, registration_time: int) -> "TalentInterviewRegistrationSimpleBuilder":
        self._talent_interview_registration_simple.registration_time = registration_time
        return self

    def download_url(self, download_url: str) -> "TalentInterviewRegistrationSimpleBuilder":
        self._talent_interview_registration_simple.download_url = download_url
        return self

    def build(self) -> "TalentInterviewRegistrationSimple":
        return self._talent_interview_registration_simple
