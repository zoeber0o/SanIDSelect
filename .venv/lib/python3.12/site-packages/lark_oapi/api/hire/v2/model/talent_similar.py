# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class TalentSimilar(object):
    _types = {
        "is_similar_talent": bool,
        "similar_talent_id_list": List[str],
    }

    def __init__(self, d=None):
        self.is_similar_talent: Optional[bool] = None
        self.similar_talent_id_list: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "TalentSimilarBuilder":
        return TalentSimilarBuilder()


class TalentSimilarBuilder(object):
    def __init__(self) -> None:
        self._talent_similar = TalentSimilar()

    def is_similar_talent(self, is_similar_talent: bool) -> "TalentSimilarBuilder":
        self._talent_similar.is_similar_talent = is_similar_talent
        return self

    def similar_talent_id_list(self, similar_talent_id_list: List[str]) -> "TalentSimilarBuilder":
        self._talent_similar.similar_talent_id_list = similar_talent_id_list
        return self

    def build(self) -> "TalentSimilar":
        return self._talent_similar
