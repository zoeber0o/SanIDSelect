# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .talent_customized_data_child import TalentCustomizedDataChild


class CompositeTalentEducationInfo(object):
    _types = {
        "degree": int,
        "school_name": str,
        "major": str,
        "start_time": str,
        "end_time": str,
        "education_type": int,
        "academic_ranking": int,
        "tag_list": List[int],
        "customized_data_list": List[TalentCustomizedDataChild],
    }

    def __init__(self, d=None):
        self.degree: Optional[int] = None
        self.school_name: Optional[str] = None
        self.major: Optional[str] = None
        self.start_time: Optional[str] = None
        self.end_time: Optional[str] = None
        self.education_type: Optional[int] = None
        self.academic_ranking: Optional[int] = None
        self.tag_list: Optional[List[int]] = None
        self.customized_data_list: Optional[List[TalentCustomizedDataChild]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CompositeTalentEducationInfoBuilder":
        return CompositeTalentEducationInfoBuilder()


class CompositeTalentEducationInfoBuilder(object):
    def __init__(self) -> None:
        self._composite_talent_education_info = CompositeTalentEducationInfo()

    def degree(self, degree: int) -> "CompositeTalentEducationInfoBuilder":
        self._composite_talent_education_info.degree = degree
        return self

    def school_name(self, school_name: str) -> "CompositeTalentEducationInfoBuilder":
        self._composite_talent_education_info.school_name = school_name
        return self

    def major(self, major: str) -> "CompositeTalentEducationInfoBuilder":
        self._composite_talent_education_info.major = major
        return self

    def start_time(self, start_time: str) -> "CompositeTalentEducationInfoBuilder":
        self._composite_talent_education_info.start_time = start_time
        return self

    def end_time(self, end_time: str) -> "CompositeTalentEducationInfoBuilder":
        self._composite_talent_education_info.end_time = end_time
        return self

    def education_type(self, education_type: int) -> "CompositeTalentEducationInfoBuilder":
        self._composite_talent_education_info.education_type = education_type
        return self

    def academic_ranking(self, academic_ranking: int) -> "CompositeTalentEducationInfoBuilder":
        self._composite_talent_education_info.academic_ranking = academic_ranking
        return self

    def tag_list(self, tag_list: List[int]) -> "CompositeTalentEducationInfoBuilder":
        self._composite_talent_education_info.tag_list = tag_list
        return self

    def customized_data_list(self, customized_data_list: List[
        TalentCustomizedDataChild]) -> "CompositeTalentEducationInfoBuilder":
        self._composite_talent_education_info.customized_data_list = customized_data_list
        return self

    def build(self) -> "CompositeTalentEducationInfo":
        return self._composite_talent_education_info
