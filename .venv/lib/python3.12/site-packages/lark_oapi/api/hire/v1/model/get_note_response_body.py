# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .note import Note


class GetNoteResponseBody(object):
    _types = {
        "note": Note,
    }

    def __init__(self, d=None):
        self.note: Optional[Note] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetNoteResponseBodyBuilder":
        return GetNoteResponseBodyBuilder()


class GetNoteResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_note_response_body = GetNoteResponseBody()

    def note(self, note: Note) -> "GetNoteResponseBodyBuilder":
        self._get_note_response_body.note = note
        return self

    def build(self) -> "GetNoteResponseBody":
        return self._get_note_response_body
