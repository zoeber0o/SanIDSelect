# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .interviewer import Interviewer


class PatchInterviewerResponseBody(object):
    _types = {
        "interviewer": Interviewer,
    }

    def __init__(self, d=None):
        self.interviewer: Optional[Interviewer] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PatchInterviewerResponseBodyBuilder":
        return PatchInterviewerResponseBodyBuilder()


class PatchInterviewerResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._patch_interviewer_response_body = PatchInterviewerResponseBody()

    def interviewer(self, interviewer: Interviewer) -> "PatchInterviewerResponseBodyBuilder":
        self._patch_interviewer_response_body.interviewer = interviewer
        return self

    def build(self) -> "PatchInterviewerResponseBody":
        return self._patch_interviewer_response_body
