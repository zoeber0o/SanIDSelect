# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class JobBasicInfo(object):
    _types = {
        "id": str,
        "name": str,
        "code": str,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.name: Optional[str] = None
        self.code: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "JobBasicInfoBuilder":
        return JobBasicInfoBuilder()


class JobBasicInfoBuilder(object):
    def __init__(self) -> None:
        self._job_basic_info = JobBasicInfo()

    def id(self, id: str) -> "JobBasicInfoBuilder":
        self._job_basic_info.id = id
        return self

    def name(self, name: str) -> "JobBasicInfoBuilder":
        self._job_basic_info.name = name
        return self

    def code(self, code: str) -> "JobBasicInfoBuilder":
        self._job_basic_info.code = code
        return self

    def build(self) -> "JobBasicInfo":
        return self._job_basic_info
