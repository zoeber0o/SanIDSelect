# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OperateAgencyAccountAgencyRequestBody(object):
    _types = {
        "option": int,
        "id": str,
        "reason": str,
    }

    def __init__(self, d=None):
        self.option: Optional[int] = None
        self.id: Optional[str] = None
        self.reason: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OperateAgencyAccountAgencyRequestBodyBuilder":
        return OperateAgencyAccountAgencyRequestBodyBuilder()


class OperateAgencyAccountAgencyRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._operate_agency_account_agency_request_body = OperateAgencyAccountAgencyRequestBody()

    def option(self, option: int) -> "OperateAgencyAccountAgencyRequestBodyBuilder":
        self._operate_agency_account_agency_request_body.option = option
        return self

    def id(self, id: str) -> "OperateAgencyAccountAgencyRequestBodyBuilder":
        self._operate_agency_account_agency_request_body.id = id
        return self

    def reason(self, reason: str) -> "OperateAgencyAccountAgencyRequestBodyBuilder":
        self._operate_agency_account_agency_request_body.reason = reason
        return self

    def build(self) -> "OperateAgencyAccountAgencyRequestBody":
        return self._operate_agency_account_agency_request_body
