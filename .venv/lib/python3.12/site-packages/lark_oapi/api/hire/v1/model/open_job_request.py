# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .open_job_request_body import OpenJobRequestBody


class OpenJobRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.job_id: Optional[str] = None
        self.request_body: Optional[OpenJobRequestBody] = None

    @staticmethod
    def builder() -> "OpenJobRequestBuilder":
        return OpenJobRequestBuilder()


class OpenJobRequestBuilder(object):

    def __init__(self) -> None:
        open_job_request = OpenJobRequest()
        open_job_request.http_method = HttpMethod.POST
        open_job_request.uri = "/open-apis/hire/v1/jobs/:job_id/open"
        open_job_request.token_types = {AccessTokenType.TENANT}
        self._open_job_request: OpenJobRequest = open_job_request

    def job_id(self, job_id: str) -> "OpenJobRequestBuilder":
        self._open_job_request.job_id = job_id
        self._open_job_request.paths["job_id"] = str(job_id)
        return self

    def request_body(self, request_body: OpenJobRequestBody) -> "OpenJobRequestBuilder":
        self._open_job_request.request_body = request_body
        self._open_job_request.body = request_body
        return self

    def build(self) -> OpenJobRequest:
        return self._open_job_request
