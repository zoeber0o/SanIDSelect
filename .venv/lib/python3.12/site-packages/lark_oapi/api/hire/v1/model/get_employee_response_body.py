# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .employee import Employee


class GetEmployeeResponseBody(object):
    _types = {
        "employee": Employee,
    }

    def __init__(self, d=None):
        self.employee: Optional[Employee] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetEmployeeResponseBodyBuilder":
        return GetEmployeeResponseBodyBuilder()


class GetEmployeeResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_employee_response_body = GetEmployeeResponseBody()

    def employee(self, employee: Employee) -> "GetEmployeeResponseBodyBuilder":
        self._get_employee_response_body.employee = employee
        return self

    def build(self) -> "GetEmployeeResponseBody":
        return self._get_employee_response_body
