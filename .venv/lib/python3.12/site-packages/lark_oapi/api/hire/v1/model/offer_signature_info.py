# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .signature_attachment import SignatureAttachment


class OfferSignatureInfo(object):
    _types = {
        "id": str,
        "signature_status": int,
        "attachment_list": List[SignatureAttachment],
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.signature_status: Optional[int] = None
        self.attachment_list: Optional[List[SignatureAttachment]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OfferSignatureInfoBuilder":
        return OfferSignatureInfoBuilder()


class OfferSignatureInfoBuilder(object):
    def __init__(self) -> None:
        self._offer_signature_info = OfferSignatureInfo()

    def id(self, id: str) -> "OfferSignatureInfoBuilder":
        self._offer_signature_info.id = id
        return self

    def signature_status(self, signature_status: int) -> "OfferSignatureInfoBuilder":
        self._offer_signature_info.signature_status = signature_status
        return self

    def attachment_list(self, attachment_list: List[SignatureAttachment]) -> "OfferSignatureInfoBuilder":
        self._offer_signature_info.attachment_list = attachment_list
        return self

    def build(self) -> "OfferSignatureInfo":
        return self._offer_signature_info
