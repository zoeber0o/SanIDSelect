# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class GetByTalentInterviewRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.talent_id: Optional[str] = None
        self.user_id_type: Optional[str] = None
        self.job_level_id_type: Optional[str] = None

    @staticmethod
    def builder() -> "GetByTalentInterviewRequestBuilder":
        return GetByTalentInterviewRequestBuilder()


class GetByTalentInterviewRequestBuilder(object):

    def __init__(self) -> None:
        get_by_talent_interview_request = GetByTalentInterviewRequest()
        get_by_talent_interview_request.http_method = HttpMethod.GET
        get_by_talent_interview_request.uri = "/open-apis/hire/v1/interviews/get_by_talent"
        get_by_talent_interview_request.token_types = {AccessTokenType.TENANT}
        self._get_by_talent_interview_request: GetByTalentInterviewRequest = get_by_talent_interview_request

    def talent_id(self, talent_id: str) -> "GetByTalentInterviewRequestBuilder":
        self._get_by_talent_interview_request.talent_id = talent_id
        self._get_by_talent_interview_request.add_query("talent_id", talent_id)
        return self

    def user_id_type(self, user_id_type: str) -> "GetByTalentInterviewRequestBuilder":
        self._get_by_talent_interview_request.user_id_type = user_id_type
        self._get_by_talent_interview_request.add_query("user_id_type", user_id_type)
        return self

    def job_level_id_type(self, job_level_id_type: str) -> "GetByTalentInterviewRequestBuilder":
        self._get_by_talent_interview_request.job_level_id_type = job_level_id_type
        self._get_by_talent_interview_request.add_query("job_level_id_type", job_level_id_type)
        return self

    def build(self) -> GetByTalentInterviewRequest:
        return self._get_by_talent_interview_request
