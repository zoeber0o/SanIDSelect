# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class RewardCandidate(object):
    _types = {
        "application_id": str,
        "talent_id": str,
        "name": str,
    }

    def __init__(self, d=None):
        self.application_id: Optional[str] = None
        self.talent_id: Optional[str] = None
        self.name: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RewardCandidateBuilder":
        return RewardCandidateBuilder()


class RewardCandidateBuilder(object):
    def __init__(self) -> None:
        self._reward_candidate = RewardCandidate()

    def application_id(self, application_id: str) -> "RewardCandidateBuilder":
        self._reward_candidate.application_id = application_id
        return self

    def talent_id(self, talent_id: str) -> "RewardCandidateBuilder":
        self._reward_candidate.talent_id = talent_id
        return self

    def name(self, name: str) -> "RewardCandidateBuilder":
        self._reward_candidate.name = name
        return self

    def build(self) -> "RewardCandidate":
        return self._reward_candidate
