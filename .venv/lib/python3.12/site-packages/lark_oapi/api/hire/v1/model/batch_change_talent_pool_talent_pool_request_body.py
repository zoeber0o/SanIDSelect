# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class BatchChangeTalentPoolTalentPoolRequestBody(object):
    _types = {
        "talent_id_list": List[str],
        "option_type": int,
    }

    def __init__(self, d=None):
        self.talent_id_list: Optional[List[str]] = None
        self.option_type: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchChangeTalentPoolTalentPoolRequestBodyBuilder":
        return BatchChangeTalentPoolTalentPoolRequestBodyBuilder()


class BatchChangeTalentPoolTalentPoolRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_change_talent_pool_talent_pool_request_body = BatchChangeTalentPoolTalentPoolRequestBody()

    def talent_id_list(self, talent_id_list: List[str]) -> "BatchChangeTalentPoolTalentPoolRequestBodyBuilder":
        self._batch_change_talent_pool_talent_pool_request_body.talent_id_list = talent_id_list
        return self

    def option_type(self, option_type: int) -> "BatchChangeTalentPoolTalentPoolRequestBodyBuilder":
        self._batch_change_talent_pool_talent_pool_request_body.option_type = option_type
        return self

    def build(self) -> "BatchChangeTalentPoolTalentPoolRequestBody":
        return self._batch_change_talent_pool_talent_pool_request_body
