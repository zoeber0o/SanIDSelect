# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .agency import Agency


class GetAgencyResponseBody(object):
    _types = {
        "agency": Agency,
    }

    def __init__(self, d=None):
        self.agency: Optional[Agency] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetAgencyResponseBodyBuilder":
        return GetAgencyResponseBodyBuilder()


class GetAgencyResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_agency_response_body = GetAgencyResponseBody()

    def agency(self, agency: Agency) -> "GetAgencyResponseBodyBuilder":
        self._get_agency_response_body.agency = agency
        return self

    def build(self) -> "GetAgencyResponseBody":
        return self._get_agency_response_body
