# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class SearchDiversityInclusionRequestBody(object):
    _types = {
        "talent_ids": List[str],
        "application_ids": List[str],
    }

    def __init__(self, d=None):
        self.talent_ids: Optional[List[str]] = None
        self.application_ids: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SearchDiversityInclusionRequestBodyBuilder":
        return SearchDiversityInclusionRequestBodyBuilder()


class SearchDiversityInclusionRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._search_diversity_inclusion_request_body = SearchDiversityInclusionRequestBody()

    def talent_ids(self, talent_ids: List[str]) -> "SearchDiversityInclusionRequestBodyBuilder":
        self._search_diversity_inclusion_request_body.talent_ids = talent_ids
        return self

    def application_ids(self, application_ids: List[str]) -> "SearchDiversityInclusionRequestBodyBuilder":
        self._search_diversity_inclusion_request_body.application_ids = application_ids
        return self

    def build(self) -> "SearchDiversityInclusionRequestBody":
        return self._search_diversity_inclusion_request_body
