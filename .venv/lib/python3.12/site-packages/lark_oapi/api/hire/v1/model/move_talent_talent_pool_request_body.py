# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MoveTalentTalentPoolRequestBody(object):
    _types = {
        "talent_id": str,
        "add_type": int,
    }

    def __init__(self, d=None):
        self.talent_id: Optional[str] = None
        self.add_type: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MoveTalentTalentPoolRequestBodyBuilder":
        return MoveTalentTalentPoolRequestBodyBuilder()


class MoveTalentTalentPoolRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._move_talent_talent_pool_request_body = MoveTalentTalentPoolRequestBody()

    def talent_id(self, talent_id: str) -> "MoveTalentTalentPoolRequestBodyBuilder":
        self._move_talent_talent_pool_request_body.talent_id = talent_id
        return self

    def add_type(self, add_type: int) -> "MoveTalentTalentPoolRequestBodyBuilder":
        self._move_talent_talent_pool_request_body.add_type = add_type
        return self

    def build(self) -> "MoveTalentTalentPoolRequestBody":
        return self._move_talent_talent_pool_request_body
