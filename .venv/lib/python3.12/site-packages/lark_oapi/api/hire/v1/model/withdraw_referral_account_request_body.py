# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class WithdrawReferralAccountRequestBody(object):
    _types = {
        "withdraw_bonus_type": List[int],
        "external_order_id": str,
    }

    def __init__(self, d=None):
        self.withdraw_bonus_type: Optional[List[int]] = None
        self.external_order_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "WithdrawReferralAccountRequestBodyBuilder":
        return WithdrawReferralAccountRequestBodyBuilder()


class WithdrawReferralAccountRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._withdraw_referral_account_request_body = WithdrawReferralAccountRequestBody()

    def withdraw_bonus_type(self, withdraw_bonus_type: List[int]) -> "WithdrawReferralAccountRequestBodyBuilder":
        self._withdraw_referral_account_request_body.withdraw_bonus_type = withdraw_bonus_type
        return self

    def external_order_id(self, external_order_id: str) -> "WithdrawReferralAccountRequestBodyBuilder":
        self._withdraw_referral_account_request_body.external_order_id = external_order_id
        return self

    def build(self) -> "WithdrawReferralAccountRequestBody":
        return self._withdraw_referral_account_request_body
