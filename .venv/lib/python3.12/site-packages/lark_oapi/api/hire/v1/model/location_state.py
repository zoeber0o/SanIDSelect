# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .location_name_info import LocationNameInfo


class LocationState(object):
    _types = {
        "state_code": str,
        "country_code": str,
        "state_name_info": LocationNameInfo,
    }

    def __init__(self, d=None):
        self.state_code: Optional[str] = None
        self.country_code: Optional[str] = None
        self.state_name_info: Optional[LocationNameInfo] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "LocationStateBuilder":
        return LocationStateBuilder()


class LocationStateBuilder(object):
    def __init__(self) -> None:
        self._location_state = LocationState()

    def state_code(self, state_code: str) -> "LocationStateBuilder":
        self._location_state.state_code = state_code
        return self

    def country_code(self, country_code: str) -> "LocationStateBuilder":
        self._location_state.country_code = country_code
        return self

    def state_name_info(self, state_name_info: LocationNameInfo) -> "LocationStateBuilder":
        self._location_state.state_name_info = state_name_info
        return self

    def build(self) -> "LocationState":
        return self._location_state
