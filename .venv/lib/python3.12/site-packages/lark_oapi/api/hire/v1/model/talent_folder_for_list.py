# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class TalentFolderForList(object):
    _types = {
        "folder_id": str,
        "folder_name": str,
        "owner_id": str,
    }

    def __init__(self, d=None):
        self.folder_id: Optional[str] = None
        self.folder_name: Optional[str] = None
        self.owner_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "TalentFolderForListBuilder":
        return TalentFolderForListBuilder()


class TalentFolderForListBuilder(object):
    def __init__(self) -> None:
        self._talent_folder_for_list = TalentFolderForList()

    def folder_id(self, folder_id: str) -> "TalentFolderForListBuilder":
        self._talent_folder_for_list.folder_id = folder_id
        return self

    def folder_name(self, folder_name: str) -> "TalentFolderForListBuilder":
        self._talent_folder_for_list.folder_name = folder_name
        return self

    def owner_id(self, owner_id: str) -> "TalentFolderForListBuilder":
        self._talent_folder_for_list.owner_id = owner_id
        return self

    def build(self) -> "TalentFolderForList":
        return self._talent_folder_for_list
