# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .website_delivery_dto import WebsiteDeliveryDto


class GetWebsiteDeliveryTaskResponseBody(object):
    _types = {
        "status": int,
        "delivery": WebsiteDeliveryDto,
        "status_msg": str,
        "extra_info": str,
    }

    def __init__(self, d=None):
        self.status: Optional[int] = None
        self.delivery: Optional[WebsiteDeliveryDto] = None
        self.status_msg: Optional[str] = None
        self.extra_info: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetWebsiteDeliveryTaskResponseBodyBuilder":
        return GetWebsiteDeliveryTaskResponseBodyBuilder()


class GetWebsiteDeliveryTaskResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_website_delivery_task_response_body = GetWebsiteDeliveryTaskResponseBody()

    def status(self, status: int) -> "GetWebsiteDeliveryTaskResponseBodyBuilder":
        self._get_website_delivery_task_response_body.status = status
        return self

    def delivery(self, delivery: WebsiteDeliveryDto) -> "GetWebsiteDeliveryTaskResponseBodyBuilder":
        self._get_website_delivery_task_response_body.delivery = delivery
        return self

    def status_msg(self, status_msg: str) -> "GetWebsiteDeliveryTaskResponseBodyBuilder":
        self._get_website_delivery_task_response_body.status_msg = status_msg
        return self

    def extra_info(self, extra_info: str) -> "GetWebsiteDeliveryTaskResponseBodyBuilder":
        self._get_website_delivery_task_response_body.extra_info = extra_info
        return self

    def build(self) -> "GetWebsiteDeliveryTaskResponseBody":
        return self._get_website_delivery_task_response_body
