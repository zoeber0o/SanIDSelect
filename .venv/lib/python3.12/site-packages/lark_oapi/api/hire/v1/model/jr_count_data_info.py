# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class JrCountDataInfo(object):
    _types = {
        "offer_count": int,
        "pre_hire_count": int,
        "complete_count": int,
    }

    def __init__(self, d=None):
        self.offer_count: Optional[int] = None
        self.pre_hire_count: Optional[int] = None
        self.complete_count: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "JrCountDataInfoBuilder":
        return JrCountDataInfoBuilder()


class JrCountDataInfoBuilder(object):
    def __init__(self) -> None:
        self._jr_count_data_info = JrCountDataInfo()

    def offer_count(self, offer_count: int) -> "JrCountDataInfoBuilder":
        self._jr_count_data_info.offer_count = offer_count
        return self

    def pre_hire_count(self, pre_hire_count: int) -> "JrCountDataInfoBuilder":
        self._jr_count_data_info.pre_hire_count = pre_hire_count
        return self

    def complete_count(self, complete_count: int) -> "JrCountDataInfoBuilder":
        self._jr_count_data_info.complete_count = complete_count
        return self

    def build(self) -> "JrCountDataInfo":
        return self._jr_count_data_info
