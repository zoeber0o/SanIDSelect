# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .permission_scope_rule import PermissionScopeRule


class PermissionGroupInfo(object):
    _types = {
        "permission_ids": List[str],
        "scope_rule": PermissionScopeRule,
    }

    def __init__(self, d=None):
        self.permission_ids: Optional[List[str]] = None
        self.scope_rule: Optional[PermissionScopeRule] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PermissionGroupInfoBuilder":
        return PermissionGroupInfoBuilder()


class PermissionGroupInfoBuilder(object):
    def __init__(self) -> None:
        self._permission_group_info = PermissionGroupInfo()

    def permission_ids(self, permission_ids: List[str]) -> "PermissionGroupInfoBuilder":
        self._permission_group_info.permission_ids = permission_ids
        return self

    def scope_rule(self, scope_rule: PermissionScopeRule) -> "PermissionGroupInfoBuilder":
        self._permission_group_info.scope_rule = scope_rule
        return self

    def build(self) -> "PermissionGroupInfo":
        return self._permission_group_info
