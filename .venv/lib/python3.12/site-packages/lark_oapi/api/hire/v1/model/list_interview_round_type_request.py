# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class ListInterviewRoundTypeRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.process_type: Optional[int] = None

    @staticmethod
    def builder() -> "ListInterviewRoundTypeRequestBuilder":
        return ListInterviewRoundTypeRequestBuilder()


class ListInterviewRoundTypeRequestBuilder(object):

    def __init__(self) -> None:
        list_interview_round_type_request = ListInterviewRoundTypeRequest()
        list_interview_round_type_request.http_method = HttpMethod.GET
        list_interview_round_type_request.uri = "/open-apis/hire/v1/interview_round_types"
        list_interview_round_type_request.token_types = {AccessTokenType.TENANT}
        self._list_interview_round_type_request: ListInterviewRoundTypeRequest = list_interview_round_type_request

    def process_type(self, process_type: int) -> "ListInterviewRoundTypeRequestBuilder":
        self._list_interview_round_type_request.process_type = process_type
        self._list_interview_round_type_request.add_query("process_type", process_type)
        return self

    def build(self) -> ListInterviewRoundTypeRequest:
        return self._list_interview_round_type_request
