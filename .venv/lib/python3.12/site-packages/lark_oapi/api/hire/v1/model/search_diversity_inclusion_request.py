# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .search_diversity_inclusion_request_body import SearchDiversityInclusionRequestBody


class SearchDiversityInclusionRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.request_body: Optional[SearchDiversityInclusionRequestBody] = None

    @staticmethod
    def builder() -> "SearchDiversityInclusionRequestBuilder":
        return SearchDiversityInclusionRequestBuilder()


class SearchDiversityInclusionRequestBuilder(object):

    def __init__(self) -> None:
        search_diversity_inclusion_request = SearchDiversityInclusionRequest()
        search_diversity_inclusion_request.http_method = HttpMethod.POST
        search_diversity_inclusion_request.uri = "/open-apis/hire/v1/applications/diversity_inclusions/search"
        search_diversity_inclusion_request.token_types = {AccessTokenType.TENANT}
        self._search_diversity_inclusion_request: SearchDiversityInclusionRequest = search_diversity_inclusion_request

    def request_body(self,
                     request_body: SearchDiversityInclusionRequestBody) -> "SearchDiversityInclusionRequestBuilder":
        self._search_diversity_inclusion_request.request_body = request_body
        self._search_diversity_inclusion_request.body = request_body
        return self

    def build(self) -> SearchDiversityInclusionRequest:
        return self._search_diversity_inclusion_request
