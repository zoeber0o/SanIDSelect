# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class JobRequirementUpdateOption(object):
    _types = {
        "need_update_related_job": bool,
    }

    def __init__(self, d=None):
        self.need_update_related_job: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "JobRequirementUpdateOptionBuilder":
        return JobRequirementUpdateOptionBuilder()


class JobRequirementUpdateOptionBuilder(object):
    def __init__(self) -> None:
        self._job_requirement_update_option = JobRequirementUpdateOption()

    def need_update_related_job(self, need_update_related_job: bool) -> "JobRequirementUpdateOptionBuilder":
        self._job_requirement_update_option.need_update_related_job = need_update_related_job
        return self

    def build(self) -> "JobRequirementUpdateOption":
        return self._job_requirement_update_option
