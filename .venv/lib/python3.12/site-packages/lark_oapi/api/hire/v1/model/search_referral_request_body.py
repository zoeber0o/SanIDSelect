# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class SearchReferralRequestBody(object):
    _types = {
        "talent_id": str,
        "start_time": str,
        "end_time": str,
    }

    def __init__(self, d=None):
        self.talent_id: Optional[str] = None
        self.start_time: Optional[str] = None
        self.end_time: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SearchReferralRequestBodyBuilder":
        return SearchReferralRequestBodyBuilder()


class SearchReferralRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._search_referral_request_body = SearchReferralRequestBody()

    def talent_id(self, talent_id: str) -> "SearchReferralRequestBodyBuilder":
        self._search_referral_request_body.talent_id = talent_id
        return self

    def start_time(self, start_time: str) -> "SearchReferralRequestBodyBuilder":
        self._search_referral_request_body.start_time = start_time
        return self

    def end_time(self, end_time: str) -> "SearchReferralRequestBodyBuilder":
        self._search_referral_request_body.end_time = end_time
        return self

    def build(self) -> "SearchReferralRequestBody":
        return self._search_referral_request_body
