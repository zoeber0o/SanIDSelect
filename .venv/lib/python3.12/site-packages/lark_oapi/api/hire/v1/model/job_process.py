# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class JobProcess(object):
    _types = {
        "your_property_name": str,
    }

    def __init__(self, d=None):
        self.your_property_name: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "JobProcessBuilder":
        return JobProcessBuilder()


class JobProcessBuilder(object):
    def __init__(self) -> None:
        self._job_process = JobProcess()

    def your_property_name(self, your_property_name: str) -> "JobProcessBuilder":
        self._job_process.your_property_name = your_property_name
        return self

    def build(self) -> "JobProcess":
        return self._job_process
