# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class LocationNameInfo(object):
    _types = {
        "zh_name": str,
        "en_name": str,
        "py_name": str,
    }

    def __init__(self, d=None):
        self.zh_name: Optional[str] = None
        self.en_name: Optional[str] = None
        self.py_name: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "LocationNameInfoBuilder":
        return LocationNameInfoBuilder()


class LocationNameInfoBuilder(object):
    def __init__(self) -> None:
        self._location_name_info = LocationNameInfo()

    def zh_name(self, zh_name: str) -> "LocationNameInfoBuilder":
        self._location_name_info.zh_name = zh_name
        return self

    def en_name(self, en_name: str) -> "LocationNameInfoBuilder":
        self._location_name_info.en_name = en_name
        return self

    def py_name(self, py_name: str) -> "LocationNameInfoBuilder":
        self._location_name_info.py_name = py_name
        return self

    def build(self) -> "LocationNameInfo":
        return self._location_name_info
