# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ChangeTalentBlockTalentBlocklistRequestBody(object):
    _types = {
        "talent_id": str,
        "option": int,
        "reason": str,
    }

    def __init__(self, d=None):
        self.talent_id: Optional[str] = None
        self.option: Optional[int] = None
        self.reason: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ChangeTalentBlockTalentBlocklistRequestBodyBuilder":
        return ChangeTalentBlockTalentBlocklistRequestBodyBuilder()


class ChangeTalentBlockTalentBlocklistRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._change_talent_block_talent_blocklist_request_body = ChangeTalentBlockTalentBlocklistRequestBody()

    def talent_id(self, talent_id: str) -> "ChangeTalentBlockTalentBlocklistRequestBodyBuilder":
        self._change_talent_block_talent_blocklist_request_body.talent_id = talent_id
        return self

    def option(self, option: int) -> "ChangeTalentBlockTalentBlocklistRequestBodyBuilder":
        self._change_talent_block_talent_blocklist_request_body.option = option
        return self

    def reason(self, reason: str) -> "ChangeTalentBlockTalentBlocklistRequestBodyBuilder":
        self._change_talent_block_talent_blocklist_request_body.reason = reason
        return self

    def build(self) -> "ChangeTalentBlockTalentBlocklistRequestBody":
        return self._change_talent_block_talent_blocklist_request_body
