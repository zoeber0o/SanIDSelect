# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class SubscriptionUserMailboxEventResponseBody(object):
    _types = {
        "event_types": List[int],
    }

    def __init__(self, d=None):
        self.event_types: Optional[List[int]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SubscriptionUserMailboxEventResponseBodyBuilder":
        return SubscriptionUserMailboxEventResponseBodyBuilder()


class SubscriptionUserMailboxEventResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._subscription_user_mailbox_event_response_body = SubscriptionUserMailboxEventResponseBody()

    def event_types(self, event_types: List[int]) -> "SubscriptionUserMailboxEventResponseBodyBuilder":
        self._subscription_user_mailbox_event_response_body.event_types = event_types
        return self

    def build(self) -> "SubscriptionUserMailboxEventResponseBody":
        return self._subscription_user_mailbox_event_response_body
