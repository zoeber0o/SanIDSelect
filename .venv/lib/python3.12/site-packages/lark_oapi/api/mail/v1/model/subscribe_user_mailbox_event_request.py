# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .subscribe_user_mailbox_event_request_body import SubscribeUserMailboxEventRequestBody


class SubscribeUserMailboxEventRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.user_mailbox_id: Optional[str] = None
        self.request_body: Optional[SubscribeUserMailboxEventRequestBody] = None

    @staticmethod
    def builder() -> "SubscribeUserMailboxEventRequestBuilder":
        return SubscribeUserMailboxEventRequestBuilder()


class SubscribeUserMailboxEventRequestBuilder(object):

    def __init__(self) -> None:
        subscribe_user_mailbox_event_request = SubscribeUserMailboxEventRequest()
        subscribe_user_mailbox_event_request.http_method = HttpMethod.POST
        subscribe_user_mailbox_event_request.uri = "/open-apis/mail/v1/user_mailboxes/:user_mailbox_id/event/subscribe"
        subscribe_user_mailbox_event_request.token_types = {AccessTokenType.USER}
        self._subscribe_user_mailbox_event_request: SubscribeUserMailboxEventRequest = subscribe_user_mailbox_event_request

    def user_mailbox_id(self, user_mailbox_id: str) -> "SubscribeUserMailboxEventRequestBuilder":
        self._subscribe_user_mailbox_event_request.user_mailbox_id = user_mailbox_id
        self._subscribe_user_mailbox_event_request.paths["user_mailbox_id"] = str(user_mailbox_id)
        return self

    def request_body(self,
                     request_body: SubscribeUserMailboxEventRequestBody) -> "SubscribeUserMailboxEventRequestBuilder":
        self._subscribe_user_mailbox_event_request.request_body = request_body
        self._subscribe_user_mailbox_event_request.body = request_body
        return self

    def build(self) -> SubscribeUserMailboxEventRequest:
        return self._subscribe_user_mailbox_event_request
