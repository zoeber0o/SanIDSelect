# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class SubscriptionUserMailboxEventRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.user_mailbox_id: Optional[str] = None

    @staticmethod
    def builder() -> "SubscriptionUserMailboxEventRequestBuilder":
        return SubscriptionUserMailboxEventRequestBuilder()


class SubscriptionUserMailboxEventRequestBuilder(object):

    def __init__(self) -> None:
        subscription_user_mailbox_event_request = SubscriptionUserMailboxEventRequest()
        subscription_user_mailbox_event_request.http_method = HttpMethod.GET
        subscription_user_mailbox_event_request.uri = "/open-apis/mail/v1/user_mailboxes/:user_mailbox_id/event/subscription"
        subscription_user_mailbox_event_request.token_types = {AccessTokenType.USER}
        self._subscription_user_mailbox_event_request: SubscriptionUserMailboxEventRequest = subscription_user_mailbox_event_request

    def user_mailbox_id(self, user_mailbox_id: str) -> "SubscriptionUserMailboxEventRequestBuilder":
        self._subscription_user_mailbox_event_request.user_mailbox_id = user_mailbox_id
        self._subscription_user_mailbox_event_request.paths["user_mailbox_id"] = str(user_mailbox_id)
        return self

    def build(self) -> SubscriptionUserMailboxEventRequest:
        return self._subscription_user_mailbox_event_request
