# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .message import Message


class GetUserMailboxMessageResponseBody(object):
    _types = {
        "message": Message,
    }

    def __init__(self, d=None):
        self.message: Optional[Message] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetUserMailboxMessageResponseBodyBuilder":
        return GetUserMailboxMessageResponseBodyBuilder()


class GetUserMailboxMessageResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_user_mailbox_message_response_body = GetUserMailboxMessageResponseBody()

    def message(self, message: Message) -> "GetUserMailboxMessageResponseBodyBuilder":
        self._get_user_mailbox_message_response_body.message = message
        return self

    def build(self) -> "GetUserMailboxMessageResponseBody":
        return self._get_user_mailbox_message_response_body
