# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class GetAppSkillRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.app_id: Optional[str] = None
        self.skill_id: Optional[str] = None

    @staticmethod
    def builder() -> "GetAppSkillRequestBuilder":
        return GetAppSkillRequestBuilder()


class GetAppSkillRequestBuilder(object):

    def __init__(self) -> None:
        get_app_skill_request = GetAppSkillRequest()
        get_app_skill_request.http_method = HttpMethod.GET
        get_app_skill_request.uri = "/open-apis/aily/v1/apps/:app_id/skills/:skill_id"
        get_app_skill_request.token_types = {AccessTokenType.USER, AccessTokenType.TENANT}
        self._get_app_skill_request: GetAppSkillRequest = get_app_skill_request

    def app_id(self, app_id: str) -> "GetAppSkillRequestBuilder":
        self._get_app_skill_request.app_id = app_id
        self._get_app_skill_request.paths["app_id"] = str(app_id)
        return self

    def skill_id(self, skill_id: str) -> "GetAppSkillRequestBuilder":
        self._get_app_skill_request.skill_id = skill_id
        self._get_app_skill_request.paths["skill_id"] = str(skill_id)
        return self

    def build(self) -> GetAppSkillRequest:
        return self._get_app_skill_request
