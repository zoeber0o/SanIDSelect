# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .channel import Channel


class SkillGlobalVariable(object):
    _types = {
        "query": str,
        "files": List[str],
        "channel": Channel,
    }

    def __init__(self, d=None):
        self.query: Optional[str] = None
        self.files: Optional[List[str]] = None
        self.channel: Optional[Channel] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SkillGlobalVariableBuilder":
        return SkillGlobalVariableBuilder()


class SkillGlobalVariableBuilder(object):
    def __init__(self) -> None:
        self._skill_global_variable = SkillGlobalVariable()

    def query(self, query: str) -> "SkillGlobalVariableBuilder":
        self._skill_global_variable.query = query
        return self

    def files(self, files: List[str]) -> "SkillGlobalVariableBuilder":
        self._skill_global_variable.files = files
        return self

    def channel(self, channel: Channel) -> "SkillGlobalVariableBuilder":
        self._skill_global_variable.channel = channel
        return self

    def build(self) -> "SkillGlobalVariable":
        return self._skill_global_variable
