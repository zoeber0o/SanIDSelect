# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class DataAssetFile(object):
    _types = {
        "token": str,
        "mime_type": str,
    }

    def __init__(self, d=None):
        self.token: Optional[str] = None
        self.mime_type: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DataAssetFileBuilder":
        return DataAssetFileBuilder()


class DataAssetFileBuilder(object):
    def __init__(self) -> None:
        self._data_asset_file = DataAssetFile()

    def token(self, token: str) -> "DataAssetFileBuilder":
        self._data_asset_file.token = token
        return self

    def mime_type(self, mime_type: str) -> "DataAssetFileBuilder":
        self._data_asset_file.mime_type = mime_type
        return self

    def build(self) -> "DataAssetFile":
        return self._data_asset_file
