# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .aily_knowledge_message import AilyKnowledgeMessage


class AskAppKnowledgeRequestBody(object):
    _types = {
        "message": AilyKnowledgeMessage,
        "data_asset_ids": List[str],
        "data_asset_tag_ids": List[str],
    }

    def __init__(self, d=None):
        self.message: Optional[AilyKnowledgeMessage] = None
        self.data_asset_ids: Optional[List[str]] = None
        self.data_asset_tag_ids: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "AskAppKnowledgeRequestBodyBuilder":
        return AskAppKnowledgeRequestBodyBuilder()


class AskAppKnowledgeRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._ask_app_knowledge_request_body = AskAppKnowledgeRequestBody()

    def message(self, message: AilyKnowledgeMessage) -> "AskAppKnowledgeRequestBodyBuilder":
        self._ask_app_knowledge_request_body.message = message
        return self

    def data_asset_ids(self, data_asset_ids: List[str]) -> "AskAppKnowledgeRequestBodyBuilder":
        self._ask_app_knowledge_request_body.data_asset_ids = data_asset_ids
        return self

    def data_asset_tag_ids(self, data_asset_tag_ids: List[str]) -> "AskAppKnowledgeRequestBodyBuilder":
        self._ask_app_knowledge_request_body.data_asset_tag_ids = data_asset_tag_ids
        return self

    def build(self) -> "AskAppKnowledgeRequestBody":
        return self._ask_app_knowledge_request_body
