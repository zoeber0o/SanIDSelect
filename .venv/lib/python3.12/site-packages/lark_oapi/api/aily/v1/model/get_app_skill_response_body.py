# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .skill import Skill


class GetAppSkillResponseBody(object):
    _types = {
        "skill": Skill,
    }

    def __init__(self, d=None):
        self.skill: Optional[Skill] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetAppSkillResponseBodyBuilder":
        return GetAppSkillResponseBodyBuilder()


class GetAppSkillResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_app_skill_response_body = GetAppSkillResponseBody()

    def skill(self, skill: Skill) -> "GetAppSkillResponseBodyBuilder":
        self._get_app_skill_response_body.skill = skill
        return self

    def build(self) -> "GetAppSkillResponseBody":
        return self._get_app_skill_response_body
