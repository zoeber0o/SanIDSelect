# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .data_asset_import_knowledge_wiki_sub_doc import DataAssetImportKnowledgeWikiSubDoc


class DataAssetImportKnowledgeWiki(object):
    _types = {
        "space_id": str,
        "sub_docs": List[DataAssetImportKnowledgeWikiSubDoc],
        "url": str,
    }

    def __init__(self, d=None):
        self.space_id: Optional[str] = None
        self.sub_docs: Optional[List[DataAssetImportKnowledgeWikiSubDoc]] = None
        self.url: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DataAssetImportKnowledgeWikiBuilder":
        return DataAssetImportKnowledgeWikiBuilder()


class DataAssetImportKnowledgeWikiBuilder(object):
    def __init__(self) -> None:
        self._data_asset_import_knowledge_wiki = DataAssetImportKnowledgeWiki()

    def space_id(self, space_id: str) -> "DataAssetImportKnowledgeWikiBuilder":
        self._data_asset_import_knowledge_wiki.space_id = space_id
        return self

    def sub_docs(self, sub_docs: List[DataAssetImportKnowledgeWikiSubDoc]) -> "DataAssetImportKnowledgeWikiBuilder":
        self._data_asset_import_knowledge_wiki.sub_docs = sub_docs
        return self

    def url(self, url: str) -> "DataAssetImportKnowledgeWikiBuilder":
        self._data_asset_import_knowledge_wiki.url = url
        return self

    def build(self) -> "DataAssetImportKnowledgeWiki":
        return self._data_asset_import_knowledge_wiki
