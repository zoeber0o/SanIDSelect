# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .aily_message import AilyMessage


class CreateAilySessionAilyMessageResponseBody(object):
    _types = {
        "message": AilyMessage,
    }

    def __init__(self, d=None):
        self.message: Optional[AilyMessage] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateAilySessionAilyMessageResponseBodyBuilder":
        return CreateAilySessionAilyMessageResponseBodyBuilder()


class CreateAilySessionAilyMessageResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_aily_session_aily_message_response_body = CreateAilySessionAilyMessageResponseBody()

    def message(self, message: AilyMessage) -> "CreateAilySessionAilyMessageResponseBodyBuilder":
        self._create_aily_session_aily_message_response_body.message = message
        return self

    def build(self) -> "CreateAilySessionAilyMessageResponseBody":
        return self._create_aily_session_aily_message_response_body
