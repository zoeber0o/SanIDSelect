# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class DataAssetResource(object):
    _types = {
        "resource_id": str,
        "resouce_type": str,
        "resource_type": str,
    }

    def __init__(self, d=None):
        self.resource_id: Optional[str] = None
        self.resouce_type: Optional[str] = None
        self.resource_type: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DataAssetResourceBuilder":
        return DataAssetResourceBuilder()


class DataAssetResourceBuilder(object):
    def __init__(self) -> None:
        self._data_asset_resource = DataAssetResource()

    def resource_id(self, resource_id: str) -> "DataAssetResourceBuilder":
        self._data_asset_resource.resource_id = resource_id
        return self

    def resouce_type(self, resouce_type: str) -> "DataAssetResourceBuilder":
        self._data_asset_resource.resouce_type = resouce_type
        return self

    def resource_type(self, resource_type: str) -> "DataAssetResourceBuilder":
        self._data_asset_resource.resource_type = resource_type
        return self

    def build(self) -> "DataAssetResource":
        return self._data_asset_resource
