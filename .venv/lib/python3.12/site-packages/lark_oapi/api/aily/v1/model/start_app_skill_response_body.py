# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class StartAppSkillResponseBody(object):
    _types = {
        "output": str,
        "status": str,
    }

    def __init__(self, d=None):
        self.output: Optional[str] = None
        self.status: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "StartAppSkillResponseBodyBuilder":
        return StartAppSkillResponseBodyBuilder()


class StartAppSkillResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._start_app_skill_response_body = StartAppSkillResponseBody()

    def output(self, output: str) -> "StartAppSkillResponseBodyBuilder":
        self._start_app_skill_response_body.output = output
        return self

    def status(self, status: str) -> "StartAppSkillResponseBodyBuilder":
        self._start_app_skill_response_body.status = status
        return self

    def build(self) -> "StartAppSkillResponseBody":
        return self._start_app_skill_response_body
