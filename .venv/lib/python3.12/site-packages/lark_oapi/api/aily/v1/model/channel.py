# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class Channel(object):
    _types = {
        "variables": str,
    }

    def __init__(self, d=None):
        self.variables: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ChannelBuilder":
        return ChannelBuilder()


class ChannelBuilder(object):
    def __init__(self) -> None:
        self._channel = Channel()

    def variables(self, variables: str) -> "ChannelBuilder":
        self._channel.variables = variables
        return self

    def build(self) -> "Channel":
        return self._channel
