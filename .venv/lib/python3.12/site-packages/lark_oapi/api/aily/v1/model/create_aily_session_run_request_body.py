# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class CreateAilySessionRunRequestBody(object):
    _types = {
        "app_id": str,
        "skill_id": str,
        "skill_input": str,
        "metadata": str,
    }

    def __init__(self, d=None):
        self.app_id: Optional[str] = None
        self.skill_id: Optional[str] = None
        self.skill_input: Optional[str] = None
        self.metadata: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateAilySessionRunRequestBodyBuilder":
        return CreateAilySessionRunRequestBodyBuilder()


class CreateAilySessionRunRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._create_aily_session_run_request_body = CreateAilySessionRunRequestBody()

    def app_id(self, app_id: str) -> "CreateAilySessionRunRequestBodyBuilder":
        self._create_aily_session_run_request_body.app_id = app_id
        return self

    def skill_id(self, skill_id: str) -> "CreateAilySessionRunRequestBodyBuilder":
        self._create_aily_session_run_request_body.skill_id = skill_id
        return self

    def skill_input(self, skill_input: str) -> "CreateAilySessionRunRequestBodyBuilder":
        self._create_aily_session_run_request_body.skill_input = skill_input
        return self

    def metadata(self, metadata: str) -> "CreateAilySessionRunRequestBodyBuilder":
        self._create_aily_session_run_request_body.metadata = metadata
        return self

    def build(self) -> "CreateAilySessionRunRequestBody":
        return self._create_aily_session_run_request_body
