# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class UpdateGridProperties(object):
    _types = {
        "frozen_row_count": int,
        "frozen_column_count": int,
    }

    def __init__(self, d=None):
        self.frozen_row_count: Optional[int] = None
        self.frozen_column_count: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "UpdateGridPropertiesBuilder":
        return UpdateGridPropertiesBuilder()


class UpdateGridPropertiesBuilder(object):
    def __init__(self) -> None:
        self._update_grid_properties = UpdateGridProperties()

    def frozen_row_count(self, frozen_row_count: int) -> "UpdateGridPropertiesBuilder":
        self._update_grid_properties.frozen_row_count = frozen_row_count
        return self

    def frozen_column_count(self, frozen_column_count: int) -> "UpdateGridPropertiesBuilder":
        self._update_grid_properties.frozen_column_count = frozen_column_count
        return self

    def build(self) -> "UpdateGridProperties":
        return self._update_grid_properties
