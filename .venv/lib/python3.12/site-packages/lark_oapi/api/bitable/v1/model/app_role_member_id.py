# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class AppRoleMemberId(object):
    _types = {
        "type": str,
        "id": str,
    }

    def __init__(self, d=None):
        self.type: Optional[str] = None
        self.id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "AppRoleMemberIdBuilder":
        return AppRoleMemberIdBuilder()


class AppRoleMemberIdBuilder(object):
    def __init__(self) -> None:
        self._app_role_member_id = AppRoleMemberId()

    def type(self, type: str) -> "AppRoleMemberIdBuilder":
        self._app_role_member_id.type = type
        return self

    def id(self, id: str) -> "AppRoleMemberIdBuilder":
        self._app_role_member_id.id = id
        return self

    def build(self) -> "AppRoleMemberId":
        return self._app_role_member_id
