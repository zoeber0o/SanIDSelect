# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .req_app import ReqApp


class CreateAppRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.request_body: Optional[ReqApp] = None

    @staticmethod
    def builder() -> "CreateAppRequestBuilder":
        return CreateAppRequestBuilder()


class CreateAppRequestBuilder(object):

    def __init__(self) -> None:
        create_app_request = CreateAppRequest()
        create_app_request.http_method = HttpMethod.POST
        create_app_request.uri = "/open-apis/bitable/v1/apps"
        create_app_request.token_types = {AccessTokenType.USER, AccessTokenType.TENANT}
        self._create_app_request: CreateAppRequest = create_app_request

    def request_body(self, request_body: ReqApp) -> "CreateAppRequestBuilder":
        self._create_app_request.request_body = request_body
        self._create_app_request.body = request_body
        return self

    def build(self) -> CreateAppRequest:
        return self._create_app_request
