# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .app_table_form_patched_field import AppTableFormPatchedField


class PatchAppTableFormFieldResponseBody(object):
    _types = {
        "field": AppTableFormPatchedField,
    }

    def __init__(self, d=None):
        self.field: Optional[AppTableFormPatchedField] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PatchAppTableFormFieldResponseBodyBuilder":
        return PatchAppTableFormFieldResponseBodyBuilder()


class PatchAppTableFormFieldResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._patch_app_table_form_field_response_body = PatchAppTableFormFieldResponseBody()

    def field(self, field: AppTableFormPatchedField) -> "PatchAppTableFormFieldResponseBodyBuilder":
        self._patch_app_table_form_field_response_body.field = field
        return self

    def build(self) -> "PatchAppTableFormFieldResponseBody":
        return self._patch_app_table_form_field_response_body
