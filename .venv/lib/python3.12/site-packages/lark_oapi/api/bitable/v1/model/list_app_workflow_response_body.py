# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .app_workflow import AppWorkflow


class ListAppWorkflowResponseBody(object):
    _types = {
        "workflows": List[AppWorkflow],
    }

    def __init__(self, d=None):
        self.workflows: Optional[List[AppWorkflow]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ListAppWorkflowResponseBodyBuilder":
        return ListAppWorkflowResponseBodyBuilder()


class ListAppWorkflowResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._list_app_workflow_response_body = ListAppWorkflowResponseBody()

    def workflows(self, workflows: List[AppWorkflow]) -> "ListAppWorkflowResponseBodyBuilder":
        self._list_app_workflow_response_body.workflows = workflows
        return self

    def build(self) -> "ListAppWorkflowResponseBody":
        return self._list_app_workflow_response_body
