# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n import I18n


class OperatorName(object):
    _types = {
        "default_name": str,
        "i18n_value": I18n,
    }

    def __init__(self, d=None):
        self.default_name: Optional[str] = None
        self.i18n_value: Optional[I18n] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OperatorNameBuilder":
        return OperatorNameBuilder()


class OperatorNameBuilder(object):
    def __init__(self) -> None:
        self._operator_name = OperatorName()

    def default_name(self, default_name: str) -> "OperatorNameBuilder":
        self._operator_name.default_name = default_name
        return self

    def i18n_value(self, i18n_value: I18n) -> "OperatorNameBuilder":
        self._operator_name.i18n_value = i18n_value
        return self

    def build(self) -> "OperatorName":
        return self._operator_name
