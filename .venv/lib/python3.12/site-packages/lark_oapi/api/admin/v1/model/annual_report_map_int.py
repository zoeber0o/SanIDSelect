# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class AnnualReportMapInt(object):
    _types = {
        "year": str,
        "count": int,
    }

    def __init__(self, d=None):
        self.year: Optional[str] = None
        self.count: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "AnnualReportMapIntBuilder":
        return AnnualReportMapIntBuilder()


class AnnualReportMapIntBuilder(object):
    def __init__(self) -> None:
        self._annual_report_map_int = AnnualReportMapInt()

    def year(self, year: str) -> "AnnualReportMapIntBuilder":
        self._annual_report_map_int.year = year
        return self

    def count(self, count: int) -> "AnnualReportMapIntBuilder":
        self._annual_report_map_int.count = count
        return self

    def build(self) -> "AnnualReportMapInt":
        return self._annual_report_map_int
