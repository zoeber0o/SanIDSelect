# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MyAiSearchDefinitionScenarioContext(object):
    _types = {
        "tool_raw_instruction": str,
    }

    def __init__(self, d=None):
        self.tool_raw_instruction: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MyAiSearchDefinitionScenarioContextBuilder":
        return MyAiSearchDefinitionScenarioContextBuilder()


class MyAiSearchDefinitionScenarioContextBuilder(object):
    def __init__(self) -> None:
        self._my_ai_search_definition_scenario_context = MyAiSearchDefinitionScenarioContext()

    def tool_raw_instruction(self, tool_raw_instruction: str) -> "MyAiSearchDefinitionScenarioContextBuilder":
        self._my_ai_search_definition_scenario_context.tool_raw_instruction = tool_raw_instruction
        return self

    def build(self) -> "MyAiSearchDefinitionScenarioContext":
        return self._my_ai_search_definition_scenario_context
