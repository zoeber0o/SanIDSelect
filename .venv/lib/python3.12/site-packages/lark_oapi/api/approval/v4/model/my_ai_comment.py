# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MyAiComment(object):
    _types = {
        "user_name": str,
        "comment": str,
    }

    def __init__(self, d=None):
        self.user_name: Optional[str] = None
        self.comment: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MyAiCommentBuilder":
        return MyAiCommentBuilder()


class MyAiCommentBuilder(object):
    def __init__(self) -> None:
        self._my_ai_comment = MyAiComment()

    def user_name(self, user_name: str) -> "MyAiCommentBuilder":
        self._my_ai_comment.user_name = user_name
        return self

    def comment(self, comment: str) -> "MyAiCommentBuilder":
        self._my_ai_comment.comment = comment
        return self

    def build(self) -> "MyAiComment":
        return self._my_ai_comment
