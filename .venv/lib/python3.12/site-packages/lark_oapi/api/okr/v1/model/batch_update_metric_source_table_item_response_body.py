# Code generated by Lark OpenAPI.

from typing import Optional, List

from lark_oapi.core.construct import init
from .failed_metric_item import FailedMetricItem
from .metric_item import MetricItem


class BatchUpdateMetricSourceTableItemResponseBody(object):
    _types = {
        "items": List[MetricItem],
        "failed_items": List[FailedMetricItem],
    }

    def __init__(self, d=None):
        self.items: Optional[List[MetricItem]] = None
        self.failed_items: Optional[List[FailedMetricItem]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchUpdateMetricSourceTableItemResponseBodyBuilder":
        return BatchUpdateMetricSourceTableItemResponseBodyBuilder()


class BatchUpdateMetricSourceTableItemResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_update_metric_source_table_item_response_body = BatchUpdateMetricSourceTableItemResponseBody()

    def items(self, items: List[MetricItem]) -> "BatchUpdateMetricSourceTableItemResponseBodyBuilder":
        self._batch_update_metric_source_table_item_response_body.items = items
        return self

    def failed_items(self,
                     failed_items: List[FailedMetricItem]) -> "BatchUpdateMetricSourceTableItemResponseBodyBuilder":
        self._batch_update_metric_source_table_item_response_body.failed_items = failed_items
        return self

    def build(self) -> "BatchUpdateMetricSourceTableItemResponseBody":
        return self._batch_update_metric_source_table_item_response_body
