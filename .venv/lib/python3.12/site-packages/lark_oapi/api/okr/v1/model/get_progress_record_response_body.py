# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .content_block import ContentBlock
from .progress_rate_new import ProgressRateNew


class GetProgressRecordResponseBody(object):
    _types = {
        "progress_id": int,
        "modify_time": int,
        "content": ContentBlock,
        "progress_rate": ProgressRateNew,
    }

    def __init__(self, d=None):
        self.progress_id: Optional[int] = None
        self.modify_time: Optional[int] = None
        self.content: Optional[ContentBlock] = None
        self.progress_rate: Optional[ProgressRateNew] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetProgressRecordResponseBodyBuilder":
        return GetProgressRecordResponseBodyBuilder()


class GetProgressRecordResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_progress_record_response_body = GetProgressRecordResponseBody()

    def progress_id(self, progress_id: int) -> "GetProgressRecordResponseBodyBuilder":
        self._get_progress_record_response_body.progress_id = progress_id
        return self

    def modify_time(self, modify_time: int) -> "GetProgressRecordResponseBodyBuilder":
        self._get_progress_record_response_body.modify_time = modify_time
        return self

    def content(self, content: ContentBlock) -> "GetProgressRecordResponseBodyBuilder":
        self._get_progress_record_response_body.content = content
        return self

    def progress_rate(self, progress_rate: ProgressRateNew) -> "GetProgressRecordResponseBodyBuilder":
        self._get_progress_record_response_body.progress_rate = progress_rate
        return self

    def build(self) -> "GetProgressRecordResponseBody":
        return self._get_progress_record_response_body
