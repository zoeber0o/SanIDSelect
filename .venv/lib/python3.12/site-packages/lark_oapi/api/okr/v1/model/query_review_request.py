# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class QueryReviewRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.user_id_type: Optional[str] = None
        self.user_ids: Optional[List[str]] = None
        self.period_ids: Optional[List[str]] = None

    @staticmethod
    def builder() -> "QueryReviewRequestBuilder":
        return QueryReviewRequestBuilder()


class QueryReviewRequestBuilder(object):

    def __init__(self) -> None:
        query_review_request = QueryReviewRequest()
        query_review_request.http_method = HttpMethod.GET
        query_review_request.uri = "/open-apis/okr/v1/reviews/query"
        query_review_request.token_types = {AccessTokenType.TENANT}
        self._query_review_request: QueryReviewRequest = query_review_request

    def user_id_type(self, user_id_type: str) -> "QueryReviewRequestBuilder":
        self._query_review_request.user_id_type = user_id_type
        self._query_review_request.add_query("user_id_type", user_id_type)
        return self

    def user_ids(self, user_ids: List[str]) -> "QueryReviewRequestBuilder":
        self._query_review_request.user_ids = user_ids
        self._query_review_request.add_query("user_ids", user_ids)
        return self

    def period_ids(self, period_ids: List[str]) -> "QueryReviewRequestBuilder":
        self._query_review_request.period_ids = period_ids
        self._query_review_request.add_query("period_ids", period_ids)
        return self

    def build(self) -> QueryReviewRequest:
        return self._query_review_request
