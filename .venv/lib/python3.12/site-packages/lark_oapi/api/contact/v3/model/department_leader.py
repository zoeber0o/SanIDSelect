# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class DepartmentLeader(object):
    _types = {
        "leader_type": int,
        "leader_i_d": str,
    }

    def __init__(self, d=None):
        self.leader_type: Optional[int] = None
        self.leader_i_d: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DepartmentLeaderBuilder":
        return DepartmentLeaderBuilder()


class DepartmentLeaderBuilder(object):
    def __init__(self) -> None:
        self._department_leader = DepartmentLeader()

    def leader_type(self, leader_type: int) -> "DepartmentLeaderBuilder":
        self._department_leader.leader_type = leader_type
        return self

    def leader_i_d(self, leader_i_d: str) -> "DepartmentLeaderBuilder":
        self._department_leader.leader_i_d = leader_i_d
        return self

    def build(self) -> "DepartmentLeader":
        return self._department_leader
