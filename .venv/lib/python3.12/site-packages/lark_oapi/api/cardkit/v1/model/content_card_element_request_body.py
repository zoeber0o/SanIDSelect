# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ContentCardElementRequestBody(object):
    _types = {
        "uuid": str,
        "content": str,
        "sequence": int,
    }

    def __init__(self, d=None):
        self.uuid: Optional[str] = None
        self.content: Optional[str] = None
        self.sequence: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ContentCardElementRequestBodyBuilder":
        return ContentCardElementRequestBodyBuilder()


class ContentCardElementRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._content_card_element_request_body = ContentCardElementRequestBody()

    def uuid(self, uuid: str) -> "ContentCardElementRequestBodyBuilder":
        self._content_card_element_request_body.uuid = uuid
        return self

    def content(self, content: str) -> "ContentCardElementRequestBodyBuilder":
        self._content_card_element_request_body.content = content
        return self

    def sequence(self, sequence: int) -> "ContentCardElementRequestBodyBuilder":
        self._content_card_element_request_body.sequence = sequence
        return self

    def build(self) -> "ContentCardElementRequestBody":
        return self._content_card_element_request_body
