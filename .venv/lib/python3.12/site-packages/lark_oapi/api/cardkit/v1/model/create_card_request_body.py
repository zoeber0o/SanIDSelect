# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class CreateCardRequestBody(object):
    _types = {
        "type": str,
        "data": str,
    }

    def __init__(self, d=None):
        self.type: Optional[str] = None
        self.data: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateCardRequestBodyBuilder":
        return CreateCardRequestBodyBuilder()


class CreateCardRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._create_card_request_body = CreateCardRequestBody()

    def type(self, type: str) -> "CreateCardRequestBodyBuilder":
        self._create_card_request_body.type = type
        return self

    def data(self, data: str) -> "CreateCardRequestBodyBuilder":
        self._create_card_request_body.data = data
        return self

    def build(self) -> "CreateCardRequestBody":
        return self._create_card_request_body
