# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class EventTime(object):
    _types = {
        "time_stamp": int,
    }

    def __init__(self, d=None):
        self.time_stamp: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "EventTimeBuilder":
        return EventTimeBuilder()


class EventTimeBuilder(object):
    def __init__(self) -> None:
        self._event_time = EventTime()

    def time_stamp(self, time_stamp: int) -> "EventTimeBuilder":
        self._event_time.time_stamp = time_stamp
        return self

    def build(self) -> "EventTime":
        return self._event_time
