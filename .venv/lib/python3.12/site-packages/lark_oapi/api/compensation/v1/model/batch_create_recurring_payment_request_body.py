# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .recurring_payment_for_create import RecurringPaymentForCreate


class BatchCreateRecurringPaymentRequestBody(object):
    _types = {
        "records": List[RecurringPaymentForCreate],
    }

    def __init__(self, d=None):
        self.records: Optional[List[RecurringPaymentForCreate]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchCreateRecurringPaymentRequestBodyBuilder":
        return BatchCreateRecurringPaymentRequestBodyBuilder()


class BatchCreateRecurringPaymentRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_create_recurring_payment_request_body = BatchCreateRecurringPaymentRequestBody()

    def records(self, records: List[RecurringPaymentForCreate]) -> "BatchCreateRecurringPaymentRequestBodyBuilder":
        self._batch_create_recurring_payment_request_body.records = records
        return self

    def build(self) -> "BatchCreateRecurringPaymentRequestBody":
        return self._batch_create_recurring_payment_request_body
