# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .query_social_plan_request_body import QuerySocialPlanRequestBody


class QuerySocialPlanRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.request_body: Optional[QuerySocialPlanRequestBody] = None

    @staticmethod
    def builder() -> "QuerySocialPlanRequestBuilder":
        return QuerySocialPlanRequestBuilder()


class QuerySocialPlanRequestBuilder(object):

    def __init__(self) -> None:
        query_social_plan_request = QuerySocialPlanRequest()
        query_social_plan_request.http_method = HttpMethod.POST
        query_social_plan_request.uri = "/open-apis/compensation/v1/social_plans/query"
        query_social_plan_request.token_types = {AccessTokenType.TENANT}
        self._query_social_plan_request: QuerySocialPlanRequest = query_social_plan_request

    def request_body(self, request_body: QuerySocialPlanRequestBody) -> "QuerySocialPlanRequestBuilder":
        self._query_social_plan_request.request_body = request_body
        self._query_social_plan_request.body = request_body
        return self

    def build(self) -> QuerySocialPlanRequest:
        return self._query_social_plan_request
