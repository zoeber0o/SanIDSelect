# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class LumpSumPaymentDetail(object):
    _types = {
        "id": str,
        "record_id": str,
        "user_id": str,
        "issuance_amount": str,
        "issuance_status": str,
        "issuance_way": str,
        "issuance_time": str,
        "currency_id": str,
        "belong_time": str,
        "create_time": str,
        "modify_time": str,
        "issuance_country_region_id": str,
        "issuance_pay_group_id": str,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.record_id: Optional[str] = None
        self.user_id: Optional[str] = None
        self.issuance_amount: Optional[str] = None
        self.issuance_status: Optional[str] = None
        self.issuance_way: Optional[str] = None
        self.issuance_time: Optional[str] = None
        self.currency_id: Optional[str] = None
        self.belong_time: Optional[str] = None
        self.create_time: Optional[str] = None
        self.modify_time: Optional[str] = None
        self.issuance_country_region_id: Optional[str] = None
        self.issuance_pay_group_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "LumpSumPaymentDetailBuilder":
        return LumpSumPaymentDetailBuilder()


class LumpSumPaymentDetailBuilder(object):
    def __init__(self) -> None:
        self._lump_sum_payment_detail = LumpSumPaymentDetail()

    def id(self, id: str) -> "LumpSumPaymentDetailBuilder":
        self._lump_sum_payment_detail.id = id
        return self

    def record_id(self, record_id: str) -> "LumpSumPaymentDetailBuilder":
        self._lump_sum_payment_detail.record_id = record_id
        return self

    def user_id(self, user_id: str) -> "LumpSumPaymentDetailBuilder":
        self._lump_sum_payment_detail.user_id = user_id
        return self

    def issuance_amount(self, issuance_amount: str) -> "LumpSumPaymentDetailBuilder":
        self._lump_sum_payment_detail.issuance_amount = issuance_amount
        return self

    def issuance_status(self, issuance_status: str) -> "LumpSumPaymentDetailBuilder":
        self._lump_sum_payment_detail.issuance_status = issuance_status
        return self

    def issuance_way(self, issuance_way: str) -> "LumpSumPaymentDetailBuilder":
        self._lump_sum_payment_detail.issuance_way = issuance_way
        return self

    def issuance_time(self, issuance_time: str) -> "LumpSumPaymentDetailBuilder":
        self._lump_sum_payment_detail.issuance_time = issuance_time
        return self

    def currency_id(self, currency_id: str) -> "LumpSumPaymentDetailBuilder":
        self._lump_sum_payment_detail.currency_id = currency_id
        return self

    def belong_time(self, belong_time: str) -> "LumpSumPaymentDetailBuilder":
        self._lump_sum_payment_detail.belong_time = belong_time
        return self

    def create_time(self, create_time: str) -> "LumpSumPaymentDetailBuilder":
        self._lump_sum_payment_detail.create_time = create_time
        return self

    def modify_time(self, modify_time: str) -> "LumpSumPaymentDetailBuilder":
        self._lump_sum_payment_detail.modify_time = modify_time
        return self

    def issuance_country_region_id(self, issuance_country_region_id: str) -> "LumpSumPaymentDetailBuilder":
        self._lump_sum_payment_detail.issuance_country_region_id = issuance_country_region_id
        return self

    def issuance_pay_group_id(self, issuance_pay_group_id: str) -> "LumpSumPaymentDetailBuilder":
        self._lump_sum_payment_detail.issuance_pay_group_id = issuance_pay_group_id
        return self

    def build(self) -> "LumpSumPaymentDetail":
        return self._lump_sum_payment_detail
