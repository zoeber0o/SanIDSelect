# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n import I18n


class StandardDimension(object):
    _types = {
        "api_name": str,
        "label": I18n,
    }

    def __init__(self, d=None):
        self.api_name: Optional[str] = None
        self.label: Optional[I18n] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "StandardDimensionBuilder":
        return StandardDimensionBuilder()


class StandardDimensionBuilder(object):
    def __init__(self) -> None:
        self._standard_dimension = StandardDimension()

    def api_name(self, api_name: str) -> "StandardDimensionBuilder":
        self._standard_dimension.api_name = api_name
        return self

    def label(self, label: I18n) -> "StandardDimensionBuilder":
        self._standard_dimension.label = label
        return self

    def build(self) -> "StandardDimension":
        return self._standard_dimension
