# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .lump_sum_payment_operate_result import LumpSumPaymentOperateResult


class BatchRemoveLumpSumPaymentResponseBody(object):
    _types = {
        "operate_results": List[LumpSumPaymentOperateResult],
    }

    def __init__(self, d=None):
        self.operate_results: Optional[List[LumpSumPaymentOperateResult]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchRemoveLumpSumPaymentResponseBodyBuilder":
        return BatchRemoveLumpSumPaymentResponseBodyBuilder()


class BatchRemoveLumpSumPaymentResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_remove_lump_sum_payment_response_body = BatchRemoveLumpSumPaymentResponseBody()

    def operate_results(self, operate_results: List[
        LumpSumPaymentOperateResult]) -> "BatchRemoveLumpSumPaymentResponseBodyBuilder":
        self._batch_remove_lump_sum_payment_response_body.operate_results = operate_results
        return self

    def build(self) -> "BatchRemoveLumpSumPaymentResponseBody":
        return self._batch_remove_lump_sum_payment_response_body
