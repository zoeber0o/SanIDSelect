# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class QuerySocialPlanRequestBody(object):
    _types = {
        "plan_ids": List[str],
        "effective_date": str,
    }

    def __init__(self, d=None):
        self.plan_ids: Optional[List[str]] = None
        self.effective_date: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QuerySocialPlanRequestBodyBuilder":
        return QuerySocialPlanRequestBodyBuilder()


class QuerySocialPlanRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._query_social_plan_request_body = QuerySocialPlanRequestBody()

    def plan_ids(self, plan_ids: List[str]) -> "QuerySocialPlanRequestBodyBuilder":
        self._query_social_plan_request_body.plan_ids = plan_ids
        return self

    def effective_date(self, effective_date: str) -> "QuerySocialPlanRequestBodyBuilder":
        self._query_social_plan_request_body.effective_date = effective_date
        return self

    def build(self) -> "QuerySocialPlanRequestBody":
        return self._query_social_plan_request_body
