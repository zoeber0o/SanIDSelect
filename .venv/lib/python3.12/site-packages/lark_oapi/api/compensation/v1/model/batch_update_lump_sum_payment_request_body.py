# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .lump_sum_payment_for_update import LumpSumPaymentForUpdate


class BatchUpdateLumpSumPaymentRequestBody(object):
    _types = {
        "records": List[LumpSumPaymentForUpdate],
    }

    def __init__(self, d=None):
        self.records: Optional[List[LumpSumPaymentForUpdate]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchUpdateLumpSumPaymentRequestBodyBuilder":
        return BatchUpdateLumpSumPaymentRequestBodyBuilder()


class BatchUpdateLumpSumPaymentRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_update_lump_sum_payment_request_body = BatchUpdateLumpSumPaymentRequestBody()

    def records(self, records: List[LumpSumPaymentForUpdate]) -> "BatchUpdateLumpSumPaymentRequestBodyBuilder":
        self._batch_update_lump_sum_payment_request_body.records = records
        return self

    def build(self) -> "BatchUpdateLumpSumPaymentRequestBody":
        return self._batch_update_lump_sum_payment_request_body
