# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class QueryQuestionRequestBody(object):
    _types = {
        "tag_based_question_ids": List[int],
    }

    def __init__(self, d=None):
        self.tag_based_question_ids: Optional[List[int]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryQuestionRequestBodyBuilder":
        return QueryQuestionRequestBodyBuilder()


class QueryQuestionRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._query_question_request_body = QueryQuestionRequestBody()

    def tag_based_question_ids(self, tag_based_question_ids: List[int]) -> "QueryQuestionRequestBodyBuilder":
        self._query_question_request_body.tag_based_question_ids = tag_based_question_ids
        return self

    def build(self) -> "QueryQuestionRequestBody":
        return self._query_question_request_body
