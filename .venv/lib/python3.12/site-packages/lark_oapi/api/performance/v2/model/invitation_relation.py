# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class InvitationRelation(object):
    _types = {
        "reviewee_user_id": str,
        "reviewer_user_ids": List[str],
    }

    def __init__(self, d=None):
        self.reviewee_user_id: Optional[str] = None
        self.reviewer_user_ids: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "InvitationRelationBuilder":
        return InvitationRelationBuilder()


class InvitationRelationBuilder(object):
    def __init__(self) -> None:
        self._invitation_relation = InvitationRelation()

    def reviewee_user_id(self, reviewee_user_id: str) -> "InvitationRelationBuilder":
        self._invitation_relation.reviewee_user_id = reviewee_user_id
        return self

    def reviewer_user_ids(self, reviewer_user_ids: List[str]) -> "InvitationRelationBuilder":
        self._invitation_relation.reviewer_user_ids = reviewer_user_ids
        return self

    def build(self) -> "InvitationRelation":
        return self._invitation_relation
