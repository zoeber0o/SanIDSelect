# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n import I18n
from .field import Field


class Unit(object):
    _types = {
        "unit_id": str,
        "name": I18n,
        "fields": List[Field],
    }

    def __init__(self, d=None):
        self.unit_id: Optional[str] = None
        self.name: Optional[I18n] = None
        self.fields: Optional[List[Field]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "UnitBuilder":
        return UnitBuilder()


class UnitBuilder(object):
    def __init__(self) -> None:
        self._unit = Unit()

    def unit_id(self, unit_id: str) -> "UnitBuilder":
        self._unit.unit_id = unit_id
        return self

    def name(self, name: I18n) -> "UnitBuilder":
        self._unit.name = name
        return self

    def fields(self, fields: List[Field]) -> "UnitBuilder":
        self._unit.fields = fields
        return self

    def build(self) -> "Unit":
        return self._unit
