# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MetricData(object):
    _types = {
        "id": str,
        "score": str,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.score: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MetricDataBuilder":
        return MetricDataBuilder()


class MetricDataBuilder(object):
    def __init__(self) -> None:
        self._metric_data = MetricData()

    def id(self, id: str) -> "MetricDataBuilder":
        self._metric_data.id = id
        return self

    def score(self, score: str) -> "MetricDataBuilder":
        self._metric_data.score = score
        return self

    def build(self) -> "MetricData":
        return self._metric_data
