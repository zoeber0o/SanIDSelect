# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .reviewee_metric import RevieweeMetric


class QueryMetricDetailResponseBody(object):
    _types = {
        "semester_id": str,
        "reviewee_metrics": List[RevieweeMetric],
    }

    def __init__(self, d=None):
        self.semester_id: Optional[str] = None
        self.reviewee_metrics: Optional[List[RevieweeMetric]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryMetricDetailResponseBodyBuilder":
        return QueryMetricDetailResponseBodyBuilder()


class QueryMetricDetailResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._query_metric_detail_response_body = QueryMetricDetailResponseBody()

    def semester_id(self, semester_id: str) -> "QueryMetricDetailResponseBodyBuilder":
        self._query_metric_detail_response_body.semester_id = semester_id
        return self

    def reviewee_metrics(self, reviewee_metrics: List[RevieweeMetric]) -> "QueryMetricDetailResponseBodyBuilder":
        self._query_metric_detail_response_body.reviewee_metrics = reviewee_metrics
        return self

    def build(self) -> "QueryMetricDetailResponseBody":
        return self._query_metric_detail_response_body
