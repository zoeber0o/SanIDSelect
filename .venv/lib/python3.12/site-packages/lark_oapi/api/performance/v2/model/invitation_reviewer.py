# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class InvitationReviewer(object):
    _types = {
        "reviewer_user_id": str,
        "source": str,
    }

    def __init__(self, d=None):
        self.reviewer_user_id: Optional[str] = None
        self.source: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "InvitationReviewerBuilder":
        return InvitationReviewerBuilder()


class InvitationReviewerBuilder(object):
    def __init__(self) -> None:
        self._invitation_reviewer = InvitationReviewer()

    def reviewer_user_id(self, reviewer_user_id: str) -> "InvitationReviewerBuilder":
        self._invitation_reviewer.reviewer_user_id = reviewer_user_id
        return self

    def source(self, source: str) -> "InvitationReviewerBuilder":
        self._invitation_reviewer.source = source
        return self

    def build(self) -> "InvitationReviewer":
        return self._invitation_reviewer
