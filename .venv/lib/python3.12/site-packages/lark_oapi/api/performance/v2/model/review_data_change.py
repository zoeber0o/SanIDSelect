# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user_id import UserId
from .stage_change import StageChange


class ReviewDataChange(object):
    _types = {
        "user_id": UserId,
        "semester_id": str,
        "activity_id": str,
        "stage_changes": List[StageChange],
    }

    def __init__(self, d=None):
        self.user_id: Optional[UserId] = None
        self.semester_id: Optional[str] = None
        self.activity_id: Optional[str] = None
        self.stage_changes: Optional[List[StageChange]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ReviewDataChangeBuilder":
        return ReviewDataChangeBuilder()


class ReviewDataChangeBuilder(object):
    def __init__(self) -> None:
        self._review_data_change = ReviewDataChange()

    def user_id(self, user_id: UserId) -> "ReviewDataChangeBuilder":
        self._review_data_change.user_id = user_id
        return self

    def semester_id(self, semester_id: str) -> "ReviewDataChangeBuilder":
        self._review_data_change.semester_id = semester_id
        return self

    def activity_id(self, activity_id: str) -> "ReviewDataChangeBuilder":
        self._review_data_change.activity_id = activity_id
        return self

    def stage_changes(self, stage_changes: List[StageChange]) -> "ReviewDataChangeBuilder":
        self._review_data_change.stage_changes = stage_changes
        return self

    def build(self) -> "ReviewDataChange":
        return self._review_data_change
