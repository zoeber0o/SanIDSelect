# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MetricReviewRuleConfig(object):
    _types = {
        "max": str,
        "min": str,
    }

    def __init__(self, d=None):
        self.max: Optional[str] = None
        self.min: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MetricReviewRuleConfigBuilder":
        return MetricReviewRuleConfigBuilder()


class MetricReviewRuleConfigBuilder(object):
    def __init__(self) -> None:
        self._metric_review_rule_config = MetricReviewRuleConfig()

    def max(self, max: str) -> "MetricReviewRuleConfigBuilder":
        self._metric_review_rule_config.max = max
        return self

    def min(self, min: str) -> "MetricReviewRuleConfigBuilder":
        self._metric_review_rule_config.min = min
        return self

    def build(self) -> "MetricReviewRuleConfig":
        return self._metric_review_rule_config
