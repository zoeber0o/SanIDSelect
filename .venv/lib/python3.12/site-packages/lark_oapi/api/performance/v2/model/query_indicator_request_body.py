# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class QueryIndicatorRequestBody(object):
    _types = {
        "indicator_ids": List[int],
    }

    def __init__(self, d=None):
        self.indicator_ids: Optional[List[int]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryIndicatorRequestBodyBuilder":
        return QueryIndicatorRequestBodyBuilder()


class QueryIndicatorRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._query_indicator_request_body = QueryIndicatorRequestBody()

    def indicator_ids(self, indicator_ids: List[int]) -> "QueryIndicatorRequestBodyBuilder":
        self._query_indicator_request_body.indicator_ids = indicator_ids
        return self

    def build(self) -> "QueryIndicatorRequestBody":
        return self._query_indicator_request_body
