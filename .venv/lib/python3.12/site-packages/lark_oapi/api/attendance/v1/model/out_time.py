# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OutTime(object):
    _types = {
        "datetime": str,
        "day_type": str,
    }

    def __init__(self, d=None):
        self.datetime: Optional[str] = None
        self.day_type: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OutTimeBuilder":
        return OutTimeBuilder()


class OutTimeBuilder(object):
    def __init__(self) -> None:
        self._out_time = OutTime()

    def datetime(self, datetime: str) -> "OutTimeBuilder":
        self._out_time.datetime = datetime
        return self

    def day_type(self, day_type: str) -> "OutTimeBuilder":
        self._out_time.day_type = day_type
        return self

    def build(self) -> "OutTime":
        return self._out_time
