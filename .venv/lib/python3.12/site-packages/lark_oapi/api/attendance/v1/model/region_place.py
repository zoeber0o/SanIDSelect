# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class RegionPlace(object):
    _types = {
        "region_level": str,
        "region_id": str,
    }

    def __init__(self, d=None):
        self.region_level: Optional[str] = None
        self.region_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RegionPlaceBuilder":
        return RegionPlaceBuilder()


class RegionPlaceBuilder(object):
    def __init__(self) -> None:
        self._region_place = RegionPlace()

    def region_level(self, region_level: str) -> "RegionPlaceBuilder":
        self._region_place.region_level = region_level
        return self

    def region_id(self, region_id: str) -> "RegionPlaceBuilder":
        self._region_place.region_id = region_id
        return self

    def build(self) -> "RegionPlace":
        return self._region_place
