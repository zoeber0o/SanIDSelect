# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user_setting import UserSetting


class QueryUserSettingResponseBody(object):
    _types = {
        "user_settings": List[UserSetting],
    }

    def __init__(self, d=None):
        self.user_settings: Optional[List[UserSetting]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryUserSettingResponseBodyBuilder":
        return QueryUserSettingResponseBodyBuilder()


class QueryUserSettingResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._query_user_setting_response_body = QueryUserSettingResponseBody()

    def user_settings(self, user_settings: List[UserSetting]) -> "QueryUserSettingResponseBodyBuilder":
        self._query_user_setting_response_body.user_settings = user_settings
        return self

    def build(self) -> "QueryUserSettingResponseBody":
        return self._query_user_setting_response_body
