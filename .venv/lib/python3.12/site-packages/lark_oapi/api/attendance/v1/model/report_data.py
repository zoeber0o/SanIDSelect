# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .report_value import ReportValue


class ReportData(object):
    _types = {
        "user_id": str,
        "field_data": Dict[str, ReportValue],
    }

    def __init__(self, d=None):
        self.user_id: Optional[str] = None
        self.field_data: Optional[Dict[str, ReportValue]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ReportDataBuilder":
        return ReportDataBuilder()


class ReportDataBuilder(object):
    def __init__(self) -> None:
        self._report_data = ReportData()

    def user_id(self, user_id: str) -> "ReportDataBuilder":
        self._report_data.user_id = user_id
        return self

    def field_data(self, field_data: Dict[str, ReportValue]) -> "ReportDataBuilder":
        self._report_data.field_data = field_data
        return self

    def build(self) -> "ReportData":
        return self._report_data
