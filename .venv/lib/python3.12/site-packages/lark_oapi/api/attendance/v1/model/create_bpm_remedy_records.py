# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .remedy_record import RemedyRecord


class CreateBpmRemedyRecords(object):
    _types = {
        "user_id": str,
        "remedy_records": List[RemedyRecord],
        "remedy_reason": str,
        "custom_form_data": str,
    }

    def __init__(self, d=None):
        self.user_id: Optional[str] = None
        self.remedy_records: Optional[List[RemedyRecord]] = None
        self.remedy_reason: Optional[str] = None
        self.custom_form_data: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateBpmRemedyRecordsBuilder":
        return CreateBpmRemedyRecordsBuilder()


class CreateBpmRemedyRecordsBuilder(object):
    def __init__(self) -> None:
        self._create_bpm_remedy_records = CreateBpmRemedyRecords()

    def user_id(self, user_id: str) -> "CreateBpmRemedyRecordsBuilder":
        self._create_bpm_remedy_records.user_id = user_id
        return self

    def remedy_records(self, remedy_records: List[RemedyRecord]) -> "CreateBpmRemedyRecordsBuilder":
        self._create_bpm_remedy_records.remedy_records = remedy_records
        return self

    def remedy_reason(self, remedy_reason: str) -> "CreateBpmRemedyRecordsBuilder":
        self._create_bpm_remedy_records.remedy_reason = remedy_reason
        return self

    def custom_form_data(self, custom_form_data: str) -> "CreateBpmRemedyRecordsBuilder":
        self._create_bpm_remedy_records.custom_form_data = custom_form_data
        return self

    def build(self) -> "CreateBpmRemedyRecords":
        return self._create_bpm_remedy_records
