# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user_approval import UserApproval


class CreateUserApprovalResponseBody(object):
    _types = {
        "user_approval": UserApproval,
    }

    def __init__(self, d=None):
        self.user_approval: Optional[UserApproval] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateUserApprovalResponseBodyBuilder":
        return CreateUserApprovalResponseBodyBuilder()


class CreateUserApprovalResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_user_approval_response_body = CreateUserApprovalResponseBody()

    def user_approval(self, user_approval: UserApproval) -> "CreateUserApprovalResponseBodyBuilder":
        self._create_user_approval_response_body.user_approval = user_approval
        return self

    def build(self) -> "CreateUserApprovalResponseBody":
        return self._create_user_approval_response_body
