# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ArrangeShiftGroup(object):
    _types = {
        "shift_group_id": int,
        "group_id": int,
        "shift_group_name": str,
    }

    def __init__(self, d=None):
        self.shift_group_id: Optional[int] = None
        self.group_id: Optional[int] = None
        self.shift_group_name: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ArrangeShiftGroupBuilder":
        return ArrangeShiftGroupBuilder()


class ArrangeShiftGroupBuilder(object):
    def __init__(self) -> None:
        self._arrange_shift_group = ArrangeShiftGroup()

    def shift_group_id(self, shift_group_id: int) -> "ArrangeShiftGroupBuilder":
        self._arrange_shift_group.shift_group_id = shift_group_id
        return self

    def group_id(self, group_id: int) -> "ArrangeShiftGroupBuilder":
        self._arrange_shift_group.group_id = group_id
        return self

    def shift_group_name(self, shift_group_name: str) -> "ArrangeShiftGroupBuilder":
        self._arrange_shift_group.shift_group_name = shift_group_name
        return self

    def build(self) -> "ArrangeShiftGroup":
        return self._arrange_shift_group
