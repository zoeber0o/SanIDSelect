# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user_tmp_daily_shift import UserTmpDailyShift


class BatchCreateTempUserDailyShiftResponseBody(object):
    _types = {
        "user_tmp_daily_shifts": List[UserTmpDailyShift],
    }

    def __init__(self, d=None):
        self.user_tmp_daily_shifts: Optional[List[UserTmpDailyShift]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchCreateTempUserDailyShiftResponseBodyBuilder":
        return BatchCreateTempUserDailyShiftResponseBodyBuilder()


class BatchCreateTempUserDailyShiftResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_create_temp_user_daily_shift_response_body = BatchCreateTempUserDailyShiftResponseBody()

    def user_tmp_daily_shifts(self, user_tmp_daily_shifts: List[
        UserTmpDailyShift]) -> "BatchCreateTempUserDailyShiftResponseBodyBuilder":
        self._batch_create_temp_user_daily_shift_response_body.user_tmp_daily_shifts = user_tmp_daily_shifts
        return self

    def build(self) -> "BatchCreateTempUserDailyShiftResponseBody":
        return self._batch_create_temp_user_daily_shift_response_body
