# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user_approval import UserApproval


class QueryUserApprovalResponseBody(object):
    _types = {
        "user_approvals": List[UserApproval],
    }

    def __init__(self, d=None):
        self.user_approvals: Optional[List[UserApproval]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryUserApprovalResponseBodyBuilder":
        return QueryUserApprovalResponseBodyBuilder()


class QueryUserApprovalResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._query_user_approval_response_body = QueryUserApprovalResponseBody()

    def user_approvals(self, user_approvals: List[UserApproval]) -> "QueryUserApprovalResponseBodyBuilder":
        self._query_user_approval_response_body.user_approvals = user_approvals
        return self

    def build(self) -> "QueryUserApprovalResponseBody":
        return self._query_user_approval_response_body
