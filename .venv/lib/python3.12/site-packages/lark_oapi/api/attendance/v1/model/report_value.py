# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ReportValue(object):
    _types = {
        "value": str,
        "field_id": str,
    }

    def __init__(self, d=None):
        self.value: Optional[str] = None
        self.field_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ReportValueBuilder":
        return ReportValueBuilder()


class ReportValueBuilder(object):
    def __init__(self) -> None:
        self._report_value = ReportValue()

    def value(self, value: str) -> "ReportValueBuilder":
        self._report_value.value = value
        return self

    def field_id(self, field_id: str) -> "ReportValueBuilder":
        self._report_value.field_id = field_id
        return self

    def build(self) -> "ReportValue":
        return self._report_value
