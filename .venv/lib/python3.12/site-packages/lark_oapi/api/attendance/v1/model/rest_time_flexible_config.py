# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class RestTimeFlexibleConfig(object):
    _types = {
        "need_flexible": bool,
        "late_mins": int,
    }

    def __init__(self, d=None):
        self.need_flexible: Optional[bool] = None
        self.late_mins: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RestTimeFlexibleConfigBuilder":
        return RestTimeFlexibleConfigBuilder()


class RestTimeFlexibleConfigBuilder(object):
    def __init__(self) -> None:
        self._rest_time_flexible_config = RestTimeFlexibleConfig()

    def need_flexible(self, need_flexible: bool) -> "RestTimeFlexibleConfigBuilder":
        self._rest_time_flexible_config.need_flexible = need_flexible
        return self

    def late_mins(self, late_mins: int) -> "RestTimeFlexibleConfigBuilder":
        self._rest_time_flexible_config.late_mins = late_mins
        return self

    def build(self) -> "RestTimeFlexibleConfig":
        return self._rest_time_flexible_config
