# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .update_url_pin import UpdateUrlPin


class UpdateChatPin(object):
    _types = {
        "is_fixed": bool,
        "update_url_pin": UpdateUrlPin,
    }

    def __init__(self, d=None):
        self.is_fixed: Optional[bool] = None
        self.update_url_pin: Optional[UpdateUrlPin] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "UpdateChatPinBuilder":
        return UpdateChatPinBuilder()


class UpdateChatPinBuilder(object):
    def __init__(self) -> None:
        self._update_chat_pin = UpdateChatPin()

    def is_fixed(self, is_fixed: bool) -> "UpdateChatPinBuilder":
        self._update_chat_pin.is_fixed = is_fixed
        return self

    def update_url_pin(self, update_url_pin: UpdateUrlPin) -> "UpdateChatPinBuilder":
        self._update_chat_pin.update_url_pin = update_url_pin
        return self

    def build(self) -> "UpdateChatPin":
        return self._update_chat_pin
