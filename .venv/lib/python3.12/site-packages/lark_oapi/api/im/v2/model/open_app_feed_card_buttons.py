# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .open_app_feed_card_button import OpenAppFeedCardButton


class OpenAppFeedCardButtons(object):
    _types = {
        "buttons": List[OpenAppFeedCardButton],
    }

    def __init__(self, d=None):
        self.buttons: Optional[List[OpenAppFeedCardButton]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OpenAppFeedCardButtonsBuilder":
        return OpenAppFeedCardButtonsBuilder()


class OpenAppFeedCardButtonsBuilder(object):
    def __init__(self) -> None:
        self._open_app_feed_card_buttons = OpenAppFeedCardButtons()

    def buttons(self, buttons: List[OpenAppFeedCardButton]) -> "OpenAppFeedCardButtonsBuilder":
        self._open_app_feed_card_buttons.buttons = buttons
        return self

    def build(self) -> "OpenAppFeedCardButtons":
        return self._open_app_feed_card_buttons
