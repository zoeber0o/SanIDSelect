# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ChatPinIcon(object):
    _types = {
        "chat_pin_icon_type": str,
        "icon_key": str,
    }

    def __init__(self, d=None):
        self.chat_pin_icon_type: Optional[str] = None
        self.icon_key: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ChatPinIconBuilder":
        return ChatPinIconBuilder()


class ChatPinIconBuilder(object):
    def __init__(self) -> None:
        self._chat_pin_icon = ChatPinIcon()

    def chat_pin_icon_type(self, chat_pin_icon_type: str) -> "ChatPinIconBuilder":
        self._chat_pin_icon.chat_pin_icon_type = chat_pin_icon_type
        return self

    def icon_key(self, icon_key: str) -> "ChatPinIconBuilder":
        self._chat_pin_icon.icon_key = icon_key
        return self

    def build(self) -> "ChatPinIcon":
        return self._chat_pin_icon
