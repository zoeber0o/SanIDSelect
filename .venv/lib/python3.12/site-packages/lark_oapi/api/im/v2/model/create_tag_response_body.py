# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .create_tag_fail_reason import CreateTagFailReason


class CreateTagResponseBody(object):
    _types = {
        "id": str,
        "create_tag_fail_reason": CreateTagFailReason,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.create_tag_fail_reason: Optional[CreateTagFailReason] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateTagResponseBodyBuilder":
        return CreateTagResponseBodyBuilder()


class CreateTagResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_tag_response_body = CreateTagResponseBody()

    def id(self, id: str) -> "CreateTagResponseBodyBuilder":
        self._create_tag_response_body.id = id
        return self

    def create_tag_fail_reason(self, create_tag_fail_reason: CreateTagFailReason) -> "CreateTagResponseBodyBuilder":
        self._create_tag_response_body.create_tag_fail_reason = create_tag_fail_reason
        return self

    def build(self) -> "CreateTagResponseBody":
        return self._create_tag_response_body
