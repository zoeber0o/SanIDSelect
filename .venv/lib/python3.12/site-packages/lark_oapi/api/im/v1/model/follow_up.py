# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n_content import I18nContent


class FollowUp(object):
    _types = {
        "content": str,
        "i18n_contents": List[I18nContent],
    }

    def __init__(self, d=None):
        self.content: Optional[str] = None
        self.i18n_contents: Optional[List[I18nContent]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "FollowUpBuilder":
        return FollowUpBuilder()


class FollowUpBuilder(object):
    def __init__(self) -> None:
        self._follow_up = FollowUp()

    def content(self, content: str) -> "FollowUpBuilder":
        self._follow_up.content = content
        return self

    def i18n_contents(self, i18n_contents: List[I18nContent]) -> "FollowUpBuilder":
        self._follow_up.i18n_contents = i18n_contents
        return self

    def build(self) -> "FollowUp":
        return self._follow_up
