# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .search_user_data_ai import SearchUserDataAi


class SearchUserResultAi(object):
    _types = {
        "search_results": List[SearchUserDataAi],
    }

    def __init__(self, d=None):
        self.search_results: Optional[List[SearchUserDataAi]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SearchUserResultAiBuilder":
        return SearchUserResultAiBuilder()


class SearchUserResultAiBuilder(object):
    def __init__(self) -> None:
        self._search_user_result_ai = SearchUserResultAi()

    def search_results(self, search_results: List[SearchUserDataAi]) -> "SearchUserResultAiBuilder":
        self._search_user_result_ai.search_results = search_results
        return self

    def build(self) -> "SearchUserResultAi":
        return self._search_user_result_ai
