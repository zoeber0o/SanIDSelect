# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class CreateCalendarEventMeetingChatResponseBody(object):
    _types = {
        "meeting_chat_id": str,
        "applink": str,
    }

    def __init__(self, d=None):
        self.meeting_chat_id: Optional[str] = None
        self.applink: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateCalendarEventMeetingChatResponseBodyBuilder":
        return CreateCalendarEventMeetingChatResponseBodyBuilder()


class CreateCalendarEventMeetingChatResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_calendar_event_meeting_chat_response_body = CreateCalendarEventMeetingChatResponseBody()

    def meeting_chat_id(self, meeting_chat_id: str) -> "CreateCalendarEventMeetingChatResponseBodyBuilder":
        self._create_calendar_event_meeting_chat_response_body.meeting_chat_id = meeting_chat_id
        return self

    def applink(self, applink: str) -> "CreateCalendarEventMeetingChatResponseBodyBuilder":
        self._create_calendar_event_meeting_chat_response_body.applink = applink
        return self

    def build(self) -> "CreateCalendarEventMeetingChatResponseBody":
        return self._create_calendar_event_meeting_chat_response_body
