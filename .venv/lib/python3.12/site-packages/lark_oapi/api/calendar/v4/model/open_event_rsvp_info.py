# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user_id import UserId


class OpenEventRsvpInfo(object):
    _types = {
        "from_user_id": UserId,
        "rsvp_status": str,
    }

    def __init__(self, d=None):
        self.from_user_id: Optional[UserId] = None
        self.rsvp_status: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OpenEventRsvpInfoBuilder":
        return OpenEventRsvpInfoBuilder()


class OpenEventRsvpInfoBuilder(object):
    def __init__(self) -> None:
        self._open_event_rsvp_info = OpenEventRsvpInfo()

    def from_user_id(self, from_user_id: UserId) -> "OpenEventRsvpInfoBuilder":
        self._open_event_rsvp_info.from_user_id = from_user_id
        return self

    def rsvp_status(self, rsvp_status: str) -> "OpenEventRsvpInfoBuilder":
        self._open_event_rsvp_info.rsvp_status = rsvp_status
        return self

    def build(self) -> "OpenEventRsvpInfo":
        return self._open_event_rsvp_info
