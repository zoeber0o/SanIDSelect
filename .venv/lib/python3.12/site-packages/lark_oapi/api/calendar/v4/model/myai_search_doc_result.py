# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .myai_doc_detail import MyaiDocDetail


class MyaiSearchDocResult(object):
    _types = {
        "doc_items": List[MyaiDocDetail],
        "message": str,
    }

    def __init__(self, d=None):
        self.doc_items: Optional[List[MyaiDocDetail]] = None
        self.message: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MyaiSearchDocResultBuilder":
        return MyaiSearchDocResultBuilder()


class MyaiSearchDocResultBuilder(object):
    def __init__(self) -> None:
        self._myai_search_doc_result = MyaiSearchDocResult()

    def doc_items(self, doc_items: List[MyaiDocDetail]) -> "MyaiSearchDocResultBuilder":
        self._myai_search_doc_result.doc_items = doc_items
        return self

    def message(self, message: str) -> "MyaiSearchDocResultBuilder":
        self._myai_search_doc_result.message = message
        return self

    def build(self) -> "MyaiSearchDocResult":
        return self._myai_search_doc_result
