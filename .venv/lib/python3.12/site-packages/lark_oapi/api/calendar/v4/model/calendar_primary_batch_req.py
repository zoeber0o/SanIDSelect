# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class CalendarPrimaryBatchReq(object):
    _types = {
        "user_ids": List[str],
    }

    def __init__(self, d=None):
        self.user_ids: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CalendarPrimaryBatchReqBuilder":
        return CalendarPrimaryBatchReqBuilder()


class CalendarPrimaryBatchReqBuilder(object):
    def __init__(self) -> None:
        self._calendar_primary_batch_req = CalendarPrimaryBatchReq()

    def user_ids(self, user_ids: List[str]) -> "CalendarPrimaryBatchReqBuilder":
        self._calendar_primary_batch_req.user_ids = user_ids
        return self

    def build(self) -> "CalendarPrimaryBatchReq":
        return self._calendar_primary_batch_req
