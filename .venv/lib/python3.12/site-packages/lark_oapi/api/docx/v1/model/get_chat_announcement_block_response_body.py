# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .block import Block


class GetChatAnnouncementBlockResponseBody(object):
    _types = {
        "block": Block,
    }

    def __init__(self, d=None):
        self.block: Optional[Block] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetChatAnnouncementBlockResponseBodyBuilder":
        return GetChatAnnouncementBlockResponseBodyBuilder()


class GetChatAnnouncementBlockResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_chat_announcement_block_response_body = GetChatAnnouncementBlockResponseBody()

    def block(self, block: Block) -> "GetChatAnnouncementBlockResponseBodyBuilder":
        self._get_chat_announcement_block_response_body.block = block
        return self

    def build(self) -> "GetChatAnnouncementBlockResponseBody":
        return self._get_chat_announcement_block_response_body
