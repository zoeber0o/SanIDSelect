# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .convert_document_request_body import ConvertDocumentRequestBody


class ConvertDocumentRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.user_id_type: Optional[str] = None
        self.request_body: Optional[ConvertDocumentRequestBody] = None

    @staticmethod
    def builder() -> "ConvertDocumentRequestBuilder":
        return ConvertDocumentRequestBuilder()


class ConvertDocumentRequestBuilder(object):

    def __init__(self) -> None:
        convert_document_request = ConvertDocumentRequest()
        convert_document_request.http_method = HttpMethod.POST
        convert_document_request.uri = "/open-apis/docx/v1/documents/blocks/convert"
        convert_document_request.token_types = {AccessTokenType.TENANT, AccessTokenType.USER}
        self._convert_document_request: ConvertDocumentRequest = convert_document_request

    def user_id_type(self, user_id_type: str) -> "ConvertDocumentRequestBuilder":
        self._convert_document_request.user_id_type = user_id_type
        self._convert_document_request.add_query("user_id_type", user_id_type)
        return self

    def request_body(self, request_body: ConvertDocumentRequestBody) -> "ConvertDocumentRequestBuilder":
        self._convert_document_request.request_body = request_body
        self._convert_document_request.body = request_body
        return self

    def build(self) -> ConvertDocumentRequest:
        return self._convert_document_request
