# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .option import Option


class SelectSetting(object):
    _types = {
        "options": List[Option],
    }

    def __init__(self, d=None):
        self.options: Optional[List[Option]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SelectSettingBuilder":
        return SelectSettingBuilder()


class SelectSettingBuilder(object):
    def __init__(self) -> None:
        self._select_setting = SelectSetting()

    def options(self, options: List[Option]) -> "SelectSettingBuilder":
        self._select_setting.options = options
        return self

    def build(self) -> "SelectSetting":
        return self._select_setting
