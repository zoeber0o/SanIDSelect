# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .attachment import Attachment


class GetAttachmentResponseBody(object):
    _types = {
        "attachment": Attachment,
    }

    def __init__(self, d=None):
        self.attachment: Optional[Attachment] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetAttachmentResponseBodyBuilder":
        return GetAttachmentResponseBodyBuilder()


class GetAttachmentResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_attachment_response_body = GetAttachmentResponseBody()

    def attachment(self, attachment: Attachment) -> "GetAttachmentResponseBodyBuilder":
        self._get_attachment_response_body.attachment = attachment
        return self

    def build(self) -> "GetAttachmentResponseBody":
        return self._get_attachment_response_body
