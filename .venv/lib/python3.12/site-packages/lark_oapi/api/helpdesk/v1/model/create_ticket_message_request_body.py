# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class CreateTicketMessageRequestBody(object):
    _types = {
        "msg_type": str,
        "content": str,
    }

    def __init__(self, d=None):
        self.msg_type: Optional[str] = None
        self.content: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateTicketMessageRequestBodyBuilder":
        return CreateTicketMessageRequestBodyBuilder()


class CreateTicketMessageRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._create_ticket_message_request_body = CreateTicketMessageRequestBody()

    def msg_type(self, msg_type: str) -> "CreateTicketMessageRequestBodyBuilder":
        self._create_ticket_message_request_body.msg_type = msg_type
        return self

    def content(self, content: str) -> "CreateTicketMessageRequestBodyBuilder":
        self._create_ticket_message_request_body.content = content
        return self

    def build(self) -> "CreateTicketMessageRequestBody":
        return self._create_ticket_message_request_body
