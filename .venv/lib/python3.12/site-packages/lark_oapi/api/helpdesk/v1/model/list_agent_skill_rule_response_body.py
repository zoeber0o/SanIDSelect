# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .agent_skill_rule import AgentSkillRule


class ListAgentSkillRuleResponseBody(object):
    _types = {
        "rules": List[AgentSkillRule],
    }

    def __init__(self, d=None):
        self.rules: Optional[List[AgentSkillRule]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ListAgentSkillRuleResponseBodyBuilder":
        return ListAgentSkillRuleResponseBodyBuilder()


class ListAgentSkillRuleResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._list_agent_skill_rule_response_body = ListAgentSkillRuleResponseBody()

    def rules(self, rules: List[AgentSkillRule]) -> "ListAgentSkillRuleResponseBodyBuilder":
        self._list_agent_skill_rule_response_body.rules = rules
        return self

    def build(self) -> "ListAgentSkillRuleResponseBody":
        return self._list_agent_skill_rule_response_body
