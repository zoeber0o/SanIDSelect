# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ExecuteSendNotificationRequestBody(object):
    _types = {
        "send_at": str,
    }

    def __init__(self, d=None):
        self.send_at: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ExecuteSendNotificationRequestBodyBuilder":
        return ExecuteSendNotificationRequestBodyBuilder()


class ExecuteSendNotificationRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._execute_send_notification_request_body = ExecuteSendNotificationRequestBody()

    def send_at(self, send_at: str) -> "ExecuteSendNotificationRequestBodyBuilder":
        self._execute_send_notification_request_body.send_at = send_at
        return self

    def build(self) -> "ExecuteSendNotificationRequestBody":
        return self._execute_send_notification_request_body
