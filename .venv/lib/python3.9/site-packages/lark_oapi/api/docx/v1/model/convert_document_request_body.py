# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ConvertDocumentRequestBody(object):
    _types = {
        "content_type": str,
        "content": str,
    }

    def __init__(self, d=None):
        self.content_type: Optional[str] = None
        self.content: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ConvertDocumentRequestBodyBuilder":
        return ConvertDocumentRequestBodyBuilder()


class ConvertDocumentRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._convert_document_request_body = ConvertDocumentRequestBody()

    def content_type(self, content_type: str) -> "ConvertDocumentRequestBodyBuilder":
        self._convert_document_request_body.content_type = content_type
        return self

    def content(self, content: str) -> "ConvertDocumentRequestBodyBuilder":
        self._convert_document_request_body.content = content
        return self

    def build(self) -> "ConvertDocumentRequestBody":
        return self._convert_document_request_body
