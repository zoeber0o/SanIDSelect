# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OkrVisibleSetting(object):
    _types = {
        "progress_fill_area_visible": bool,
        "progress_status_visible": bool,
        "score_visible": bool,
    }

    def __init__(self, d=None):
        self.progress_fill_area_visible: Optional[bool] = None
        self.progress_status_visible: Optional[bool] = None
        self.score_visible: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OkrVisibleSettingBuilder":
        return OkrVisibleSettingBuilder()


class OkrVisibleSettingBuilder(object):
    def __init__(self) -> None:
        self._okr_visible_setting = OkrVisibleSetting()

    def progress_fill_area_visible(self, progress_fill_area_visible: bool) -> "OkrVisibleSettingBuilder":
        self._okr_visible_setting.progress_fill_area_visible = progress_fill_area_visible
        return self

    def progress_status_visible(self, progress_status_visible: bool) -> "OkrVisibleSettingBuilder":
        self._okr_visible_setting.progress_status_visible = progress_status_visible
        return self

    def score_visible(self, score_visible: bool) -> "OkrVisibleSettingBuilder":
        self._okr_visible_setting.score_visible = score_visible
        return self

    def build(self) -> "OkrVisibleSetting":
        return self._okr_visible_setting
