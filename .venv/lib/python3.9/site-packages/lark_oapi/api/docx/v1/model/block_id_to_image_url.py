# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class BlockIdToImageUrl(object):
    _types = {
        "block_id": str,
        "image_url": str,
    }

    def __init__(self, d=None):
        self.block_id: Optional[str] = None
        self.image_url: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BlockIdToImageUrlBuilder":
        return BlockIdToImageUrlBuilder()


class BlockIdToImageUrlBuilder(object):
    def __init__(self) -> None:
        self._block_id_to_image_url = BlockIdToImageUrl()

    def block_id(self, block_id: str) -> "BlockIdToImageUrlBuilder":
        self._block_id_to_image_url.block_id = block_id
        return self

    def image_url(self, image_url: str) -> "BlockIdToImageUrlBuilder":
        self._block_id_to_image_url.image_url = image_url
        return self

    def build(self) -> "BlockIdToImageUrl":
        return self._block_id_to_image_url
