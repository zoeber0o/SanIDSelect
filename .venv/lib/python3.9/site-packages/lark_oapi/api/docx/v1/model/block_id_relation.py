# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class BlockIdRelation(object):
    _types = {
        "temporary_block_id": str,
        "block_id": str,
    }

    def __init__(self, d=None):
        self.temporary_block_id: Optional[str] = None
        self.block_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BlockIdRelationBuilder":
        return BlockIdRelationBuilder()


class BlockIdRelationBuilder(object):
    def __init__(self) -> None:
        self._block_id_relation = BlockIdRelation()

    def temporary_block_id(self, temporary_block_id: str) -> "BlockIdRelationBuilder":
        self._block_id_relation.temporary_block_id = temporary_block_id
        return self

    def block_id(self, block_id: str) -> "BlockIdRelationBuilder":
        self._block_id_relation.block_id = block_id
        return self

    def build(self) -> "BlockIdRelation":
        return self._block_id_relation
