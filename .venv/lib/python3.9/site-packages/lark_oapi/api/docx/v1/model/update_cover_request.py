# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .document_cover import DocumentCover


class UpdateCoverRequest(object):
    _types = {
        "cover": DocumentCover,
    }

    def __init__(self, d=None):
        self.cover: Optional[DocumentCover] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "UpdateCoverRequestBuilder":
        return UpdateCoverRequestBuilder()


class UpdateCoverRequestBuilder(object):
    def __init__(self) -> None:
        self._update_cover_request = UpdateCoverRequest()

    def cover(self, cover: DocumentCover) -> "UpdateCoverRequestBuilder":
        self._update_cover_request.cover = cover
        return self

    def build(self) -> "UpdateCoverRequest":
        return self._update_cover_request
