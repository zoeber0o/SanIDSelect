# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class AilySender(object):
    _types = {
        "entity_id": str,
        "identity_provider": str,
        "sender_type": str,
        "aily_id": str,
    }

    def __init__(self, d=None):
        self.entity_id: Optional[str] = None
        self.identity_provider: Optional[str] = None
        self.sender_type: Optional[str] = None
        self.aily_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "AilySenderBuilder":
        return AilySenderBuilder()


class AilySenderBuilder(object):
    def __init__(self) -> None:
        self._aily_sender = AilySender()

    def entity_id(self, entity_id: str) -> "AilySenderBuilder":
        self._aily_sender.entity_id = entity_id
        return self

    def identity_provider(self, identity_provider: str) -> "AilySenderBuilder":
        self._aily_sender.identity_provider = identity_provider
        return self

    def sender_type(self, sender_type: str) -> "AilySenderBuilder":
        self._aily_sender.sender_type = sender_type
        return self

    def aily_id(self, aily_id: str) -> "AilySenderBuilder":
        self._aily_sender.aily_id = aily_id
        return self

    def build(self) -> "AilySender":
        return self._aily_sender
