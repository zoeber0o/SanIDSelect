# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class DataAssetTag(object):
    _types = {
        "data_asset_tag_id": str,
        "name": str,
    }

    def __init__(self, d=None):
        self.data_asset_tag_id: Optional[str] = None
        self.name: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DataAssetTagBuilder":
        return DataAssetTagBuilder()


class DataAssetTagBuilder(object):
    def __init__(self) -> None:
        self._data_asset_tag = DataAssetTag()

    def data_asset_tag_id(self, data_asset_tag_id: str) -> "DataAssetTagBuilder":
        self._data_asset_tag.data_asset_tag_id = data_asset_tag_id
        return self

    def name(self, name: str) -> "DataAssetTagBuilder":
        self._data_asset_tag.name = name
        return self

    def build(self) -> "DataAssetTag":
        return self._data_asset_tag
