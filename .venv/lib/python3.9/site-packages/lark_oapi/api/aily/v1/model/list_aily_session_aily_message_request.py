# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class ListAilySessionAilyMessageRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.page_size: Optional[int] = None
        self.page_token: Optional[str] = None
        self.run_id: Optional[str] = None
        self.with_partial_message: Optional[bool] = None
        self.aily_session_id: Optional[str] = None

    @staticmethod
    def builder() -> "ListAilySessionAilyMessageRequestBuilder":
        return ListAilySessionAilyMessageRequestBuilder()


class ListAilySessionAilyMessageRequestBuilder(object):

    def __init__(self) -> None:
        list_aily_session_aily_message_request = ListAilySessionAilyMessageRequest()
        list_aily_session_aily_message_request.http_method = HttpMethod.GET
        list_aily_session_aily_message_request.uri = "/open-apis/aily/v1/sessions/:aily_session_id/messages"
        list_aily_session_aily_message_request.token_types = {AccessTokenType.USER, AccessTokenType.TENANT}
        self._list_aily_session_aily_message_request: ListAilySessionAilyMessageRequest = list_aily_session_aily_message_request

    def page_size(self, page_size: int) -> "ListAilySessionAilyMessageRequestBuilder":
        self._list_aily_session_aily_message_request.page_size = page_size
        self._list_aily_session_aily_message_request.add_query("page_size", page_size)
        return self

    def page_token(self, page_token: str) -> "ListAilySessionAilyMessageRequestBuilder":
        self._list_aily_session_aily_message_request.page_token = page_token
        self._list_aily_session_aily_message_request.add_query("page_token", page_token)
        return self

    def run_id(self, run_id: str) -> "ListAilySessionAilyMessageRequestBuilder":
        self._list_aily_session_aily_message_request.run_id = run_id
        self._list_aily_session_aily_message_request.add_query("run_id", run_id)
        return self

    def with_partial_message(self, with_partial_message: bool) -> "ListAilySessionAilyMessageRequestBuilder":
        self._list_aily_session_aily_message_request.with_partial_message = with_partial_message
        self._list_aily_session_aily_message_request.add_query("with_partial_message", with_partial_message)
        return self

    def aily_session_id(self, aily_session_id: str) -> "ListAilySessionAilyMessageRequestBuilder":
        self._list_aily_session_aily_message_request.aily_session_id = aily_session_id
        self._list_aily_session_aily_message_request.paths["aily_session_id"] = str(aily_session_id)
        return self

    def build(self) -> ListAilySessionAilyMessageRequest:
        return self._list_aily_session_aily_message_request
