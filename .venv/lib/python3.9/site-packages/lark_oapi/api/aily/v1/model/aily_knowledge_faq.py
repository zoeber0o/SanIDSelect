# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class AilyKnowledgeFaq(object):
    _types = {
        "question": str,
        "answer": str,
    }

    def __init__(self, d=None):
        self.question: Optional[str] = None
        self.answer: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "AilyKnowledgeFaqBuilder":
        return AilyKnowledgeFaqBuilder()


class AilyKnowledgeFaqBuilder(object):
    def __init__(self) -> None:
        self._aily_knowledge_faq = AilyKnowledgeFaq()

    def question(self, question: str) -> "AilyKnowledgeFaqBuilder":
        self._aily_knowledge_faq.question = question
        return self

    def answer(self, answer: str) -> "AilyKnowledgeFaqBuilder":
        self._aily_knowledge_faq.answer = answer
        return self

    def build(self) -> "AilyKnowledgeFaq":
        return self._aily_knowledge_faq
