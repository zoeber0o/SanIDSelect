# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class RecordError(object):
    _types = {
        "code": str,
        "message": str,
    }

    def __init__(self, d=None):
        self.code: Optional[str] = None
        self.message: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RecordErrorBuilder":
        return RecordErrorBuilder()


class RecordErrorBuilder(object):
    def __init__(self) -> None:
        self._record_error = RecordError()

    def code(self, code: str) -> "RecordErrorBuilder":
        self._record_error.code = code
        return self

    def message(self, message: str) -> "RecordErrorBuilder":
        self._record_error.message = message
        return self

    def build(self) -> "RecordError":
        return self._record_error
