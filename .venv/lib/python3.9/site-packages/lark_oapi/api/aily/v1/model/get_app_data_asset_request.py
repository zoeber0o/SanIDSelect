# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class GetAppDataAssetRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.with_data_asset_item: Optional[bool] = None
        self.with_connect_status: Optional[bool] = None
        self.tenant_type: Optional[str] = None
        self.app_id: Optional[str] = None
        self.data_asset_id: Optional[str] = None

    @staticmethod
    def builder() -> "GetAppDataAssetRequestBuilder":
        return GetAppDataAssetRequestBuilder()


class GetAppDataAssetRequestBuilder(object):

    def __init__(self) -> None:
        get_app_data_asset_request = GetAppDataAssetRequest()
        get_app_data_asset_request.http_method = HttpMethod.GET
        get_app_data_asset_request.uri = "/open-apis/aily/v1/apps/:app_id/data_assets/:data_asset_id"
        get_app_data_asset_request.token_types = {AccessTokenType.USER, AccessTokenType.TENANT}
        self._get_app_data_asset_request: GetAppDataAssetRequest = get_app_data_asset_request

    def with_data_asset_item(self, with_data_asset_item: bool) -> "GetAppDataAssetRequestBuilder":
        self._get_app_data_asset_request.with_data_asset_item = with_data_asset_item
        self._get_app_data_asset_request.add_query("with_data_asset_item", with_data_asset_item)
        return self

    def with_connect_status(self, with_connect_status: bool) -> "GetAppDataAssetRequestBuilder":
        self._get_app_data_asset_request.with_connect_status = with_connect_status
        self._get_app_data_asset_request.add_query("with_connect_status", with_connect_status)
        return self

    def tenant_type(self, tenant_type: str) -> "GetAppDataAssetRequestBuilder":
        self._get_app_data_asset_request.tenant_type = tenant_type
        self._get_app_data_asset_request.add_query("tenant_type", tenant_type)
        return self

    def app_id(self, app_id: str) -> "GetAppDataAssetRequestBuilder":
        self._get_app_data_asset_request.app_id = app_id
        self._get_app_data_asset_request.paths["app_id"] = str(app_id)
        return self

    def data_asset_id(self, data_asset_id: str) -> "GetAppDataAssetRequestBuilder":
        self._get_app_data_asset_request.data_asset_id = data_asset_id
        self._get_app_data_asset_request.paths["data_asset_id"] = str(data_asset_id)
        return self

    def build(self) -> GetAppDataAssetRequest:
        return self._get_app_data_asset_request
