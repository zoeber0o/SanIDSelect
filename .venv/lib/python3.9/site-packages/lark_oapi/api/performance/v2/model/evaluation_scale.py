# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user_evaluation_scale import UserEvaluationScale


class EvaluationScale(object):
    _types = {
        "user_id": str,
        "user_evaluation_scales": List[UserEvaluationScale],
    }

    def __init__(self, d=None):
        self.user_id: Optional[str] = None
        self.user_evaluation_scales: Optional[List[UserEvaluationScale]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "EvaluationScaleBuilder":
        return EvaluationScaleBuilder()


class EvaluationScaleBuilder(object):
    def __init__(self) -> None:
        self._evaluation_scale = EvaluationScale()

    def user_id(self, user_id: str) -> "EvaluationScaleBuilder":
        self._evaluation_scale.user_id = user_id
        return self

    def user_evaluation_scales(self, user_evaluation_scales: List[UserEvaluationScale]) -> "EvaluationScaleBuilder":
        self._evaluation_scale.user_evaluation_scales = user_evaluation_scales
        return self

    def build(self) -> "EvaluationScale":
        return self._evaluation_scale
