# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .query_activity_request_body import QueryActivityRequestBody


class QueryActivityRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.user_id_type: Optional[str] = None
        self.request_body: Optional[QueryActivityRequestBody] = None

    @staticmethod
    def builder() -> "QueryActivityRequestBuilder":
        return QueryActivityRequestBuilder()


class QueryActivityRequestBuilder(object):

    def __init__(self) -> None:
        query_activity_request = QueryActivityRequest()
        query_activity_request.http_method = HttpMethod.POST
        query_activity_request.uri = "/open-apis/performance/v2/activity/query"
        query_activity_request.token_types = {AccessTokenType.TENANT}
        self._query_activity_request: QueryActivityRequest = query_activity_request

    def user_id_type(self, user_id_type: str) -> "QueryActivityRequestBuilder":
        self._query_activity_request.user_id_type = user_id_type
        self._query_activity_request.add_query("user_id_type", user_id_type)
        return self

    def request_body(self, request_body: QueryActivityRequestBody) -> "QueryActivityRequestBuilder":
        self._query_activity_request.request_body = request_body
        self._query_activity_request.body = request_body
        return self

    def build(self) -> QueryActivityRequest:
        return self._query_activity_request
