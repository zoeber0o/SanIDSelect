# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .invitation_reviewer import InvitationReviewer


class Invitation(object):
    _types = {
        "reviewee_user_id": str,
        "reviewers": List[InvitationReviewer],
    }

    def __init__(self, d=None):
        self.reviewee_user_id: Optional[str] = None
        self.reviewers: Optional[List[InvitationReviewer]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "InvitationBuilder":
        return InvitationBuilder()


class InvitationBuilder(object):
    def __init__(self) -> None:
        self._invitation = Invitation()

    def reviewee_user_id(self, reviewee_user_id: str) -> "InvitationBuilder":
        self._invitation.reviewee_user_id = reviewee_user_id
        return self

    def reviewers(self, reviewers: List[InvitationReviewer]) -> "InvitationBuilder":
        self._invitation.reviewers = reviewers
        return self

    def build(self) -> "Invitation":
        return self._invitation
