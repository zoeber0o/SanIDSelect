# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .additional_information import AdditionalInformation


class ImportAdditionalInformationRequestBody(object):
    _types = {
        "semester_id": str,
        "additional_informations": List[AdditionalInformation],
        "import_record_name": str,
    }

    def __init__(self, d=None):
        self.semester_id: Optional[str] = None
        self.additional_informations: Optional[List[AdditionalInformation]] = None
        self.import_record_name: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ImportAdditionalInformationRequestBodyBuilder":
        return ImportAdditionalInformationRequestBodyBuilder()


class ImportAdditionalInformationRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._import_additional_information_request_body = ImportAdditionalInformationRequestBody()

    def semester_id(self, semester_id: str) -> "ImportAdditionalInformationRequestBodyBuilder":
        self._import_additional_information_request_body.semester_id = semester_id
        return self

    def additional_informations(self, additional_informations: List[
        AdditionalInformation]) -> "ImportAdditionalInformationRequestBodyBuilder":
        self._import_additional_information_request_body.additional_informations = additional_informations
        return self

    def import_record_name(self, import_record_name: str) -> "ImportAdditionalInformationRequestBodyBuilder":
        self._import_additional_information_request_body.import_record_name = import_record_name
        return self

    def build(self) -> "ImportAdditionalInformationRequestBody":
        return self._import_additional_information_request_body
