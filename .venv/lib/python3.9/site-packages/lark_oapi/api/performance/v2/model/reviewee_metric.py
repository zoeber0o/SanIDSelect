# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user import User
from .metric_detail import MetricDetail
from .reviewee_stage_status import RevieweeStageStatus


class RevieweeMetric(object):
    _types = {
        "reviewee_user_id": User,
        "metric_template_id": int,
        "metric_details": MetricDetail,
        "reviewee_stage_statuses": List[RevieweeStageStatus],
    }

    def __init__(self, d=None):
        self.reviewee_user_id: Optional[User] = None
        self.metric_template_id: Optional[int] = None
        self.metric_details: Optional[MetricDetail] = None
        self.reviewee_stage_statuses: Optional[List[RevieweeStageStatus]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RevieweeMetricBuilder":
        return RevieweeMetricBuilder()


class RevieweeMetricBuilder(object):
    def __init__(self) -> None:
        self._reviewee_metric = RevieweeMetric()

    def reviewee_user_id(self, reviewee_user_id: User) -> "RevieweeMetricBuilder":
        self._reviewee_metric.reviewee_user_id = reviewee_user_id
        return self

    def metric_template_id(self, metric_template_id: int) -> "RevieweeMetricBuilder":
        self._reviewee_metric.metric_template_id = metric_template_id
        return self

    def metric_details(self, metric_details: MetricDetail) -> "RevieweeMetricBuilder":
        self._reviewee_metric.metric_details = metric_details
        return self

    def reviewee_stage_statuses(self, reviewee_stage_statuses: List[RevieweeStageStatus]) -> "RevieweeMetricBuilder":
        self._reviewee_metric.reviewee_stage_statuses = reviewee_stage_statuses
        return self

    def build(self) -> "RevieweeMetric":
        return self._reviewee_metric
