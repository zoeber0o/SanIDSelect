# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class RevieweeStageStatus(object):
    _types = {
        "stage_id": str,
        "stage_type": str,
        "stage_status": int,
    }

    def __init__(self, d=None):
        self.stage_id: Optional[str] = None
        self.stage_type: Optional[str] = None
        self.stage_status: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RevieweeStageStatusBuilder":
        return RevieweeStageStatusBuilder()


class RevieweeStageStatusBuilder(object):
    def __init__(self) -> None:
        self._reviewee_stage_status = RevieweeStageStatus()

    def stage_id(self, stage_id: str) -> "RevieweeStageStatusBuilder":
        self._reviewee_stage_status.stage_id = stage_id
        return self

    def stage_type(self, stage_type: str) -> "RevieweeStageStatusBuilder":
        self._reviewee_stage_status.stage_type = stage_type
        return self

    def stage_status(self, stage_status: int) -> "RevieweeStageStatusBuilder":
        self._reviewee_stage_status.stage_status = stage_status
        return self

    def build(self) -> "RevieweeStageStatus":
        return self._reviewee_stage_status
