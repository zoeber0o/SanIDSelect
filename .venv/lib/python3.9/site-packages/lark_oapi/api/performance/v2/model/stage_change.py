# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class StageChange(object):
    _types = {
        "stage_id": str,
        "stage_type": str,
        "review_stage_role": str,
    }

    def __init__(self, d=None):
        self.stage_id: Optional[str] = None
        self.stage_type: Optional[str] = None
        self.review_stage_role: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "StageChangeBuilder":
        return StageChangeBuilder()


class StageChangeBuilder(object):
    def __init__(self) -> None:
        self._stage_change = StageChange()

    def stage_id(self, stage_id: str) -> "StageChangeBuilder":
        self._stage_change.stage_id = stage_id
        return self

    def stage_type(self, stage_type: str) -> "StageChangeBuilder":
        self._stage_change.stage_type = stage_type
        return self

    def review_stage_role(self, review_stage_role: str) -> "StageChangeBuilder":
        self._stage_change.review_stage_role = review_stage_role
        return self

    def build(self) -> "StageChange":
        return self._stage_change
