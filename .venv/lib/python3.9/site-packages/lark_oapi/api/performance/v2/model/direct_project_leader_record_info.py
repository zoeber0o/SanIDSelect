# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user import User
from .cooperation_project import CooperationProject
from .cooperation_project import CooperationProject
from .cooperation_project import CooperationProject


class DirectProjectLeaderRecordInfo(object):
    _types = {
        "reviewer_id": User,
        "cooperation_projects": List[CooperationProject],
        "review_depend_projects": List[CooperationProject],
        "participated_projects": List[CooperationProject],
    }

    def __init__(self, d=None):
        self.reviewer_id: Optional[User] = None
        self.cooperation_projects: Optional[List[CooperationProject]] = None
        self.review_depend_projects: Optional[List[CooperationProject]] = None
        self.participated_projects: Optional[List[CooperationProject]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DirectProjectLeaderRecordInfoBuilder":
        return DirectProjectLeaderRecordInfoBuilder()


class DirectProjectLeaderRecordInfoBuilder(object):
    def __init__(self) -> None:
        self._direct_project_leader_record_info = DirectProjectLeaderRecordInfo()

    def reviewer_id(self, reviewer_id: User) -> "DirectProjectLeaderRecordInfoBuilder":
        self._direct_project_leader_record_info.reviewer_id = reviewer_id
        return self

    def cooperation_projects(self,
                             cooperation_projects: List[CooperationProject]) -> "DirectProjectLeaderRecordInfoBuilder":
        self._direct_project_leader_record_info.cooperation_projects = cooperation_projects
        return self

    def review_depend_projects(self, review_depend_projects: List[
        CooperationProject]) -> "DirectProjectLeaderRecordInfoBuilder":
        self._direct_project_leader_record_info.review_depend_projects = review_depend_projects
        return self

    def participated_projects(self, participated_projects: List[
        CooperationProject]) -> "DirectProjectLeaderRecordInfoBuilder":
        self._direct_project_leader_record_info.participated_projects = participated_projects
        return self

    def build(self) -> "DirectProjectLeaderRecordInfo":
        return self._direct_project_leader_record_info
