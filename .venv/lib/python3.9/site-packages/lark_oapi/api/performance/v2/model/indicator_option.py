# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n import I18n


class IndicatorOption(object):
    _types = {
        "id": str,
        "name": I18n,
        "lable": str,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.name: Optional[I18n] = None
        self.lable: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "IndicatorOptionBuilder":
        return IndicatorOptionBuilder()


class IndicatorOptionBuilder(object):
    def __init__(self) -> None:
        self._indicator_option = IndicatorOption()

    def id(self, id: str) -> "IndicatorOptionBuilder":
        self._indicator_option.id = id
        return self

    def name(self, name: I18n) -> "IndicatorOptionBuilder":
        self._indicator_option.name = name
        return self

    def lable(self, lable: str) -> "IndicatorOptionBuilder":
        self._indicator_option.lable = lable
        return self

    def build(self) -> "IndicatorOption":
        return self._indicator_option
