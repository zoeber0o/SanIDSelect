# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class WriteUserGroupScopeFailUserData(object):
    _types = {
        "user_id": str,
        "fail_code": int,
    }

    def __init__(self, d=None):
        self.user_id: Optional[str] = None
        self.fail_code: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "WriteUserGroupScopeFailUserDataBuilder":
        return WriteUserGroupScopeFailUserDataBuilder()


class WriteUserGroupScopeFailUserDataBuilder(object):
    def __init__(self) -> None:
        self._write_user_group_scope_fail_user_data = WriteUserGroupScopeFailUserData()

    def user_id(self, user_id: str) -> "WriteUserGroupScopeFailUserDataBuilder":
        self._write_user_group_scope_fail_user_data.user_id = user_id
        return self

    def fail_code(self, fail_code: int) -> "WriteUserGroupScopeFailUserDataBuilder":
        self._write_user_group_scope_fail_user_data.fail_code = fail_code
        return self

    def build(self) -> "WriteUserGroupScopeFailUserData":
        return self._write_user_group_scope_fail_user_data
