# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class QueryReviewDataRequestBody(object):
    _types = {
        "semester_ids": List[int],
        "reviewee_user_ids": List[str],
        "stage_types": List[str],
        "review_stage_roles": List[str],
        "stage_ids": List[int],
        "need_leader_review_data_source": bool,
        "updated_later_than": int,
        "stage_progresses": List[int],
    }

    def __init__(self, d=None):
        self.semester_ids: Optional[List[int]] = None
        self.reviewee_user_ids: Optional[List[str]] = None
        self.stage_types: Optional[List[str]] = None
        self.review_stage_roles: Optional[List[str]] = None
        self.stage_ids: Optional[List[int]] = None
        self.need_leader_review_data_source: Optional[bool] = None
        self.updated_later_than: Optional[int] = None
        self.stage_progresses: Optional[List[int]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryReviewDataRequestBodyBuilder":
        return QueryReviewDataRequestBodyBuilder()


class QueryReviewDataRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._query_review_data_request_body = QueryReviewDataRequestBody()

    def semester_ids(self, semester_ids: List[int]) -> "QueryReviewDataRequestBodyBuilder":
        self._query_review_data_request_body.semester_ids = semester_ids
        return self

    def reviewee_user_ids(self, reviewee_user_ids: List[str]) -> "QueryReviewDataRequestBodyBuilder":
        self._query_review_data_request_body.reviewee_user_ids = reviewee_user_ids
        return self

    def stage_types(self, stage_types: List[str]) -> "QueryReviewDataRequestBodyBuilder":
        self._query_review_data_request_body.stage_types = stage_types
        return self

    def review_stage_roles(self, review_stage_roles: List[str]) -> "QueryReviewDataRequestBodyBuilder":
        self._query_review_data_request_body.review_stage_roles = review_stage_roles
        return self

    def stage_ids(self, stage_ids: List[int]) -> "QueryReviewDataRequestBodyBuilder":
        self._query_review_data_request_body.stage_ids = stage_ids
        return self

    def need_leader_review_data_source(self,
                                       need_leader_review_data_source: bool) -> "QueryReviewDataRequestBodyBuilder":
        self._query_review_data_request_body.need_leader_review_data_source = need_leader_review_data_source
        return self

    def updated_later_than(self, updated_later_than: int) -> "QueryReviewDataRequestBodyBuilder":
        self._query_review_data_request_body.updated_later_than = updated_later_than
        return self

    def stage_progresses(self, stage_progresses: List[int]) -> "QueryReviewDataRequestBodyBuilder":
        self._query_review_data_request_body.stage_progresses = stage_progresses
        return self

    def build(self) -> "QueryReviewDataRequestBody":
        return self._query_review_data_request_body
