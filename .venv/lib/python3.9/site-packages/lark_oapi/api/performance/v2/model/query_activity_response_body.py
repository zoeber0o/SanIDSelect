# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .activity import Activity


class QueryActivityResponseBody(object):
    _types = {
        "activities": List[Activity],
    }

    def __init__(self, d=None):
        self.activities: Optional[List[Activity]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryActivityResponseBodyBuilder":
        return QueryActivityResponseBodyBuilder()


class QueryActivityResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._query_activity_response_body = QueryActivityResponseBody()

    def activities(self, activities: List[Activity]) -> "QueryActivityResponseBodyBuilder":
        self._query_activity_response_body.activities = activities
        return self

    def build(self) -> "QueryActivityResponseBody":
        return self._query_activity_response_body
