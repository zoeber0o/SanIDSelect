# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user import User


class Reviewee(object):
    _types = {
        "reviewee_user_id": User,
        "activity_ids": List[str],
        "reviewprofile_url": str,
    }

    def __init__(self, d=None):
        self.reviewee_user_id: Optional[User] = None
        self.activity_ids: Optional[List[str]] = None
        self.reviewprofile_url: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RevieweeBuilder":
        return RevieweeBuilder()


class RevieweeBuilder(object):
    def __init__(self) -> None:
        self._reviewee = Reviewee()

    def reviewee_user_id(self, reviewee_user_id: User) -> "RevieweeBuilder":
        self._reviewee.reviewee_user_id = reviewee_user_id
        return self

    def activity_ids(self, activity_ids: List[str]) -> "RevieweeBuilder":
        self._reviewee.activity_ids = activity_ids
        return self

    def reviewprofile_url(self, reviewprofile_url: str) -> "RevieweeBuilder":
        self._reviewee.reviewprofile_url = reviewprofile_url
        return self

    def build(self) -> "Reviewee":
        return self._reviewee
