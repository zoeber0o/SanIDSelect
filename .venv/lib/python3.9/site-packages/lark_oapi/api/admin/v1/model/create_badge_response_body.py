# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .badge import Badge


class CreateBadgeResponseBody(object):
    _types = {
        "badge": Badge,
    }

    def __init__(self, d=None):
        self.badge: Optional[Badge] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateBadgeResponseBodyBuilder":
        return CreateBadgeResponseBodyBuilder()


class CreateBadgeResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_badge_response_body = CreateBadgeResponseBody()

    def badge(self, badge: Badge) -> "CreateBadgeResponseBodyBuilder":
        self._create_badge_response_body.badge = badge
        return self

    def build(self) -> "CreateBadgeResponseBody":
        return self._create_badge_response_body
