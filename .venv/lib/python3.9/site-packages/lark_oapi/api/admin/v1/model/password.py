# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class Password(object):
    _types = {
        "ent_email_password": str,
    }

    def __init__(self, d=None):
        self.ent_email_password: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PasswordBuilder":
        return PasswordBuilder()


class PasswordBuilder(object):
    def __init__(self) -> None:
        self._password = Password()

    def ent_email_password(self, ent_email_password: str) -> "PasswordBuilder":
        self._password.ent_email_password = ent_email_password
        return self

    def build(self) -> "Password":
        return self._password
