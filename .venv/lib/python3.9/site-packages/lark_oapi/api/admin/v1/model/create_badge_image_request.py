# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .create_badge_image_request_body import CreateBadgeImageRequestBody


class CreateBadgeImageRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.request_body: Optional[CreateBadgeImageRequestBody] = None

    @staticmethod
    def builder() -> "CreateBadgeImageRequestBuilder":
        return CreateBadgeImageRequestBuilder()


class CreateBadgeImageRequestBuilder(object):

    def __init__(self) -> None:
        create_badge_image_request = CreateBadgeImageRequest()
        create_badge_image_request.http_method = HttpMethod.POST
        create_badge_image_request.uri = "/open-apis/admin/v1/badge_images"
        create_badge_image_request.token_types = {AccessTokenType.TENANT}
        self._create_badge_image_request: CreateBadgeImageRequest = create_badge_image_request

    def request_body(self, request_body: CreateBadgeImageRequestBody) -> "CreateBadgeImageRequestBuilder":
        self._create_badge_image_request.request_body = request_body
        self._create_badge_image_request.body = request_body
        return self

    def build(self) -> CreateBadgeImageRequest:
        return self._create_badge_image_request
