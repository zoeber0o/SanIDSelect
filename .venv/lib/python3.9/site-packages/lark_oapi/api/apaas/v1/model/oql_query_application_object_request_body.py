# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OqlQueryApplicationObjectRequestBody(object):
    _types = {
        "query": str,
        "args": str,
        "named_args": str,
    }

    def __init__(self, d=None):
        self.query: Optional[str] = None
        self.args: Optional[str] = None
        self.named_args: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OqlQueryApplicationObjectRequestBodyBuilder":
        return OqlQueryApplicationObjectRequestBodyBuilder()


class OqlQueryApplicationObjectRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._oql_query_application_object_request_body = OqlQueryApplicationObjectRequestBody()

    def query(self, query: str) -> "OqlQueryApplicationObjectRequestBodyBuilder":
        self._oql_query_application_object_request_body.query = query
        return self

    def args(self, args: str) -> "OqlQueryApplicationObjectRequestBodyBuilder":
        self._oql_query_application_object_request_body.args = args
        return self

    def named_args(self, named_args: str) -> "OqlQueryApplicationObjectRequestBodyBuilder":
        self._oql_query_application_object_request_body.named_args = named_args
        return self

    def build(self) -> "OqlQueryApplicationObjectRequestBody":
        return self._oql_query_application_object_request_body
