# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class RecordGroupByItem(object):
    _types = {
        "field": str,
    }

    def __init__(self, d=None):
        self.field: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RecordGroupByItemBuilder":
        return RecordGroupByItemBuilder()


class RecordGroupByItemBuilder(object):
    def __init__(self) -> None:
        self._record_group_by_item = RecordGroupByItem()

    def field(self, field: str) -> "RecordGroupByItemBuilder":
        self._record_group_by_item.field = field
        return self

    def build(self) -> "RecordGroupByItem":
        return self._record_group_by_item
