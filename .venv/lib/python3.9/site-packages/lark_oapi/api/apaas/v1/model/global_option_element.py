# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .global_option_label import GlobalOptionLabel


class GlobalOptionElement(object):
    _types = {
        "api_name": str,
        "label": GlobalOptionLabel,
        "active": bool,
    }

    def __init__(self, d=None):
        self.api_name: Optional[str] = None
        self.label: Optional[GlobalOptionLabel] = None
        self.active: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GlobalOptionElementBuilder":
        return GlobalOptionElementBuilder()


class GlobalOptionElementBuilder(object):
    def __init__(self) -> None:
        self._global_option_element = GlobalOptionElement()

    def api_name(self, api_name: str) -> "GlobalOptionElementBuilder":
        self._global_option_element.api_name = api_name
        return self

    def label(self, label: GlobalOptionLabel) -> "GlobalOptionElementBuilder":
        self._global_option_element.label = label
        return self

    def active(self, active: bool) -> "GlobalOptionElementBuilder":
        self._global_option_element.active = active
        return self

    def build(self) -> "GlobalOptionElement":
        return self._global_option_element
