# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .environment_variable import EnvironmentVariable


class GetApplicationEnvironmentVariableResponseBody(object):
    _types = {
        "item": EnvironmentVariable,
    }

    def __init__(self, d=None):
        self.item: Optional[EnvironmentVariable] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetApplicationEnvironmentVariableResponseBodyBuilder":
        return GetApplicationEnvironmentVariableResponseBodyBuilder()


class GetApplicationEnvironmentVariableResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_application_environment_variable_response_body = GetApplicationEnvironmentVariableResponseBody()

    def item(self, item: EnvironmentVariable) -> "GetApplicationEnvironmentVariableResponseBodyBuilder":
        self._get_application_environment_variable_response_body.item = item
        return self

    def build(self) -> "GetApplicationEnvironmentVariableResponseBody":
        return self._get_application_environment_variable_response_body
