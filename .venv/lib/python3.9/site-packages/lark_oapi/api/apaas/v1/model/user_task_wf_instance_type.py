# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n import I18n


class UserTaskWfInstanceType(object):
    _types = {
        "id": str,
        "label": List[I18n],
        "status": str,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.label: Optional[List[I18n]] = None
        self.status: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "UserTaskWfInstanceTypeBuilder":
        return UserTaskWfInstanceTypeBuilder()


class UserTaskWfInstanceTypeBuilder(object):
    def __init__(self) -> None:
        self._user_task_wf_instance_type = UserTaskWfInstanceType()

    def id(self, id: str) -> "UserTaskWfInstanceTypeBuilder":
        self._user_task_wf_instance_type.id = id
        return self

    def label(self, label: List[I18n]) -> "UserTaskWfInstanceTypeBuilder":
        self._user_task_wf_instance_type.label = label
        return self

    def status(self, status: str) -> "UserTaskWfInstanceTypeBuilder":
        self._user_task_wf_instance_type.status = status
        return self

    def build(self) -> "UserTaskWfInstanceType":
        return self._user_task_wf_instance_type
