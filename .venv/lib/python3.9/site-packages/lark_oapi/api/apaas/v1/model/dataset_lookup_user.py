# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class DatasetLookupUser(object):
    _types = {
        "id": str,
        "name": str,
        "is_deleted": bool,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.name: Optional[str] = None
        self.is_deleted: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DatasetLookupUserBuilder":
        return DatasetLookupUserBuilder()


class DatasetLookupUserBuilder(object):
    def __init__(self) -> None:
        self._dataset_lookup_user = DatasetLookupUser()

    def id(self, id: str) -> "DatasetLookupUserBuilder":
        self._dataset_lookup_user.id = id
        return self

    def name(self, name: str) -> "DatasetLookupUserBuilder":
        self._dataset_lookup_user.name = name
        return self

    def is_deleted(self, is_deleted: bool) -> "DatasetLookupUserBuilder":
        self._dataset_lookup_user.is_deleted = is_deleted
        return self

    def build(self) -> "DatasetLookupUser":
        return self._dataset_lookup_user
