# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class QueryApplicationObjectRecordResponseBody(object):
    _types = {
        "item": str,
    }

    def __init__(self, d=None):
        self.item: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryApplicationObjectRecordResponseBodyBuilder":
        return QueryApplicationObjectRecordResponseBodyBuilder()


class QueryApplicationObjectRecordResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._query_application_object_record_response_body = QueryApplicationObjectRecordResponseBody()

    def item(self, item: str) -> "QueryApplicationObjectRecordResponseBodyBuilder":
        self._query_application_object_record_response_body.item = item
        return self

    def build(self) -> "QueryApplicationObjectRecordResponseBody":
        return self._query_application_object_record_response_body
