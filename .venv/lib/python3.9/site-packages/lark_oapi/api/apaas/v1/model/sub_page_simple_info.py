# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class SubPageSimpleInfo(object):
    _types = {
        "sub_page_key": str,
        "display_name": Dict[str, str],
        "sub_page_api_name": str,
    }

    def __init__(self, d=None):
        self.sub_page_key: Optional[str] = None
        self.display_name: Optional[Dict[str, str]] = None
        self.sub_page_api_name: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SubPageSimpleInfoBuilder":
        return SubPageSimpleInfoBuilder()


class SubPageSimpleInfoBuilder(object):
    def __init__(self) -> None:
        self._sub_page_simple_info = SubPageSimpleInfo()

    def sub_page_key(self, sub_page_key: str) -> "SubPageSimpleInfoBuilder":
        self._sub_page_simple_info.sub_page_key = sub_page_key
        return self

    def display_name(self, display_name: Dict[str, str]) -> "SubPageSimpleInfoBuilder":
        self._sub_page_simple_info.display_name = display_name
        return self

    def sub_page_api_name(self, sub_page_api_name: str) -> "SubPageSimpleInfoBuilder":
        self._sub_page_simple_info.sub_page_api_name = sub_page_api_name
        return self

    def build(self) -> "SubPageSimpleInfo":
        return self._sub_page_simple_info
