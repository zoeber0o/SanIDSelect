# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class QueryApplicationObjectRecordRequestBody(object):
    _types = {
        "select": List[str],
    }

    def __init__(self, d=None):
        self.select: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryApplicationObjectRecordRequestBodyBuilder":
        return QueryApplicationObjectRecordRequestBodyBuilder()


class QueryApplicationObjectRecordRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._query_application_object_record_request_body = QueryApplicationObjectRecordRequestBody()

    def select(self, select: List[str]) -> "QueryApplicationObjectRecordRequestBodyBuilder":
        self._query_application_object_record_request_body.select = select
        return self

    def build(self) -> "QueryApplicationObjectRecordRequestBody":
        return self._query_application_object_record_request_body
