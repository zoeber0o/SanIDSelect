# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class BatchCreateApplicationObjectRecordRequestBody(object):
    _types = {
        "records": str,
    }

    def __init__(self, d=None):
        self.records: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchCreateApplicationObjectRecordRequestBodyBuilder":
        return BatchCreateApplicationObjectRecordRequestBodyBuilder()


class BatchCreateApplicationObjectRecordRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_create_application_object_record_request_body = BatchCreateApplicationObjectRecordRequestBody()

    def records(self, records: str) -> "BatchCreateApplicationObjectRecordRequestBodyBuilder":
        self._batch_create_application_object_record_request_body.records = records
        return self

    def build(self) -> "BatchCreateApplicationObjectRecordRequestBody":
        return self._batch_create_application_object_record_request_body
