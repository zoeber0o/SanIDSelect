# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .sub_page_simple_info import SubPageSimpleInfo


class PagePermissionAccess(object):
    _types = {
        "api_id": str,
        "api_name": str,
        "sub_pages": List[SubPageSimpleInfo],
        "display_name": Dict[str, str],
    }

    def __init__(self, d=None):
        self.api_id: Optional[str] = None
        self.api_name: Optional[str] = None
        self.sub_pages: Optional[List[SubPageSimpleInfo]] = None
        self.display_name: Optional[Dict[str, str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PagePermissionAccessBuilder":
        return PagePermissionAccessBuilder()


class PagePermissionAccessBuilder(object):
    def __init__(self) -> None:
        self._page_permission_access = PagePermissionAccess()

    def api_id(self, api_id: str) -> "PagePermissionAccessBuilder":
        self._page_permission_access.api_id = api_id
        return self

    def api_name(self, api_name: str) -> "PagePermissionAccessBuilder":
        self._page_permission_access.api_name = api_name
        return self

    def sub_pages(self, sub_pages: List[SubPageSimpleInfo]) -> "PagePermissionAccessBuilder":
        self._page_permission_access.sub_pages = sub_pages
        return self

    def display_name(self, display_name: Dict[str, str]) -> "PagePermissionAccessBuilder":
        self._page_permission_access.display_name = display_name
        return self

    def build(self) -> "PagePermissionAccess":
        return self._page_permission_access
