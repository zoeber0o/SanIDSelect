# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class SeatAssignment(object):
    _types = {
        "user_id": int,
        "namespace": str,
        "status": str,
    }

    def __init__(self, d=None):
        self.user_id: Optional[int] = None
        self.namespace: Optional[str] = None
        self.status: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SeatAssignmentBuilder":
        return SeatAssignmentBuilder()


class SeatAssignmentBuilder(object):
    def __init__(self) -> None:
        self._seat_assignment = SeatAssignment()

    def user_id(self, user_id: int) -> "SeatAssignmentBuilder":
        self._seat_assignment.user_id = user_id
        return self

    def namespace(self, namespace: str) -> "SeatAssignmentBuilder":
        self._seat_assignment.namespace = namespace
        return self

    def status(self, status: str) -> "SeatAssignmentBuilder":
        self._seat_assignment.status = status
        return self

    def build(self) -> "SeatAssignment":
        return self._seat_assignment
