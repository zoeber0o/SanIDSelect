# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .create_migration_entity import CreateMigrationEntity


class CreateMigrationItems(object):
    _types = {
        "task_id": str,
        "task_status": str,
        "entity": CreateMigrationEntity,
    }

    def __init__(self, d=None):
        self.task_id: Optional[str] = None
        self.task_status: Optional[str] = None
        self.entity: Optional[CreateMigrationEntity] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateMigrationItemsBuilder":
        return CreateMigrationItemsBuilder()


class CreateMigrationItemsBuilder(object):
    def __init__(self) -> None:
        self._create_migration_items = CreateMigrationItems()

    def task_id(self, task_id: str) -> "CreateMigrationItemsBuilder":
        self._create_migration_items.task_id = task_id
        return self

    def task_status(self, task_status: str) -> "CreateMigrationItemsBuilder":
        self._create_migration_items.task_status = task_status
        return self

    def entity(self, entity: CreateMigrationEntity) -> "CreateMigrationItemsBuilder":
        self._create_migration_items.entity = entity
        return self

    def build(self) -> "CreateMigrationItems":
        return self._create_migration_items
