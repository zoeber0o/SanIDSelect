# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class DataArchivingUserStruct(object):
    _types = {
        "type": str,
        "id": str,
        "name": str,
    }

    def __init__(self, d=None):
        self.type: Optional[str] = None
        self.id: Optional[str] = None
        self.name: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DataArchivingUserStructBuilder":
        return DataArchivingUserStructBuilder()


class DataArchivingUserStructBuilder(object):
    def __init__(self) -> None:
        self._data_archiving_user_struct = DataArchivingUserStruct()

    def type(self, type: str) -> "DataArchivingUserStructBuilder":
        self._data_archiving_user_struct.type = type
        return self

    def id(self, id: str) -> "DataArchivingUserStructBuilder":
        self._data_archiving_user_struct.id = id
        return self

    def name(self, name: str) -> "DataArchivingUserStructBuilder":
        self._data_archiving_user_struct.name = name
        return self

    def build(self) -> "DataArchivingUserStruct":
        return self._data_archiving_user_struct
