# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ApplicationVisibilityDepartmentWhiteBlackInfo(object):
    _types = {
        "department_id": int,
        "in_white_list": bool,
        "in_black_list": bool,
    }

    def __init__(self, d=None):
        self.department_id: Optional[int] = None
        self.in_white_list: Optional[bool] = None
        self.in_black_list: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ApplicationVisibilityDepartmentWhiteBlackInfoBuilder":
        return ApplicationVisibilityDepartmentWhiteBlackInfoBuilder()


class ApplicationVisibilityDepartmentWhiteBlackInfoBuilder(object):
    def __init__(self) -> None:
        self._application_visibility_department_white_black_info = ApplicationVisibilityDepartmentWhiteBlackInfo()

    def department_id(self, department_id: int) -> "ApplicationVisibilityDepartmentWhiteBlackInfoBuilder":
        self._application_visibility_department_white_black_info.department_id = department_id
        return self

    def in_white_list(self, in_white_list: bool) -> "ApplicationVisibilityDepartmentWhiteBlackInfoBuilder":
        self._application_visibility_department_white_black_info.in_white_list = in_white_list
        return self

    def in_black_list(self, in_black_list: bool) -> "ApplicationVisibilityDepartmentWhiteBlackInfoBuilder":
        self._application_visibility_department_white_black_info.in_black_list = in_black_list
        return self

    def build(self) -> "ApplicationVisibilityDepartmentWhiteBlackInfo":
        return self._application_visibility_department_white_black_info
