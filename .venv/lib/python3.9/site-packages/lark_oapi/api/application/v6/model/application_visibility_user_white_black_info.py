# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ApplicationVisibilityUserWhiteBlackInfo(object):
    _types = {
        "user_id": int,
        "in_white_list": bool,
        "in_black_list": bool,
        "in_paid_list": bool,
    }

    def __init__(self, d=None):
        self.user_id: Optional[int] = None
        self.in_white_list: Optional[bool] = None
        self.in_black_list: Optional[bool] = None
        self.in_paid_list: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ApplicationVisibilityUserWhiteBlackInfoBuilder":
        return ApplicationVisibilityUserWhiteBlackInfoBuilder()


class ApplicationVisibilityUserWhiteBlackInfoBuilder(object):
    def __init__(self) -> None:
        self._application_visibility_user_white_black_info = ApplicationVisibilityUserWhiteBlackInfo()

    def user_id(self, user_id: int) -> "ApplicationVisibilityUserWhiteBlackInfoBuilder":
        self._application_visibility_user_white_black_info.user_id = user_id
        return self

    def in_white_list(self, in_white_list: bool) -> "ApplicationVisibilityUserWhiteBlackInfoBuilder":
        self._application_visibility_user_white_black_info.in_white_list = in_white_list
        return self

    def in_black_list(self, in_black_list: bool) -> "ApplicationVisibilityUserWhiteBlackInfoBuilder":
        self._application_visibility_user_white_black_info.in_black_list = in_black_list
        return self

    def in_paid_list(self, in_paid_list: bool) -> "ApplicationVisibilityUserWhiteBlackInfoBuilder":
        self._application_visibility_user_white_black_info.in_paid_list = in_paid_list
        return self

    def build(self) -> "ApplicationVisibilityUserWhiteBlackInfo":
        return self._application_visibility_user_white_black_info
