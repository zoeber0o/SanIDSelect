# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class EventAndCallbackEncryptStrategy(object):
    _types = {
        "encryption_key": str,
        "verification_token": str,
    }

    def __init__(self, d=None):
        self.encryption_key: Optional[str] = None
        self.verification_token: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "EventAndCallbackEncryptStrategyBuilder":
        return EventAndCallbackEncryptStrategyBuilder()


class EventAndCallbackEncryptStrategyBuilder(object):
    def __init__(self) -> None:
        self._event_and_callback_encrypt_strategy = EventAndCallbackEncryptStrategy()

    def encryption_key(self, encryption_key: str) -> "EventAndCallbackEncryptStrategyBuilder":
        self._event_and_callback_encrypt_strategy.encryption_key = encryption_key
        return self

    def verification_token(self, verification_token: str) -> "EventAndCallbackEncryptStrategyBuilder":
        self._event_and_callback_encrypt_strategy.verification_token = verification_token
        return self

    def build(self) -> "EventAndCallbackEncryptStrategy":
        return self._event_and_callback_encrypt_strategy
