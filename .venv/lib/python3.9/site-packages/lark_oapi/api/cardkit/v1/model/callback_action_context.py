# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class CallbackActionContext(object):
    _types = {
        "open_message_id": str,
        "open_chat_id": str,
    }

    def __init__(self, d=None):
        self.open_message_id: Optional[str] = None
        self.open_chat_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CallbackActionContextBuilder":
        return CallbackActionContextBuilder()


class CallbackActionContextBuilder(object):
    def __init__(self) -> None:
        self._callback_action_context = CallbackActionContext()

    def open_message_id(self, open_message_id: str) -> "CallbackActionContextBuilder":
        self._callback_action_context.open_message_id = open_message_id
        return self

    def open_chat_id(self, open_chat_id: str) -> "CallbackActionContextBuilder":
        self._callback_action_context.open_chat_id = open_chat_id
        return self

    def build(self) -> "CallbackActionContext":
        return self._callback_action_context
