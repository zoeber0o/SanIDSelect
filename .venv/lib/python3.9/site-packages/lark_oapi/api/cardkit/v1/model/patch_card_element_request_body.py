# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class PatchCardElementRequestBody(object):
    _types = {
        "partial_element": str,
        "uuid": str,
        "sequence": int,
    }

    def __init__(self, d=None):
        self.partial_element: Optional[str] = None
        self.uuid: Optional[str] = None
        self.sequence: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PatchCardElementRequestBodyBuilder":
        return PatchCardElementRequestBodyBuilder()


class PatchCardElementRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._patch_card_element_request_body = PatchCardElementRequestBody()

    def partial_element(self, partial_element: str) -> "PatchCardElementRequestBodyBuilder":
        self._patch_card_element_request_body.partial_element = partial_element
        return self

    def uuid(self, uuid: str) -> "PatchCardElementRequestBodyBuilder":
        self._patch_card_element_request_body.uuid = uuid
        return self

    def sequence(self, sequence: int) -> "PatchCardElementRequestBodyBuilder":
        self._patch_card_element_request_body.sequence = sequence
        return self

    def build(self) -> "PatchCardElementRequestBody":
        return self._patch_card_element_request_body
