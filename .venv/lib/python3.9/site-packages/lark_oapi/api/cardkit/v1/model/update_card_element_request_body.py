# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class UpdateCardElementRequestBody(object):
    _types = {
        "uuid": str,
        "element": str,
        "sequence": int,
    }

    def __init__(self, d=None):
        self.uuid: Optional[str] = None
        self.element: Optional[str] = None
        self.sequence: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "UpdateCardElementRequestBodyBuilder":
        return UpdateCardElementRequestBodyBuilder()


class UpdateCardElementRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._update_card_element_request_body = UpdateCardElementRequestBody()

    def uuid(self, uuid: str) -> "UpdateCardElementRequestBodyBuilder":
        self._update_card_element_request_body.uuid = uuid
        return self

    def element(self, element: str) -> "UpdateCardElementRequestBodyBuilder":
        self._update_card_element_request_body.element = element
        return self

    def sequence(self, sequence: int) -> "UpdateCardElementRequestBodyBuilder":
        self._update_card_element_request_body.sequence = sequence
        return self

    def build(self) -> "UpdateCardElementRequestBody":
        return self._update_card_element_request_body
