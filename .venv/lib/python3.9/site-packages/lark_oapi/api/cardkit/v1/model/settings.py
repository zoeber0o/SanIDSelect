# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .card_link import CardLink
from .config import Config


class Settings(object):
    _types = {
        "card_link": CardLink,
        "config": Config,
    }

    def __init__(self, d=None):
        self.card_link: Optional[CardLink] = None
        self.config: Optional[Config] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SettingsBuilder":
        return SettingsBuilder()


class SettingsBuilder(object):
    def __init__(self) -> None:
        self._settings = Settings()

    def card_link(self, card_link: CardLink) -> "SettingsBuilder":
        self._settings.card_link = card_link
        return self

    def config(self, config: Config) -> "SettingsBuilder":
        self._settings.config = config
        return self

    def build(self) -> "Settings":
        return self._settings
