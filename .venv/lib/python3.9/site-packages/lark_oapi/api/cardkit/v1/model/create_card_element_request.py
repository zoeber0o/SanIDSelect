# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .create_card_element_request_body import CreateCardElementRequestBody


class CreateCardElementRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.card_id: Optional[str] = None
        self.request_body: Optional[CreateCardElementRequestBody] = None

    @staticmethod
    def builder() -> "CreateCardElementRequestBuilder":
        return CreateCardElementRequestBuilder()


class CreateCardElementRequestBuilder(object):

    def __init__(self) -> None:
        create_card_element_request = CreateCardElementRequest()
        create_card_element_request.http_method = HttpMethod.POST
        create_card_element_request.uri = "/open-apis/cardkit/v1/cards/:card_id/elements"
        create_card_element_request.token_types = {AccessTokenType.TENANT}
        self._create_card_element_request: CreateCardElementRequest = create_card_element_request

    def card_id(self, card_id: str) -> "CreateCardElementRequestBuilder":
        self._create_card_element_request.card_id = card_id
        self._create_card_element_request.paths["card_id"] = str(card_id)
        return self

    def request_body(self, request_body: CreateCardElementRequestBody) -> "CreateCardElementRequestBuilder":
        self._create_card_element_request.request_body = request_body
        self._create_card_element_request.body = request_body
        return self

    def build(self) -> CreateCardElementRequest:
        return self._create_card_element_request
