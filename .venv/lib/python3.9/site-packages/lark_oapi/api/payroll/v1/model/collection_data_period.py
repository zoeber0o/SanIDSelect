# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class CollectionDataPeriod(object):
    _types = {
        "start_date": str,
        "end_date": str,
    }

    def __init__(self, d=None):
        self.start_date: Optional[str] = None
        self.end_date: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CollectionDataPeriodBuilder":
        return CollectionDataPeriodBuilder()


class CollectionDataPeriodBuilder(object):
    def __init__(self) -> None:
        self._collection_data_period = CollectionDataPeriod()

    def start_date(self, start_date: str) -> "CollectionDataPeriodBuilder":
        self._collection_data_period.start_date = start_date
        return self

    def end_date(self, end_date: str) -> "CollectionDataPeriodBuilder":
        self._collection_data_period.end_date = end_date
        return self

    def build(self) -> "CollectionDataPeriod":
        return self._collection_data_period
