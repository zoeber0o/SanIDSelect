# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n_content import I18nContent


class Dimension(object):
    _types = {
        "i18n_names": List[I18nContent],
        "api_name": str,
        "obj_api_name": str,
    }

    def __init__(self, d=None):
        self.i18n_names: Optional[List[I18nContent]] = None
        self.api_name: Optional[str] = None
        self.obj_api_name: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DimensionBuilder":
        return DimensionBuilder()


class DimensionBuilder(object):
    def __init__(self) -> None:
        self._dimension = Dimension()

    def i18n_names(self, i18n_names: List[I18nContent]) -> "DimensionBuilder":
        self._dimension.i18n_names = i18n_names
        return self

    def api_name(self, api_name: str) -> "DimensionBuilder":
        self._dimension.api_name = api_name
        return self

    def obj_api_name(self, obj_api_name: str) -> "DimensionBuilder":
        self._dimension.obj_api_name = obj_api_name
        return self

    def build(self) -> "Dimension":
        return self._dimension
