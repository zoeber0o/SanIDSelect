# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class CalendarFailItem(object):
    _types = {
        "id": str,
        "fail_reason": str,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.fail_reason: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CalendarFailItemBuilder":
        return CalendarFailItemBuilder()


class CalendarFailItemBuilder(object):
    def __init__(self) -> None:
        self._calendar_fail_item = CalendarFailItem()

    def id(self, id: str) -> "CalendarFailItemBuilder":
        self._calendar_fail_item.id = id
        return self

    def fail_reason(self, fail_reason: str) -> "CalendarFailItemBuilder":
        self._calendar_fail_item.fail_reason = fail_reason
        return self

    def build(self) -> "CalendarFailItem":
        return self._calendar_fail_item
