# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class VerifPayCalendar(object):
    _types = {
        "id": str,
        "zh_name": str,
        "en_name": str,
        "calendar_source": int,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.zh_name: Optional[str] = None
        self.en_name: Optional[str] = None
        self.calendar_source: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "VerifPayCalendarBuilder":
        return VerifPayCalendarBuilder()


class VerifPayCalendarBuilder(object):
    def __init__(self) -> None:
        self._verif_pay_calendar = VerifPayCalendar()

    def id(self, id: str) -> "VerifPayCalendarBuilder":
        self._verif_pay_calendar.id = id
        return self

    def zh_name(self, zh_name: str) -> "VerifPayCalendarBuilder":
        self._verif_pay_calendar.zh_name = zh_name
        return self

    def en_name(self, en_name: str) -> "VerifPayCalendarBuilder":
        self._verif_pay_calendar.en_name = en_name
        return self

    def calendar_source(self, calendar_source: int) -> "VerifPayCalendarBuilder":
        self._verif_pay_calendar.calendar_source = calendar_source
        return self

    def build(self) -> "VerifPayCalendar":
        return self._verif_pay_calendar
