# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .payment_detail import PaymentDetail


class QueryPaymentDetailResponseBody(object):
    _types = {
        "payment_details": List[PaymentDetail],
        "total": int,
    }

    def __init__(self, d=None):
        self.payment_details: Optional[List[PaymentDetail]] = None
        self.total: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryPaymentDetailResponseBodyBuilder":
        return QueryPaymentDetailResponseBodyBuilder()


class QueryPaymentDetailResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._query_payment_detail_response_body = QueryPaymentDetailResponseBody()

    def payment_details(self, payment_details: List[PaymentDetail]) -> "QueryPaymentDetailResponseBodyBuilder":
        self._query_payment_detail_response_body.payment_details = payment_details
        return self

    def total(self, total: int) -> "QueryPaymentDetailResponseBodyBuilder":
        self._query_payment_detail_response_body.total = total
        return self

    def build(self) -> "QueryPaymentDetailResponseBody":
        return self._query_payment_detail_response_body
