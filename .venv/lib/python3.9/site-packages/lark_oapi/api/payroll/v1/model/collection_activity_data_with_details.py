# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .calendar_period import CalendarPeriod
from .country_region import CountryRegion
from .collection_employee_data import CollectionEmployeeData


class CollectionActivityDataWithDetails(object):
    _types = {
        "activity_id": str,
        "template_id": str,
        "template_version_id": str,
        "calendar_period": CalendarPeriod,
        "calendar_effective_date": str,
        "country_regions": List[CountryRegion],
        "collection_employee_datas": List[CollectionEmployeeData],
        "activity_approval_pass_time": str,
    }

    def __init__(self, d=None):
        self.activity_id: Optional[str] = None
        self.template_id: Optional[str] = None
        self.template_version_id: Optional[str] = None
        self.calendar_period: Optional[CalendarPeriod] = None
        self.calendar_effective_date: Optional[str] = None
        self.country_regions: Optional[List[CountryRegion]] = None
        self.collection_employee_datas: Optional[List[CollectionEmployeeData]] = None
        self.activity_approval_pass_time: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CollectionActivityDataWithDetailsBuilder":
        return CollectionActivityDataWithDetailsBuilder()


class CollectionActivityDataWithDetailsBuilder(object):
    def __init__(self) -> None:
        self._collection_activity_data_with_details = CollectionActivityDataWithDetails()

    def activity_id(self, activity_id: str) -> "CollectionActivityDataWithDetailsBuilder":
        self._collection_activity_data_with_details.activity_id = activity_id
        return self

    def template_id(self, template_id: str) -> "CollectionActivityDataWithDetailsBuilder":
        self._collection_activity_data_with_details.template_id = template_id
        return self

    def template_version_id(self, template_version_id: str) -> "CollectionActivityDataWithDetailsBuilder":
        self._collection_activity_data_with_details.template_version_id = template_version_id
        return self

    def calendar_period(self, calendar_period: CalendarPeriod) -> "CollectionActivityDataWithDetailsBuilder":
        self._collection_activity_data_with_details.calendar_period = calendar_period
        return self

    def calendar_effective_date(self, calendar_effective_date: str) -> "CollectionActivityDataWithDetailsBuilder":
        self._collection_activity_data_with_details.calendar_effective_date = calendar_effective_date
        return self

    def country_regions(self, country_regions: List[CountryRegion]) -> "CollectionActivityDataWithDetailsBuilder":
        self._collection_activity_data_with_details.country_regions = country_regions
        return self

    def collection_employee_datas(self, collection_employee_datas: List[
        CollectionEmployeeData]) -> "CollectionActivityDataWithDetailsBuilder":
        self._collection_activity_data_with_details.collection_employee_datas = collection_employee_datas
        return self

    def activity_approval_pass_time(self,
                                    activity_approval_pass_time: str) -> "CollectionActivityDataWithDetailsBuilder":
        self._collection_activity_data_with_details.activity_approval_pass_time = activity_approval_pass_time
        return self

    def build(self) -> "CollectionActivityDataWithDetails":
        return self._collection_activity_data_with_details
