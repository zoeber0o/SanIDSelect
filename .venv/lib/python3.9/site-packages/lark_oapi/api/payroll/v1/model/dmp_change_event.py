# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .dmp_timeline_field import DmpTimelineField
from .dmp_timeline_field import DmpTimelineField


class DmpChangeEvent(object):
    _types = {
        "employee_number": str,
        "old_version_data": List[DmpTimelineField],
        "new_version_data": List[DmpTimelineField],
    }

    def __init__(self, d=None):
        self.employee_number: Optional[str] = None
        self.old_version_data: Optional[List[DmpTimelineField]] = None
        self.new_version_data: Optional[List[DmpTimelineField]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DmpChangeEventBuilder":
        return DmpChangeEventBuilder()


class DmpChangeEventBuilder(object):
    def __init__(self) -> None:
        self._dmp_change_event = DmpChangeEvent()

    def employee_number(self, employee_number: str) -> "DmpChangeEventBuilder":
        self._dmp_change_event.employee_number = employee_number
        return self

    def old_version_data(self, old_version_data: List[DmpTimelineField]) -> "DmpChangeEventBuilder":
        self._dmp_change_event.old_version_data = old_version_data
        return self

    def new_version_data(self, new_version_data: List[DmpTimelineField]) -> "DmpChangeEventBuilder":
        self._dmp_change_event.new_version_data = new_version_data
        return self

    def build(self) -> "DmpChangeEvent":
        return self._dmp_change_event
