# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .payment_activity import PaymentActivity


class ListPaymentActivityResponseBody(object):
    _types = {
        "payment_activitys": List[PaymentActivity],
        "page_token": str,
        "has_more": bool,
    }

    def __init__(self, d=None):
        self.payment_activitys: Optional[List[PaymentActivity]] = None
        self.page_token: Optional[str] = None
        self.has_more: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ListPaymentActivityResponseBodyBuilder":
        return ListPaymentActivityResponseBodyBuilder()


class ListPaymentActivityResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._list_payment_activity_response_body = ListPaymentActivityResponseBody()

    def payment_activitys(self, payment_activitys: List[PaymentActivity]) -> "ListPaymentActivityResponseBodyBuilder":
        self._list_payment_activity_response_body.payment_activitys = payment_activitys
        return self

    def page_token(self, page_token: str) -> "ListPaymentActivityResponseBodyBuilder":
        self._list_payment_activity_response_body.page_token = page_token
        return self

    def has_more(self, has_more: bool) -> "ListPaymentActivityResponseBodyBuilder":
        self._list_payment_activity_response_body.has_more = has_more
        return self

    def build(self) -> "ListPaymentActivityResponseBody":
        return self._list_payment_activity_response_body
