# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .post import Post


class GetPostResponseBody(object):
    _types = {
        "post": Post,
    }

    def __init__(self, d=None):
        self.post: Optional[Post] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetPostResponseBodyBuilder":
        return GetPostResponseBodyBuilder()


class GetPostResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_post_response_body = GetPostResponseBody()

    def post(self, post: Post) -> "GetPostResponseBodyBuilder":
        self._get_post_response_body.post = post
        return self

    def build(self) -> "GetPostResponseBody":
        return self._get_post_response_body
