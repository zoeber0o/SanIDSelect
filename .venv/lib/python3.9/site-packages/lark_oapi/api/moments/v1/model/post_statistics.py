# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class PostStatistics(object):
    _types = {
        "share_count": int,
    }

    def __init__(self, d=None):
        self.share_count: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PostStatisticsBuilder":
        return PostStatisticsBuilder()


class PostStatisticsBuilder(object):
    def __init__(self) -> None:
        self._post_statistics = PostStatistics()

    def share_count(self, share_count: int) -> "PostStatisticsBuilder":
        self._post_statistics.share_count = share_count
        return self

    def build(self) -> "PostStatistics":
        return self._post_statistics
