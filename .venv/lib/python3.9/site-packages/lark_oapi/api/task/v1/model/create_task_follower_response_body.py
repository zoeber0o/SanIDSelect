# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .follower import Follower


class CreateTaskFollowerResponseBody(object):
    _types = {
        "follower": Follower,
    }

    def __init__(self, d=None):
        self.follower: Optional[Follower] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateTaskFollowerResponseBodyBuilder":
        return CreateTaskFollowerResponseBodyBuilder()


class CreateTaskFollowerResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_task_follower_response_body = CreateTaskFollowerResponseBody()

    def follower(self, follower: Follower) -> "CreateTaskFollowerResponseBodyBuilder":
        self._create_task_follower_response_body.follower = follower
        return self

    def build(self) -> "CreateTaskFollowerResponseBody":
        return self._create_task_follower_response_body
