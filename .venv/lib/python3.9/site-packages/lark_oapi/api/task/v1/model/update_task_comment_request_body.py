# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class UpdateTaskCommentRequestBody(object):
    _types = {
        "content": str,
        "rich_content": str,
    }

    def __init__(self, d=None):
        self.content: Optional[str] = None
        self.rich_content: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "UpdateTaskCommentRequestBodyBuilder":
        return UpdateTaskCommentRequestBodyBuilder()


class UpdateTaskCommentRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._update_task_comment_request_body = UpdateTaskCommentRequestBody()

    def content(self, content: str) -> "UpdateTaskCommentRequestBodyBuilder":
        self._update_task_comment_request_body.content = content
        return self

    def rich_content(self, rich_content: str) -> "UpdateTaskCommentRequestBodyBuilder":
        self._update_task_comment_request_body.rich_content = rich_content
        return self

    def build(self) -> "UpdateTaskCommentRequestBody":
        return self._update_task_comment_request_body
