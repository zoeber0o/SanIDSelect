# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .task_in_tasklist_info import TaskInTasklistInfo


class TasklistsTaskResponseBody(object):
    _types = {
        "tasklists": List[TaskInTasklistInfo],
    }

    def __init__(self, d=None):
        self.tasklists: Optional[List[TaskInTasklistInfo]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "TasklistsTaskResponseBodyBuilder":
        return TasklistsTaskResponseBodyBuilder()


class TasklistsTaskResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._tasklists_task_response_body = TasklistsTaskResponseBody()

    def tasklists(self, tasklists: List[TaskInTasklistInfo]) -> "TasklistsTaskResponseBodyBuilder":
        self._tasklists_task_response_body.tasklists = tasklists
        return self

    def build(self) -> "TasklistsTaskResponseBody":
        return self._tasklists_task_response_body
