# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .tasklist_activity_subscription import TasklistActivitySubscription


class PatchTasklistActivitySubscriptionRequestBody(object):
    _types = {
        "activity_subscription": TasklistActivitySubscription,
        "update_fields": List[str],
    }

    def __init__(self, d=None):
        self.activity_subscription: Optional[TasklistActivitySubscription] = None
        self.update_fields: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PatchTasklistActivitySubscriptionRequestBodyBuilder":
        return PatchTasklistActivitySubscriptionRequestBodyBuilder()


class PatchTasklistActivitySubscriptionRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._patch_tasklist_activity_subscription_request_body = PatchTasklistActivitySubscriptionRequestBody()

    def activity_subscription(self,
                              activity_subscription: TasklistActivitySubscription) -> "PatchTasklistActivitySubscriptionRequestBodyBuilder":
        self._patch_tasklist_activity_subscription_request_body.activity_subscription = activity_subscription
        return self

    def update_fields(self, update_fields: List[str]) -> "PatchTasklistActivitySubscriptionRequestBodyBuilder":
        self._patch_tasklist_activity_subscription_request_body.update_fields = update_fields
        return self

    def build(self) -> "PatchTasklistActivitySubscriptionRequestBody":
        return self._patch_tasklist_activity_subscription_request_body
