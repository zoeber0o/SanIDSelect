# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .tasklist_activity_subscription import TasklistActivitySubscription


class CreateTasklistActivitySubscriptionResponseBody(object):
    _types = {
        "activity_subscription": TasklistActivitySubscription,
    }

    def __init__(self, d=None):
        self.activity_subscription: Optional[TasklistActivitySubscription] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateTasklistActivitySubscriptionResponseBodyBuilder":
        return CreateTasklistActivitySubscriptionResponseBodyBuilder()


class CreateTasklistActivitySubscriptionResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_tasklist_activity_subscription_response_body = CreateTasklistActivitySubscriptionResponseBody()

    def activity_subscription(self,
                              activity_subscription: TasklistActivitySubscription) -> "CreateTasklistActivitySubscriptionResponseBodyBuilder":
        self._create_tasklist_activity_subscription_response_body.activity_subscription = activity_subscription
        return self

    def build(self) -> "CreateTasklistActivitySubscriptionResponseBody":
        return self._create_tasklist_activity_subscription_response_body
