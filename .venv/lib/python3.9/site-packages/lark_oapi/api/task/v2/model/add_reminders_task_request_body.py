# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .reminder import Reminder


class AddRemindersTaskRequestBody(object):
    _types = {
        "reminders": List[Reminder],
    }

    def __init__(self, d=None):
        self.reminders: Optional[List[Reminder]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "AddRemindersTaskRequestBodyBuilder":
        return AddRemindersTaskRequestBodyBuilder()


class AddRemindersTaskRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._add_reminders_task_request_body = AddRemindersTaskRequestBody()

    def reminders(self, reminders: List[Reminder]) -> "AddRemindersTaskRequestBodyBuilder":
        self._add_reminders_task_request_body.reminders = reminders
        return self

    def build(self) -> "AddRemindersTaskRequestBody":
        return self._add_reminders_task_request_body
