# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OkrObjectiveAlignment(object):
    _types = {
        "id": int,
        "to_id": int,
        "to_type": int,
    }

    def __init__(self, d=None):
        self.id: Optional[int] = None
        self.to_id: Optional[int] = None
        self.to_type: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OkrObjectiveAlignmentBuilder":
        return OkrObjectiveAlignmentBuilder()


class OkrObjectiveAlignmentBuilder(object):
    def __init__(self) -> None:
        self._okr_objective_alignment = OkrObjectiveAlignment()

    def id(self, id: int) -> "OkrObjectiveAlignmentBuilder":
        self._okr_objective_alignment.id = id
        return self

    def to_id(self, to_id: int) -> "OkrObjectiveAlignmentBuilder":
        self._okr_objective_alignment.to_id = to_id
        return self

    def to_type(self, to_type: int) -> "OkrObjectiveAlignmentBuilder":
        self._okr_objective_alignment.to_type = to_type
        return self

    def build(self) -> "OkrObjectiveAlignment":
        return self._okr_objective_alignment
