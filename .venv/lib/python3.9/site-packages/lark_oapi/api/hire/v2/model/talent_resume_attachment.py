# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class TalentResumeAttachment(object):
    _types = {
        "id": str,
        "name": str,
        "mime": str,
        "create_time": str,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.name: Optional[str] = None
        self.mime: Optional[str] = None
        self.create_time: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "TalentResumeAttachmentBuilder":
        return TalentResumeAttachmentBuilder()


class TalentResumeAttachmentBuilder(object):
    def __init__(self) -> None:
        self._talent_resume_attachment = TalentResumeAttachment()

    def id(self, id: str) -> "TalentResumeAttachmentBuilder":
        self._talent_resume_attachment.id = id
        return self

    def name(self, name: str) -> "TalentResumeAttachmentBuilder":
        self._talent_resume_attachment.name = name
        return self

    def mime(self, mime: str) -> "TalentResumeAttachmentBuilder":
        self._talent_resume_attachment.mime = mime
        return self

    def create_time(self, create_time: str) -> "TalentResumeAttachmentBuilder":
        self._talent_resume_attachment.create_time = create_time
        return self

    def build(self) -> "TalentResumeAttachment":
        return self._talent_resume_attachment
