# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .interview_record import InterviewRecord


class GetInterviewRecordResponseBody(object):
    _types = {
        "interview_record": InterviewRecord,
    }

    def __init__(self, d=None):
        self.interview_record: Optional[InterviewRecord] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetInterviewRecordResponseBodyBuilder":
        return GetInterviewRecordResponseBodyBuilder()


class GetInterviewRecordResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_interview_record_response_body = GetInterviewRecordResponseBody()

    def interview_record(self, interview_record: InterviewRecord) -> "GetInterviewRecordResponseBodyBuilder":
        self._get_interview_record_response_body.interview_record = interview_record
        return self

    def build(self) -> "GetInterviewRecordResponseBody":
        return self._get_interview_record_response_body
