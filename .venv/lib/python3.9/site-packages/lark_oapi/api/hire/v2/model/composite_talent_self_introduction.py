# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .talent_customized_data_child import TalentCustomizedDataChild


class CompositeTalentSelfIntroduction(object):
    _types = {
        "self_introduction": str,
        "customized_data_list": List[TalentCustomizedDataChild],
    }

    def __init__(self, d=None):
        self.self_introduction: Optional[str] = None
        self.customized_data_list: Optional[List[TalentCustomizedDataChild]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CompositeTalentSelfIntroductionBuilder":
        return CompositeTalentSelfIntroductionBuilder()


class CompositeTalentSelfIntroductionBuilder(object):
    def __init__(self) -> None:
        self._composite_talent_self_introduction = CompositeTalentSelfIntroduction()

    def self_introduction(self, self_introduction: str) -> "CompositeTalentSelfIntroductionBuilder":
        self._composite_talent_self_introduction.self_introduction = self_introduction
        return self

    def customized_data_list(self, customized_data_list: List[
        TalentCustomizedDataChild]) -> "CompositeTalentSelfIntroductionBuilder":
        self._composite_talent_self_introduction.customized_data_list = customized_data_list
        return self

    def build(self) -> "CompositeTalentSelfIntroduction":
        return self._composite_talent_self_introduction
