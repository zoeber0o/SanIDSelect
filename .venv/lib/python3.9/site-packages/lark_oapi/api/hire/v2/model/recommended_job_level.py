# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n import I18n
from .i18n import I18n


class RecommendedJobLevel(object):
    _types = {
        "lower_limit_job_level_name": I18n,
        "higher_limit_job_level_name": I18n,
    }

    def __init__(self, d=None):
        self.lower_limit_job_level_name: Optional[I18n] = None
        self.higher_limit_job_level_name: Optional[I18n] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RecommendedJobLevelBuilder":
        return RecommendedJobLevelBuilder()


class RecommendedJobLevelBuilder(object):
    def __init__(self) -> None:
        self._recommended_job_level = RecommendedJobLevel()

    def lower_limit_job_level_name(self, lower_limit_job_level_name: I18n) -> "RecommendedJobLevelBuilder":
        self._recommended_job_level.lower_limit_job_level_name = lower_limit_job_level_name
        return self

    def higher_limit_job_level_name(self, higher_limit_job_level_name: I18n) -> "RecommendedJobLevelBuilder":
        self._recommended_job_level.higher_limit_job_level_name = higher_limit_job_level_name
        return self

    def build(self) -> "RecommendedJobLevel":
        return self._recommended_job_level
