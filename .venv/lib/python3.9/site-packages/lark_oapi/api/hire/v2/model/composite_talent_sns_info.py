# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .talent_customized_data_child import TalentCustomizedDataChild


class CompositeTalentSnsInfo(object):
    _types = {
        "sns_type": int,
        "link": str,
        "customized_data_list": List[TalentCustomizedDataChild],
    }

    def __init__(self, d=None):
        self.sns_type: Optional[int] = None
        self.link: Optional[str] = None
        self.customized_data_list: Optional[List[TalentCustomizedDataChild]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CompositeTalentSnsInfoBuilder":
        return CompositeTalentSnsInfoBuilder()


class CompositeTalentSnsInfoBuilder(object):
    def __init__(self) -> None:
        self._composite_talent_sns_info = CompositeTalentSnsInfo()

    def sns_type(self, sns_type: int) -> "CompositeTalentSnsInfoBuilder":
        self._composite_talent_sns_info.sns_type = sns_type
        return self

    def link(self, link: str) -> "CompositeTalentSnsInfoBuilder":
        self._composite_talent_sns_info.link = link
        return self

    def customized_data_list(self,
                             customized_data_list: List[TalentCustomizedDataChild]) -> "CompositeTalentSnsInfoBuilder":
        self._composite_talent_sns_info.customized_data_list = customized_data_list
        return self

    def build(self) -> "CompositeTalentSnsInfo":
        return self._composite_talent_sns_info
