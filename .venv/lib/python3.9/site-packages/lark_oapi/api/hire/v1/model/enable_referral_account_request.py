# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .enable_referral_account_request_body import EnableReferralAccountRequestBody


class EnableReferralAccountRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.user_id_type: Optional[str] = None
        self.request_body: Optional[EnableReferralAccountRequestBody] = None

    @staticmethod
    def builder() -> "EnableReferralAccountRequestBuilder":
        return EnableReferralAccountRequestBuilder()


class EnableReferralAccountRequestBuilder(object):

    def __init__(self) -> None:
        enable_referral_account_request = EnableReferralAccountRequest()
        enable_referral_account_request.http_method = HttpMethod.POST
        enable_referral_account_request.uri = "/open-apis/hire/v1/referral_account/enable"
        enable_referral_account_request.token_types = {AccessTokenType.TENANT}
        self._enable_referral_account_request: EnableReferralAccountRequest = enable_referral_account_request

    def user_id_type(self, user_id_type: str) -> "EnableReferralAccountRequestBuilder":
        self._enable_referral_account_request.user_id_type = user_id_type
        self._enable_referral_account_request.add_query("user_id_type", user_id_type)
        return self

    def request_body(self, request_body: EnableReferralAccountRequestBody) -> "EnableReferralAccountRequestBuilder":
        self._enable_referral_account_request.request_body = request_body
        self._enable_referral_account_request.body = request_body
        return self

    def build(self) -> EnableReferralAccountRequest:
        return self._enable_referral_account_request
