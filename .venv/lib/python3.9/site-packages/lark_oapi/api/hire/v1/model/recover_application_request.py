# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class RecoverApplicationRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.application_id: Optional[str] = None

    @staticmethod
    def builder() -> "RecoverApplicationRequestBuilder":
        return RecoverApplicationRequestBuilder()


class RecoverApplicationRequestBuilder(object):

    def __init__(self) -> None:
        recover_application_request = RecoverApplicationRequest()
        recover_application_request.http_method = HttpMethod.POST
        recover_application_request.uri = "/open-apis/hire/v1/applications/:application_id/recover"
        recover_application_request.token_types = {AccessTokenType.TENANT}
        self._recover_application_request: RecoverApplicationRequest = recover_application_request

    def application_id(self, application_id: str) -> "RecoverApplicationRequestBuilder":
        self._recover_application_request.application_id = application_id
        self._recover_application_request.paths["application_id"] = str(application_id)
        return self

    def build(self) -> RecoverApplicationRequest:
        return self._recover_application_request
