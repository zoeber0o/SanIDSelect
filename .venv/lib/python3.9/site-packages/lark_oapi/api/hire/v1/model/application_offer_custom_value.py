# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ApplicationOfferCustomValue(object):
    _types = {
        "object_id": str,
        "customize_value": str,
    }

    def __init__(self, d=None):
        self.object_id: Optional[str] = None
        self.customize_value: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ApplicationOfferCustomValueBuilder":
        return ApplicationOfferCustomValueBuilder()


class ApplicationOfferCustomValueBuilder(object):
    def __init__(self) -> None:
        self._application_offer_custom_value = ApplicationOfferCustomValue()

    def object_id(self, object_id: str) -> "ApplicationOfferCustomValueBuilder":
        self._application_offer_custom_value.object_id = object_id
        return self

    def customize_value(self, customize_value: str) -> "ApplicationOfferCustomValueBuilder":
        self._application_offer_custom_value.customize_value = customize_value
        return self

    def build(self) -> "ApplicationOfferCustomValue":
        return self._application_offer_custom_value
