# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OfferJobInfo(object):
    _types = {
        "job_id": str,
        "job_name": str,
    }

    def __init__(self, d=None):
        self.job_id: Optional[str] = None
        self.job_name: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OfferJobInfoBuilder":
        return OfferJobInfoBuilder()


class OfferJobInfoBuilder(object):
    def __init__(self) -> None:
        self._offer_job_info = OfferJobInfo()

    def job_id(self, job_id: str) -> "OfferJobInfoBuilder":
        self._offer_job_info.job_id = job_id
        return self

    def job_name(self, job_name: str) -> "OfferJobInfoBuilder":
        self._offer_job_info.job_name = job_name
        return self

    def build(self) -> "OfferJobInfo":
        return self._offer_job_info
