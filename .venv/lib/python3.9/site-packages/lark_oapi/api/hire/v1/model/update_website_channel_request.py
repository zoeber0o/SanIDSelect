# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .update_website_channel_request_body import UpdateWebsiteChannelRequestBody


class UpdateWebsiteChannelRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.website_id: Optional[str] = None
        self.channel_id: Optional[str] = None
        self.request_body: Optional[UpdateWebsiteChannelRequestBody] = None

    @staticmethod
    def builder() -> "UpdateWebsiteChannelRequestBuilder":
        return UpdateWebsiteChannelRequestBuilder()


class UpdateWebsiteChannelRequestBuilder(object):

    def __init__(self) -> None:
        update_website_channel_request = UpdateWebsiteChannelRequest()
        update_website_channel_request.http_method = HttpMethod.PUT
        update_website_channel_request.uri = "/open-apis/hire/v1/websites/:website_id/channels/:channel_id"
        update_website_channel_request.token_types = {AccessTokenType.TENANT}
        self._update_website_channel_request: UpdateWebsiteChannelRequest = update_website_channel_request

    def website_id(self, website_id: str) -> "UpdateWebsiteChannelRequestBuilder":
        self._update_website_channel_request.website_id = website_id
        self._update_website_channel_request.paths["website_id"] = str(website_id)
        return self

    def channel_id(self, channel_id: str) -> "UpdateWebsiteChannelRequestBuilder":
        self._update_website_channel_request.channel_id = channel_id
        self._update_website_channel_request.paths["channel_id"] = str(channel_id)
        return self

    def request_body(self, request_body: UpdateWebsiteChannelRequestBody) -> "UpdateWebsiteChannelRequestBuilder":
        self._update_website_channel_request.request_body = request_body
        self._update_website_channel_request.body = request_body
        return self

    def build(self) -> UpdateWebsiteChannelRequest:
        return self._update_website_channel_request
