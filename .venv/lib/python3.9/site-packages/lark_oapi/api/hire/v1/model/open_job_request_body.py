# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OpenJobRequestBody(object):
    _types = {
        "expiry_time": int,
        "is_never_expired": bool,
    }

    def __init__(self, d=None):
        self.expiry_time: Optional[int] = None
        self.is_never_expired: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OpenJobRequestBodyBuilder":
        return OpenJobRequestBodyBuilder()


class OpenJobRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._open_job_request_body = OpenJobRequestBody()

    def expiry_time(self, expiry_time: int) -> "OpenJobRequestBodyBuilder":
        self._open_job_request_body.expiry_time = expiry_time
        return self

    def is_never_expired(self, is_never_expired: bool) -> "OpenJobRequestBodyBuilder":
        self._open_job_request_body.is_never_expired = is_never_expired
        return self

    def build(self) -> "OpenJobRequestBody":
        return self._open_job_request_body
