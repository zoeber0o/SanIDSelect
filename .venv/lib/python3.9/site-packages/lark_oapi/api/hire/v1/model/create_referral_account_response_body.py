# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .account import Account


class CreateReferralAccountResponseBody(object):
    _types = {
        "account": Account,
    }

    def __init__(self, d=None):
        self.account: Optional[Account] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateReferralAccountResponseBodyBuilder":
        return CreateReferralAccountResponseBodyBuilder()


class CreateReferralAccountResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_referral_account_response_body = CreateReferralAccountResponseBody()

    def account(self, account: Account) -> "CreateReferralAccountResponseBodyBuilder":
        self._create_referral_account_response_body.account = account
        return self

    def build(self) -> "CreateReferralAccountResponseBody":
        return self._create_referral_account_response_body
