# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .application import Application


class GetApplicationResponseBody(object):
    _types = {
        "application": Application,
    }

    def __init__(self, d=None):
        self.application: Optional[Application] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetApplicationResponseBodyBuilder":
        return GetApplicationResponseBodyBuilder()


class GetApplicationResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_application_response_body = GetApplicationResponseBody()

    def application(self, application: Application) -> "GetApplicationResponseBodyBuilder":
        self._get_application_response_body.application = application
        return self

    def build(self) -> "GetApplicationResponseBody":
        return self._get_application_response_body
