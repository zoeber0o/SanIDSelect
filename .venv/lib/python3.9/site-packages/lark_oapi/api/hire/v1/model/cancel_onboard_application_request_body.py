# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class CancelOnboardApplicationRequestBody(object):
    _types = {
        "termination_type": int,
        "termination_reason_id_list": List[str],
        "termination_reason_notes": str,
    }

    def __init__(self, d=None):
        self.termination_type: Optional[int] = None
        self.termination_reason_id_list: Optional[List[str]] = None
        self.termination_reason_notes: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CancelOnboardApplicationRequestBodyBuilder":
        return CancelOnboardApplicationRequestBodyBuilder()


class CancelOnboardApplicationRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._cancel_onboard_application_request_body = CancelOnboardApplicationRequestBody()

    def termination_type(self, termination_type: int) -> "CancelOnboardApplicationRequestBodyBuilder":
        self._cancel_onboard_application_request_body.termination_type = termination_type
        return self

    def termination_reason_id_list(self, termination_reason_id_list: List[
        str]) -> "CancelOnboardApplicationRequestBodyBuilder":
        self._cancel_onboard_application_request_body.termination_reason_id_list = termination_reason_id_list
        return self

    def termination_reason_notes(self, termination_reason_notes: str) -> "CancelOnboardApplicationRequestBodyBuilder":
        self._cancel_onboard_application_request_body.termination_reason_notes = termination_reason_notes
        return self

    def build(self) -> "CancelOnboardApplicationRequestBody":
        return self._cancel_onboard_application_request_body
