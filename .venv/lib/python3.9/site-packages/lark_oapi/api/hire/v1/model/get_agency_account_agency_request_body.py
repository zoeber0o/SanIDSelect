# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class GetAgencyAccountAgencyRequestBody(object):
    _types = {
        "supplier_id": str,
        "status": int,
        "role": int,
    }

    def __init__(self, d=None):
        self.supplier_id: Optional[str] = None
        self.status: Optional[int] = None
        self.role: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetAgencyAccountAgencyRequestBodyBuilder":
        return GetAgencyAccountAgencyRequestBodyBuilder()


class GetAgencyAccountAgencyRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._get_agency_account_agency_request_body = GetAgencyAccountAgencyRequestBody()

    def supplier_id(self, supplier_id: str) -> "GetAgencyAccountAgencyRequestBodyBuilder":
        self._get_agency_account_agency_request_body.supplier_id = supplier_id
        return self

    def status(self, status: int) -> "GetAgencyAccountAgencyRequestBodyBuilder":
        self._get_agency_account_agency_request_body.status = status
        return self

    def role(self, role: int) -> "GetAgencyAccountAgencyRequestBodyBuilder":
        self._get_agency_account_agency_request_body.role = role
        return self

    def build(self) -> "GetAgencyAccountAgencyRequestBody":
        return self._get_agency_account_agency_request_body
