# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class BaseResp(object):
    _types = {
        "status_message": str,
        "status_code": int,
    }

    def __init__(self, d=None):
        self.status_message: Optional[str] = None
        self.status_code: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BaseRespBuilder":
        return BaseRespBuilder()


class BaseRespBuilder(object):
    def __init__(self) -> None:
        self._base_resp = BaseResp()

    def status_message(self, status_message: str) -> "BaseRespBuilder":
        self._base_resp.status_message = status_message
        return self

    def status_code(self, status_code: int) -> "BaseRespBuilder":
        self._base_resp.status_code = status_code
        return self

    def build(self) -> "BaseResp":
        return self._base_resp
