# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class CombinedUpdateTalentResponseBody(object):
    _types = {
        "talent_id": str,
        "operator_id": str,
        "operator_account_type": int,
    }

    def __init__(self, d=None):
        self.talent_id: Optional[str] = None
        self.operator_id: Optional[str] = None
        self.operator_account_type: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CombinedUpdateTalentResponseBodyBuilder":
        return CombinedUpdateTalentResponseBodyBuilder()


class CombinedUpdateTalentResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._combined_update_talent_response_body = CombinedUpdateTalentResponseBody()

    def talent_id(self, talent_id: str) -> "CombinedUpdateTalentResponseBodyBuilder":
        self._combined_update_talent_response_body.talent_id = talent_id
        return self

    def operator_id(self, operator_id: str) -> "CombinedUpdateTalentResponseBodyBuilder":
        self._combined_update_talent_response_body.operator_id = operator_id
        return self

    def operator_account_type(self, operator_account_type: int) -> "CombinedUpdateTalentResponseBodyBuilder":
        self._combined_update_talent_response_body.operator_account_type = operator_account_type
        return self

    def build(self) -> "CombinedUpdateTalentResponseBody":
        return self._combined_update_talent_response_body
