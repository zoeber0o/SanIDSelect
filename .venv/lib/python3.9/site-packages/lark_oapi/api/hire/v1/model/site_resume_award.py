# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class SiteResumeAward(object):
    _types = {
        "title": str,
        "award_time": str,
        "description": str,
    }

    def __init__(self, d=None):
        self.title: Optional[str] = None
        self.award_time: Optional[str] = None
        self.description: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SiteResumeAwardBuilder":
        return SiteResumeAwardBuilder()


class SiteResumeAwardBuilder(object):
    def __init__(self) -> None:
        self._site_resume_award = SiteResumeAward()

    def title(self, title: str) -> "SiteResumeAwardBuilder":
        self._site_resume_award.title = title
        return self

    def award_time(self, award_time: str) -> "SiteResumeAwardBuilder":
        self._site_resume_award.award_time = award_time
        return self

    def description(self, description: str) -> "SiteResumeAwardBuilder":
        self._site_resume_award.description = description
        return self

    def build(self) -> "SiteResumeAward":
        return self._site_resume_award
