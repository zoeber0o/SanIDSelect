# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class AmbassadorAccountInfo(object):
    _types = {
        "id": str,
        "name": str,
        "mobile_code": str,
        "mobile_number": str,
        "email_address": str,
        "remark": str,
        "related_school": str,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.name: Optional[str] = None
        self.mobile_code: Optional[str] = None
        self.mobile_number: Optional[str] = None
        self.email_address: Optional[str] = None
        self.remark: Optional[str] = None
        self.related_school: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "AmbassadorAccountInfoBuilder":
        return AmbassadorAccountInfoBuilder()


class AmbassadorAccountInfoBuilder(object):
    def __init__(self) -> None:
        self._ambassador_account_info = AmbassadorAccountInfo()

    def id(self, id: str) -> "AmbassadorAccountInfoBuilder":
        self._ambassador_account_info.id = id
        return self

    def name(self, name: str) -> "AmbassadorAccountInfoBuilder":
        self._ambassador_account_info.name = name
        return self

    def mobile_code(self, mobile_code: str) -> "AmbassadorAccountInfoBuilder":
        self._ambassador_account_info.mobile_code = mobile_code
        return self

    def mobile_number(self, mobile_number: str) -> "AmbassadorAccountInfoBuilder":
        self._ambassador_account_info.mobile_number = mobile_number
        return self

    def email_address(self, email_address: str) -> "AmbassadorAccountInfoBuilder":
        self._ambassador_account_info.email_address = email_address
        return self

    def remark(self, remark: str) -> "AmbassadorAccountInfoBuilder":
        self._ambassador_account_info.remark = remark
        return self

    def related_school(self, related_school: str) -> "AmbassadorAccountInfoBuilder":
        self._ambassador_account_info.related_school = related_school
        return self

    def build(self) -> "AmbassadorAccountInfo":
        return self._ambassador_account_info
