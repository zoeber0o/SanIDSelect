# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .attachment_info import AttachmentInfo


class GetInterviewRecordAttachmentResponseBody(object):
    _types = {
        "attachment": AttachmentInfo,
    }

    def __init__(self, d=None):
        self.attachment: Optional[AttachmentInfo] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetInterviewRecordAttachmentResponseBodyBuilder":
        return GetInterviewRecordAttachmentResponseBodyBuilder()


class GetInterviewRecordAttachmentResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_interview_record_attachment_response_body = GetInterviewRecordAttachmentResponseBody()

    def attachment(self, attachment: AttachmentInfo) -> "GetInterviewRecordAttachmentResponseBodyBuilder":
        self._get_interview_record_attachment_response_body.attachment = attachment
        return self

    def build(self) -> "GetInterviewRecordAttachmentResponseBody":
        return self._get_interview_record_attachment_response_body
