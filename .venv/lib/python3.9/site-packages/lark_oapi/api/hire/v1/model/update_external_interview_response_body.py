# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .external_interview import ExternalInterview


class UpdateExternalInterviewResponseBody(object):
    _types = {
        "external_interview": ExternalInterview,
    }

    def __init__(self, d=None):
        self.external_interview: Optional[ExternalInterview] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "UpdateExternalInterviewResponseBodyBuilder":
        return UpdateExternalInterviewResponseBodyBuilder()


class UpdateExternalInterviewResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._update_external_interview_response_body = UpdateExternalInterviewResponseBody()

    def external_interview(self, external_interview: ExternalInterview) -> "UpdateExternalInterviewResponseBodyBuilder":
        self._update_external_interview_response_body.external_interview = external_interview
        return self

    def build(self) -> "UpdateExternalInterviewResponseBody":
        return self._update_external_interview_response_body
