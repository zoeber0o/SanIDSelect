# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class JobConfigRoundType(object):
    _types = {
        "round_biz_id": str,
        "assessment_template_biz_id": str,
    }

    def __init__(self, d=None):
        self.round_biz_id: Optional[str] = None
        self.assessment_template_biz_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "JobConfigRoundTypeBuilder":
        return JobConfigRoundTypeBuilder()


class JobConfigRoundTypeBuilder(object):
    def __init__(self) -> None:
        self._job_config_round_type = JobConfigRoundType()

    def round_biz_id(self, round_biz_id: str) -> "JobConfigRoundTypeBuilder":
        self._job_config_round_type.round_biz_id = round_biz_id
        return self

    def assessment_template_biz_id(self, assessment_template_biz_id: str) -> "JobConfigRoundTypeBuilder":
        self._job_config_round_type.assessment_template_biz_id = assessment_template_biz_id
        return self

    def build(self) -> "JobConfigRoundType":
        return self._job_config_round_type
