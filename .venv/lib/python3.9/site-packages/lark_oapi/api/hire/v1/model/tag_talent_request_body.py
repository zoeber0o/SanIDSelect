# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class TagTalentRequestBody(object):
    _types = {
        "operation": int,
        "tag_id_list": List[str],
    }

    def __init__(self, d=None):
        self.operation: Optional[int] = None
        self.tag_id_list: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "TagTalentRequestBodyBuilder":
        return TagTalentRequestBodyBuilder()


class TagTalentRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._tag_talent_request_body = TagTalentRequestBody()

    def operation(self, operation: int) -> "TagTalentRequestBodyBuilder":
        self._tag_talent_request_body.operation = operation
        return self

    def tag_id_list(self, tag_id_list: List[str]) -> "TagTalentRequestBodyBuilder":
        self._tag_talent_request_body.tag_id_list = tag_id_list
        return self

    def build(self) -> "TagTalentRequestBody":
        return self._tag_talent_request_body
