# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OnboardStatusTalentRequestBody(object):
    _types = {
        "operation": int,
        "onboard_time": str,
        "overboard_time": str,
    }

    def __init__(self, d=None):
        self.operation: Optional[int] = None
        self.onboard_time: Optional[str] = None
        self.overboard_time: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OnboardStatusTalentRequestBodyBuilder":
        return OnboardStatusTalentRequestBodyBuilder()


class OnboardStatusTalentRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._onboard_status_talent_request_body = OnboardStatusTalentRequestBody()

    def operation(self, operation: int) -> "OnboardStatusTalentRequestBodyBuilder":
        self._onboard_status_talent_request_body.operation = operation
        return self

    def onboard_time(self, onboard_time: str) -> "OnboardStatusTalentRequestBodyBuilder":
        self._onboard_status_talent_request_body.onboard_time = onboard_time
        return self

    def overboard_time(self, overboard_time: str) -> "OnboardStatusTalentRequestBodyBuilder":
        self._onboard_status_talent_request_body.overboard_time = overboard_time
        return self

    def build(self) -> "OnboardStatusTalentRequestBody":
        return self._onboard_status_talent_request_body
