# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n import I18n


class AgencyBasicInfo(object):
    _types = {
        "hunter_user_name": I18n,
        "hunter_company_name": str,
    }

    def __init__(self, d=None):
        self.hunter_user_name: Optional[I18n] = None
        self.hunter_company_name: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "AgencyBasicInfoBuilder":
        return AgencyBasicInfoBuilder()


class AgencyBasicInfoBuilder(object):
    def __init__(self) -> None:
        self._agency_basic_info = AgencyBasicInfo()

    def hunter_user_name(self, hunter_user_name: I18n) -> "AgencyBasicInfoBuilder":
        self._agency_basic_info.hunter_user_name = hunter_user_name
        return self

    def hunter_company_name(self, hunter_company_name: str) -> "AgencyBasicInfoBuilder":
        self._agency_basic_info.hunter_company_name = hunter_company_name
        return self

    def build(self) -> "AgencyBasicInfo":
        return self._agency_basic_info
