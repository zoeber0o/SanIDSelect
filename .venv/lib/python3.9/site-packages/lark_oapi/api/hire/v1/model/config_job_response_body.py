# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .job_config_result import JobConfigResult


class ConfigJobResponseBody(object):
    _types = {
        "job_config": JobConfigResult,
    }

    def __init__(self, d=None):
        self.job_config: Optional[JobConfigResult] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ConfigJobResponseBodyBuilder":
        return ConfigJobResponseBodyBuilder()


class ConfigJobResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._config_job_response_body = ConfigJobResponseBody()

    def job_config(self, job_config: JobConfigResult) -> "ConfigJobResponseBodyBuilder":
        self._config_job_response_body.job_config = job_config
        return self

    def build(self) -> "ConfigJobResponseBody":
        return self._config_job_response_body
