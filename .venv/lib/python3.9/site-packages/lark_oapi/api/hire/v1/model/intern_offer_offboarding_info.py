# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class InternOfferOffboardingInfo(object):
    _types = {
        "actual_offboarding_date": str,
        "notes": str,
    }

    def __init__(self, d=None):
        self.actual_offboarding_date: Optional[str] = None
        self.notes: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "InternOfferOffboardingInfoBuilder":
        return InternOfferOffboardingInfoBuilder()


class InternOfferOffboardingInfoBuilder(object):
    def __init__(self) -> None:
        self._intern_offer_offboarding_info = InternOfferOffboardingInfo()

    def actual_offboarding_date(self, actual_offboarding_date: str) -> "InternOfferOffboardingInfoBuilder":
        self._intern_offer_offboarding_info.actual_offboarding_date = actual_offboarding_date
        return self

    def notes(self, notes: str) -> "InternOfferOffboardingInfoBuilder":
        self._intern_offer_offboarding_info.notes = notes
        return self

    def build(self) -> "InternOfferOffboardingInfo":
        return self._intern_offer_offboarding_info
