# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n import I18n
from .job_department_simple import JobDepartmentSimple
from .common_address import CommonAddress
from .job_user_info import JobUserInfo
from .i18n import I18n


class JobStorefront(object):
    _types = {
        "id": str,
        "name": I18n,
        "active_status": int,
        "department": JobDepartmentSimple,
        "address": CommonAddress,
        "manager": JobUserInfo,
        "create_time": str,
        "remark": I18n,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.name: Optional[I18n] = None
        self.active_status: Optional[int] = None
        self.department: Optional[JobDepartmentSimple] = None
        self.address: Optional[CommonAddress] = None
        self.manager: Optional[JobUserInfo] = None
        self.create_time: Optional[str] = None
        self.remark: Optional[I18n] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "JobStorefrontBuilder":
        return JobStorefrontBuilder()


class JobStorefrontBuilder(object):
    def __init__(self) -> None:
        self._job_storefront = JobStorefront()

    def id(self, id: str) -> "JobStorefrontBuilder":
        self._job_storefront.id = id
        return self

    def name(self, name: I18n) -> "JobStorefrontBuilder":
        self._job_storefront.name = name
        return self

    def active_status(self, active_status: int) -> "JobStorefrontBuilder":
        self._job_storefront.active_status = active_status
        return self

    def department(self, department: JobDepartmentSimple) -> "JobStorefrontBuilder":
        self._job_storefront.department = department
        return self

    def address(self, address: CommonAddress) -> "JobStorefrontBuilder":
        self._job_storefront.address = address
        return self

    def manager(self, manager: JobUserInfo) -> "JobStorefrontBuilder":
        self._job_storefront.manager = manager
        return self

    def create_time(self, create_time: str) -> "JobStorefrontBuilder":
        self._job_storefront.create_time = create_time
        return self

    def remark(self, remark: I18n) -> "JobStorefrontBuilder":
        self._job_storefront.remark = remark
        return self

    def build(self) -> "JobStorefront":
        return self._job_storefront
