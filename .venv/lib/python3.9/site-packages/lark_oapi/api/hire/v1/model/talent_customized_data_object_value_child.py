# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class TalentCustomizedDataObjectValueChild(object):
    _types = {
        "object_id": str,
        "value": str,
    }

    def __init__(self, d=None):
        self.object_id: Optional[str] = None
        self.value: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "TalentCustomizedDataObjectValueChildBuilder":
        return TalentCustomizedDataObjectValueChildBuilder()


class TalentCustomizedDataObjectValueChildBuilder(object):
    def __init__(self) -> None:
        self._talent_customized_data_object_value_child = TalentCustomizedDataObjectValueChild()

    def object_id(self, object_id: str) -> "TalentCustomizedDataObjectValueChildBuilder":
        self._talent_customized_data_object_value_child.object_id = object_id
        return self

    def value(self, value: str) -> "TalentCustomizedDataObjectValueChildBuilder":
        self._talent_customized_data_object_value_child.value = value
        return self

    def build(self) -> "TalentCustomizedDataObjectValueChild":
        return self._talent_customized_data_object_value_child
