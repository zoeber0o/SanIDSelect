# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .job_manager import JobManager


class BatchUpdateJobManagerResponseBody(object):
    _types = {
        "job_manager": JobManager,
    }

    def __init__(self, d=None):
        self.job_manager: Optional[JobManager] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchUpdateJobManagerResponseBodyBuilder":
        return BatchUpdateJobManagerResponseBodyBuilder()


class BatchUpdateJobManagerResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_update_job_manager_response_body = BatchUpdateJobManagerResponseBody()

    def job_manager(self, job_manager: JobManager) -> "BatchUpdateJobManagerResponseBodyBuilder":
        self._batch_update_job_manager_response_body.job_manager = job_manager
        return self

    def build(self) -> "BatchUpdateJobManagerResponseBody":
        return self._batch_update_job_manager_response_body
