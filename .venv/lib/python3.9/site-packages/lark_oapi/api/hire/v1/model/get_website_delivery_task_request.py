# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class GetWebsiteDeliveryTaskRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.website_id: Optional[str] = None
        self.delivery_task_id: Optional[str] = None

    @staticmethod
    def builder() -> "GetWebsiteDeliveryTaskRequestBuilder":
        return GetWebsiteDeliveryTaskRequestBuilder()


class GetWebsiteDeliveryTaskRequestBuilder(object):

    def __init__(self) -> None:
        get_website_delivery_task_request = GetWebsiteDeliveryTaskRequest()
        get_website_delivery_task_request.http_method = HttpMethod.GET
        get_website_delivery_task_request.uri = "/open-apis/hire/v1/websites/:website_id/delivery_tasks/:delivery_task_id"
        get_website_delivery_task_request.token_types = {AccessTokenType.TENANT}
        self._get_website_delivery_task_request: GetWebsiteDeliveryTaskRequest = get_website_delivery_task_request

    def website_id(self, website_id: str) -> "GetWebsiteDeliveryTaskRequestBuilder":
        self._get_website_delivery_task_request.website_id = website_id
        self._get_website_delivery_task_request.paths["website_id"] = str(website_id)
        return self

    def delivery_task_id(self, delivery_task_id: str) -> "GetWebsiteDeliveryTaskRequestBuilder":
        self._get_website_delivery_task_request.delivery_task_id = delivery_task_id
        self._get_website_delivery_task_request.paths["delivery_task_id"] = str(delivery_task_id)
        return self

    def build(self) -> GetWebsiteDeliveryTaskRequest:
        return self._get_website_delivery_task_request
