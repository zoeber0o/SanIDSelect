# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .talent_batch_info import TalentBatchInfo


class BatchGetIdTalentResponseBody(object):
    _types = {
        "talent_list": List[TalentBatchInfo],
    }

    def __init__(self, d=None):
        self.talent_list: Optional[List[TalentBatchInfo]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchGetIdTalentResponseBodyBuilder":
        return BatchGetIdTalentResponseBodyBuilder()


class BatchGetIdTalentResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_get_id_talent_response_body = BatchGetIdTalentResponseBody()

    def talent_list(self, talent_list: List[TalentBatchInfo]) -> "BatchGetIdTalentResponseBodyBuilder":
        self._batch_get_id_talent_response_body.talent_list = talent_list
        return self

    def build(self) -> "BatchGetIdTalentResponseBody":
        return self._batch_get_id_talent_response_body
