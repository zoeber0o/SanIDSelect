# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .talent_interview import TalentInterview


class GetByTalentInterviewResponseBody(object):
    _types = {
        "items": List[TalentInterview],
    }

    def __init__(self, d=None):
        self.items: Optional[List[TalentInterview]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetByTalentInterviewResponseBodyBuilder":
        return GetByTalentInterviewResponseBodyBuilder()


class GetByTalentInterviewResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_by_talent_interview_response_body = GetByTalentInterviewResponseBody()

    def items(self, items: List[TalentInterview]) -> "GetByTalentInterviewResponseBodyBuilder":
        self._get_by_talent_interview_response_body.items = items
        return self

    def build(self) -> "GetByTalentInterviewResponseBody":
        return self._get_by_talent_interview_response_body
