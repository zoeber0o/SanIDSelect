# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class ListUserRoleRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.page_token: Optional[str] = None
        self.page_size: Optional[int] = None
        self.user_id: Optional[str] = None
        self.role_id: Optional[str] = None
        self.update_start_time: Optional[int] = None
        self.update_end_time: Optional[int] = None
        self.user_id_type: Optional[str] = None

    @staticmethod
    def builder() -> "ListUserRoleRequestBuilder":
        return ListUserRoleRequestBuilder()


class ListUserRoleRequestBuilder(object):

    def __init__(self) -> None:
        list_user_role_request = ListUserRoleRequest()
        list_user_role_request.http_method = HttpMethod.GET
        list_user_role_request.uri = "/open-apis/hire/v1/user_roles"
        list_user_role_request.token_types = {AccessTokenType.TENANT}
        self._list_user_role_request: ListUserRoleRequest = list_user_role_request

    def page_token(self, page_token: str) -> "ListUserRoleRequestBuilder":
        self._list_user_role_request.page_token = page_token
        self._list_user_role_request.add_query("page_token", page_token)
        return self

    def page_size(self, page_size: int) -> "ListUserRoleRequestBuilder":
        self._list_user_role_request.page_size = page_size
        self._list_user_role_request.add_query("page_size", page_size)
        return self

    def user_id(self, user_id: str) -> "ListUserRoleRequestBuilder":
        self._list_user_role_request.user_id = user_id
        self._list_user_role_request.add_query("user_id", user_id)
        return self

    def role_id(self, role_id: str) -> "ListUserRoleRequestBuilder":
        self._list_user_role_request.role_id = role_id
        self._list_user_role_request.add_query("role_id", role_id)
        return self

    def update_start_time(self, update_start_time: int) -> "ListUserRoleRequestBuilder":
        self._list_user_role_request.update_start_time = update_start_time
        self._list_user_role_request.add_query("update_start_time", update_start_time)
        return self

    def update_end_time(self, update_end_time: int) -> "ListUserRoleRequestBuilder":
        self._list_user_role_request.update_end_time = update_end_time
        self._list_user_role_request.add_query("update_end_time", update_end_time)
        return self

    def user_id_type(self, user_id_type: str) -> "ListUserRoleRequestBuilder":
        self._list_user_role_request.user_id_type = user_id_type
        self._list_user_role_request.add_query("user_id_type", user_id_type)
        return self

    def build(self) -> ListUserRoleRequest:
        return self._list_user_role_request
