# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ProtectAgencyRequestBody(object):
    _types = {
        "talent_id": str,
        "supplier_id": str,
        "consultant_id": str,
        "protect_create_time": int,
        "protect_expire_time": int,
        "comment": str,
        "current_salary": str,
        "expected_salary": str,
    }

    def __init__(self, d=None):
        self.talent_id: Optional[str] = None
        self.supplier_id: Optional[str] = None
        self.consultant_id: Optional[str] = None
        self.protect_create_time: Optional[int] = None
        self.protect_expire_time: Optional[int] = None
        self.comment: Optional[str] = None
        self.current_salary: Optional[str] = None
        self.expected_salary: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ProtectAgencyRequestBodyBuilder":
        return ProtectAgencyRequestBodyBuilder()


class ProtectAgencyRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._protect_agency_request_body = ProtectAgencyRequestBody()

    def talent_id(self, talent_id: str) -> "ProtectAgencyRequestBodyBuilder":
        self._protect_agency_request_body.talent_id = talent_id
        return self

    def supplier_id(self, supplier_id: str) -> "ProtectAgencyRequestBodyBuilder":
        self._protect_agency_request_body.supplier_id = supplier_id
        return self

    def consultant_id(self, consultant_id: str) -> "ProtectAgencyRequestBodyBuilder":
        self._protect_agency_request_body.consultant_id = consultant_id
        return self

    def protect_create_time(self, protect_create_time: int) -> "ProtectAgencyRequestBodyBuilder":
        self._protect_agency_request_body.protect_create_time = protect_create_time
        return self

    def protect_expire_time(self, protect_expire_time: int) -> "ProtectAgencyRequestBodyBuilder":
        self._protect_agency_request_body.protect_expire_time = protect_expire_time
        return self

    def comment(self, comment: str) -> "ProtectAgencyRequestBodyBuilder":
        self._protect_agency_request_body.comment = comment
        return self

    def current_salary(self, current_salary: str) -> "ProtectAgencyRequestBodyBuilder":
        self._protect_agency_request_body.current_salary = current_salary
        return self

    def expected_salary(self, expected_salary: str) -> "ProtectAgencyRequestBodyBuilder":
        self._protect_agency_request_body.expected_salary = expected_salary
        return self

    def build(self) -> "ProtectAgencyRequestBody":
        return self._protect_agency_request_body
