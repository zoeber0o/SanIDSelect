# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .site_job_post import SiteJobPost


class SiteJobPostSearchInfo(object):
    _types = {
        "job_post_info": List[SiteJobPost],
        "count": int,
    }

    def __init__(self, d=None):
        self.job_post_info: Optional[List[SiteJobPost]] = None
        self.count: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SiteJobPostSearchInfoBuilder":
        return SiteJobPostSearchInfoBuilder()


class SiteJobPostSearchInfoBuilder(object):
    def __init__(self) -> None:
        self._site_job_post_search_info = SiteJobPostSearchInfo()

    def job_post_info(self, job_post_info: List[SiteJobPost]) -> "SiteJobPostSearchInfoBuilder":
        self._site_job_post_search_info.job_post_info = job_post_info
        return self

    def count(self, count: int) -> "SiteJobPostSearchInfoBuilder":
        self._site_job_post_search_info.count = count
        return self

    def build(self) -> "SiteJobPostSearchInfo":
        return self._site_job_post_search_info
