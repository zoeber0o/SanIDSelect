# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .interview_round_type import InterviewRoundType


class ListInterviewRoundTypeResponseBody(object):
    _types = {
        "active_status": int,
        "items": List[InterviewRoundType],
    }

    def __init__(self, d=None):
        self.active_status: Optional[int] = None
        self.items: Optional[List[InterviewRoundType]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ListInterviewRoundTypeResponseBodyBuilder":
        return ListInterviewRoundTypeResponseBodyBuilder()


class ListInterviewRoundTypeResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._list_interview_round_type_response_body = ListInterviewRoundTypeResponseBody()

    def active_status(self, active_status: int) -> "ListInterviewRoundTypeResponseBodyBuilder":
        self._list_interview_round_type_response_body.active_status = active_status
        return self

    def items(self, items: List[InterviewRoundType]) -> "ListInterviewRoundTypeResponseBodyBuilder":
        self._list_interview_round_type_response_body.items = items
        return self

    def build(self) -> "ListInterviewRoundTypeResponseBody":
        return self._list_interview_round_type_response_body
