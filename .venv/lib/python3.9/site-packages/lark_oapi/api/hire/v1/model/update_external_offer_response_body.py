# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .external_offer import ExternalOffer


class UpdateExternalOfferResponseBody(object):
    _types = {
        "external_offer": ExternalOffer,
    }

    def __init__(self, d=None):
        self.external_offer: Optional[ExternalOffer] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "UpdateExternalOfferResponseBodyBuilder":
        return UpdateExternalOfferResponseBodyBuilder()


class UpdateExternalOfferResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._update_external_offer_response_body = UpdateExternalOfferResponseBody()

    def external_offer(self, external_offer: ExternalOffer) -> "UpdateExternalOfferResponseBodyBuilder":
        self._update_external_offer_response_body.external_offer = external_offer
        return self

    def build(self) -> "UpdateExternalOfferResponseBody":
        return self._update_external_offer_response_body
