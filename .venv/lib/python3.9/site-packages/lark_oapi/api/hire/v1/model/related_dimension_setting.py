# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class RelatedDimensionSetting(object):
    _types = {
        "dimension_id": str,
        "related_operator_type": int,
        "dimension_option_ids": List[str],
    }

    def __init__(self, d=None):
        self.dimension_id: Optional[str] = None
        self.related_operator_type: Optional[int] = None
        self.dimension_option_ids: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RelatedDimensionSettingBuilder":
        return RelatedDimensionSettingBuilder()


class RelatedDimensionSettingBuilder(object):
    def __init__(self) -> None:
        self._related_dimension_setting = RelatedDimensionSetting()

    def dimension_id(self, dimension_id: str) -> "RelatedDimensionSettingBuilder":
        self._related_dimension_setting.dimension_id = dimension_id
        return self

    def related_operator_type(self, related_operator_type: int) -> "RelatedDimensionSettingBuilder":
        self._related_dimension_setting.related_operator_type = related_operator_type
        return self

    def dimension_option_ids(self, dimension_option_ids: List[str]) -> "RelatedDimensionSettingBuilder":
        self._related_dimension_setting.dimension_option_ids = dimension_option_ids
        return self

    def build(self) -> "RelatedDimensionSetting":
        return self._related_dimension_setting
