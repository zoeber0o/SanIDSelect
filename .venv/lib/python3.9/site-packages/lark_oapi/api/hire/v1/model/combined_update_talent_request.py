# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .combined_update_talent_request_body import CombinedUpdateTalentRequestBody


class CombinedUpdateTalentRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.user_id_type: Optional[str] = None
        self.request_body: Optional[CombinedUpdateTalentRequestBody] = None

    @staticmethod
    def builder() -> "CombinedUpdateTalentRequestBuilder":
        return CombinedUpdateTalentRequestBuilder()


class CombinedUpdateTalentRequestBuilder(object):

    def __init__(self) -> None:
        combined_update_talent_request = CombinedUpdateTalentRequest()
        combined_update_talent_request.http_method = HttpMethod.POST
        combined_update_talent_request.uri = "/open-apis/hire/v1/talents/combined_update"
        combined_update_talent_request.token_types = {AccessTokenType.TENANT}
        self._combined_update_talent_request: CombinedUpdateTalentRequest = combined_update_talent_request

    def user_id_type(self, user_id_type: str) -> "CombinedUpdateTalentRequestBuilder":
        self._combined_update_talent_request.user_id_type = user_id_type
        self._combined_update_talent_request.add_query("user_id_type", user_id_type)
        return self

    def request_body(self, request_body: CombinedUpdateTalentRequestBody) -> "CombinedUpdateTalentRequestBuilder":
        self._combined_update_talent_request.request_body = request_body
        self._combined_update_talent_request.body = request_body
        return self

    def build(self) -> CombinedUpdateTalentRequest:
        return self._combined_update_talent_request
