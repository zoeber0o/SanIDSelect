# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .lump_sum_payment_for_create import LumpSumPaymentForCreate


class BatchCreateLumpSumPaymentRequestBody(object):
    _types = {
        "records": List[LumpSumPaymentForCreate],
    }

    def __init__(self, d=None):
        self.records: Optional[List[LumpSumPaymentForCreate]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchCreateLumpSumPaymentRequestBodyBuilder":
        return BatchCreateLumpSumPaymentRequestBodyBuilder()


class BatchCreateLumpSumPaymentRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_create_lump_sum_payment_request_body = BatchCreateLumpSumPaymentRequestBody()

    def records(self, records: List[LumpSumPaymentForCreate]) -> "BatchCreateLumpSumPaymentRequestBodyBuilder":
        self._batch_create_lump_sum_payment_request_body.records = records
        return self

    def build(self) -> "BatchCreateLumpSumPaymentRequestBody":
        return self._batch_create_lump_sum_payment_request_body
