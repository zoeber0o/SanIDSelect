# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .recurring_payment_for_update import RecurringPaymentForUpdate


class BatchUpdateRecurringPaymentRequestBody(object):
    _types = {
        "records": List[RecurringPaymentForUpdate],
    }

    def __init__(self, d=None):
        self.records: Optional[List[RecurringPaymentForUpdate]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchUpdateRecurringPaymentRequestBodyBuilder":
        return BatchUpdateRecurringPaymentRequestBodyBuilder()


class BatchUpdateRecurringPaymentRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_update_recurring_payment_request_body = BatchUpdateRecurringPaymentRequestBody()

    def records(self, records: List[RecurringPaymentForUpdate]) -> "BatchUpdateRecurringPaymentRequestBodyBuilder":
        self._batch_update_recurring_payment_request_body.records = records
        return self

    def build(self) -> "BatchUpdateRecurringPaymentRequestBody":
        return self._batch_update_recurring_payment_request_body
