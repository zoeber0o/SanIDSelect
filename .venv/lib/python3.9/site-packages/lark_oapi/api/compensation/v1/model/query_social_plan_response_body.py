# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .social_plan import SocialPlan


class QuerySocialPlanResponseBody(object):
    _types = {
        "plans": List[SocialPlan],
    }

    def __init__(self, d=None):
        self.plans: Optional[List[SocialPlan]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QuerySocialPlanResponseBodyBuilder":
        return QuerySocialPlanResponseBodyBuilder()


class QuerySocialPlanResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._query_social_plan_response_body = QuerySocialPlanResponseBody()

    def plans(self, plans: List[SocialPlan]) -> "QuerySocialPlanResponseBodyBuilder":
        self._query_social_plan_response_body.plans = plans
        return self

    def build(self) -> "QuerySocialPlanResponseBody":
        return self._query_social_plan_response_body
