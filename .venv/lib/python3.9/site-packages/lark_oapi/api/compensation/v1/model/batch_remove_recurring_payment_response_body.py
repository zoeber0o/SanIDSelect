# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .recurring_payment_operate_result import RecurringPaymentOperateResult


class BatchRemoveRecurringPaymentResponseBody(object):
    _types = {
        "operate_results": List[RecurringPaymentOperateResult],
    }

    def __init__(self, d=None):
        self.operate_results: Optional[List[RecurringPaymentOperateResult]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchRemoveRecurringPaymentResponseBodyBuilder":
        return BatchRemoveRecurringPaymentResponseBodyBuilder()


class BatchRemoveRecurringPaymentResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_remove_recurring_payment_response_body = BatchRemoveRecurringPaymentResponseBody()

    def operate_results(self, operate_results: List[
        RecurringPaymentOperateResult]) -> "BatchRemoveRecurringPaymentResponseBodyBuilder":
        self._batch_remove_recurring_payment_response_body.operate_results = operate_results
        return self

    def build(self) -> "BatchRemoveRecurringPaymentResponseBody":
        return self._batch_remove_recurring_payment_response_body
