# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .vehicle_entity import VehicleEntity


class VehicleLicense(object):
    _types = {
        "entities": List[VehicleEntity],
    }

    def __init__(self, d=None):
        self.entities: Optional[List[VehicleEntity]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "VehicleLicenseBuilder":
        return VehicleLicenseBuilder()


class VehicleLicenseBuilder(object):
    def __init__(self) -> None:
        self._vehicle_license = VehicleLicense()

    def entities(self, entities: List[VehicleEntity]) -> "VehicleLicenseBuilder":
        self._vehicle_license.entities = entities
        return self

    def build(self) -> "VehicleLicense":
        return self._vehicle_license
