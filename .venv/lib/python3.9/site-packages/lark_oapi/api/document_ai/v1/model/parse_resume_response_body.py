# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .resume import Resume


class ParseResumeResponseBody(object):
    _types = {
        "resumes": List[Resume],
    }

    def __init__(self, d=None):
        self.resumes: Optional[List[Resume]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ParseResumeResponseBodyBuilder":
        return ParseResumeResponseBodyBuilder()


class ParseResumeResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._parse_resume_response_body = ParseResumeResponseBody()

    def resumes(self, resumes: List[Resume]) -> "ParseResumeResponseBodyBuilder":
        self._parse_resume_response_body.resumes = resumes
        return self

    def build(self) -> "ParseResumeResponseBody":
        return self._parse_resume_response_body
