# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .health_certificate import HealthCertificate


class RecognizeHealthCertificateResponseBody(object):
    _types = {
        "health_certificate": HealthCertificate,
    }

    def __init__(self, d=None):
        self.health_certificate: Optional[HealthCertificate] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RecognizeHealthCertificateResponseBodyBuilder":
        return RecognizeHealthCertificateResponseBodyBuilder()


class RecognizeHealthCertificateResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._recognize_health_certificate_response_body = RecognizeHealthCertificateResponseBody()

    def health_certificate(self,
                           health_certificate: HealthCertificate) -> "RecognizeHealthCertificateResponseBodyBuilder":
        self._recognize_health_certificate_response_body.health_certificate = health_certificate
        return self

    def build(self) -> "RecognizeHealthCertificateResponseBody":
        return self._recognize_health_certificate_response_body
