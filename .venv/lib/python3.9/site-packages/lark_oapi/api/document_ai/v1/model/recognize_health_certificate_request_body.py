# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class RecognizeHealthCertificateRequestBody(object):
    _types = {
        "file": IO[Any],
    }

    def __init__(self, d=None):
        self.file: Optional[IO[Any]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RecognizeHealthCertificateRequestBodyBuilder":
        return RecognizeHealthCertificateRequestBodyBuilder()


class RecognizeHealthCertificateRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._recognize_health_certificate_request_body = RecognizeHealthCertificateRequestBody()

    def file(self, file: IO[Any]) -> "RecognizeHealthCertificateRequestBodyBuilder":
        self._recognize_health_certificate_request_body.file = file
        return self

    def build(self) -> "RecognizeHealthCertificateRequestBody":
        return self._recognize_health_certificate_request_body
