# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .chinese_passport import ChinesePassport


class RecognizeChinesePassportResponseBody(object):
    _types = {
        "chinese_passport": ChinesePassport,
    }

    def __init__(self, d=None):
        self.chinese_passport: Optional[ChinesePassport] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RecognizeChinesePassportResponseBodyBuilder":
        return RecognizeChinesePassportResponseBodyBuilder()


class RecognizeChinesePassportResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._recognize_chinese_passport_response_body = RecognizeChinesePassportResponseBody()

    def chinese_passport(self, chinese_passport: ChinesePassport) -> "RecognizeChinesePassportResponseBodyBuilder":
        self._recognize_chinese_passport_response_body.chinese_passport = chinese_passport
        return self

    def build(self) -> "RecognizeChinesePassportResponseBody":
        return self._recognize_chinese_passport_response_body
