# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class GetMinuteMediaRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.minute_token: Optional[str] = None

    @staticmethod
    def builder() -> "GetMinuteMediaRequestBuilder":
        return GetMinuteMediaRequestBuilder()


class GetMinuteMediaRequestBuilder(object):

    def __init__(self) -> None:
        get_minute_media_request = GetMinuteMediaRequest()
        get_minute_media_request.http_method = HttpMethod.GET
        get_minute_media_request.uri = "/open-apis/minutes/v1/minutes/:minute_token/media"
        get_minute_media_request.token_types = {AccessTokenType.TENANT, AccessTokenType.USER}
        self._get_minute_media_request: GetMinuteMediaRequest = get_minute_media_request

    def minute_token(self, minute_token: str) -> "GetMinuteMediaRequestBuilder":
        self._get_minute_media_request.minute_token = minute_token
        self._get_minute_media_request.paths["minute_token"] = str(minute_token)
        return self

    def build(self) -> GetMinuteMediaRequest:
        return self._get_minute_media_request
