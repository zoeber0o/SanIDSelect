# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class GetMinuteRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.user_id_type: Optional[str] = None
        self.minute_token: Optional[str] = None

    @staticmethod
    def builder() -> "GetMinuteRequestBuilder":
        return GetMinuteRequestBuilder()


class GetMinuteRequestBuilder(object):

    def __init__(self) -> None:
        get_minute_request = GetMinuteRequest()
        get_minute_request.http_method = HttpMethod.GET
        get_minute_request.uri = "/open-apis/minutes/v1/minutes/:minute_token"
        get_minute_request.token_types = {AccessTokenType.TENANT, AccessTokenType.USER}
        self._get_minute_request: GetMinuteRequest = get_minute_request

    def user_id_type(self, user_id_type: str) -> "GetMinuteRequestBuilder":
        self._get_minute_request.user_id_type = user_id_type
        self._get_minute_request.add_query("user_id_type", user_id_type)
        return self

    def minute_token(self, minute_token: str) -> "GetMinuteRequestBuilder":
        self._get_minute_request.minute_token = minute_token
        self._get_minute_request.paths["minute_token"] = str(minute_token)
        return self

    def build(self) -> GetMinuteRequest:
        return self._get_minute_request
