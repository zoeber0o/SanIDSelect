# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user_view_detail import UserViewDetail


class Statictics(object):
    _types = {
        "user_view_count": str,
        "page_view_count": str,
        "user_view_list": List[UserViewDetail],
    }

    def __init__(self, d=None):
        self.user_view_count: Optional[str] = None
        self.page_view_count: Optional[str] = None
        self.user_view_list: Optional[List[UserViewDetail]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "StaticticsBuilder":
        return StaticticsBuilder()


class StaticticsBuilder(object):
    def __init__(self) -> None:
        self._statictics = Statictics()

    def user_view_count(self, user_view_count: str) -> "StaticticsBuilder":
        self._statictics.user_view_count = user_view_count
        return self

    def page_view_count(self, page_view_count: str) -> "StaticticsBuilder":
        self._statictics.page_view_count = page_view_count
        return self

    def user_view_list(self, user_view_list: List[UserViewDetail]) -> "StaticticsBuilder":
        self._statictics.user_view_list = user_view_list
        return self

    def build(self) -> "Statictics":
        return self._statictics
