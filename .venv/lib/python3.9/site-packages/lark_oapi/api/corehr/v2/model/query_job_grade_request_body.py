# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class QueryJobGradeRequestBody(object):
    _types = {
        "ids": List[str],
        "codes": List[str],
        "active": bool,
    }

    def __init__(self, d=None):
        self.ids: Optional[List[str]] = None
        self.codes: Optional[List[str]] = None
        self.active: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryJobGradeRequestBodyBuilder":
        return QueryJobGradeRequestBodyBuilder()


class QueryJobGradeRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._query_job_grade_request_body = QueryJobGradeRequestBody()

    def ids(self, ids: List[str]) -> "QueryJobGradeRequestBodyBuilder":
        self._query_job_grade_request_body.ids = ids
        return self

    def codes(self, codes: List[str]) -> "QueryJobGradeRequestBodyBuilder":
        self._query_job_grade_request_body.codes = codes
        return self

    def active(self, active: bool) -> "QueryJobGradeRequestBodyBuilder":
        self._query_job_grade_request_body.active = active
        return self

    def build(self) -> "QueryJobGradeRequestBody":
        return self._query_job_grade_request_body
