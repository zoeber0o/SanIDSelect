# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class WorkEmailCheckResult(object):
    _types = {
        "work_email": str,
        "success": bool,
    }

    def __init__(self, d=None):
        self.work_email: Optional[str] = None
        self.success: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "WorkEmailCheckResultBuilder":
        return WorkEmailCheckResultBuilder()


class WorkEmailCheckResultBuilder(object):
    def __init__(self) -> None:
        self._work_email_check_result = WorkEmailCheckResult()

    def work_email(self, work_email: str) -> "WorkEmailCheckResultBuilder":
        self._work_email_check_result.work_email = work_email
        return self

    def success(self, success: bool) -> "WorkEmailCheckResultBuilder":
        self._work_email_check_result.success = success
        return self

    def build(self) -> "WorkEmailCheckResult":
        return self._work_email_check_result
