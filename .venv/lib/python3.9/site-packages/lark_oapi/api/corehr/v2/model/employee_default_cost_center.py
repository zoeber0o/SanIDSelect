# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .employment_default_cost_center import EmploymentDefaultCostCenter


class EmployeeDefaultCostCenter(object):
    _types = {
        "employment_id": str,
        "default_cost_centers": List[EmploymentDefaultCostCenter],
    }

    def __init__(self, d=None):
        self.employment_id: Optional[str] = None
        self.default_cost_centers: Optional[List[EmploymentDefaultCostCenter]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "EmployeeDefaultCostCenterBuilder":
        return EmployeeDefaultCostCenterBuilder()


class EmployeeDefaultCostCenterBuilder(object):
    def __init__(self) -> None:
        self._employee_default_cost_center = EmployeeDefaultCostCenter()

    def employment_id(self, employment_id: str) -> "EmployeeDefaultCostCenterBuilder":
        self._employee_default_cost_center.employment_id = employment_id
        return self

    def default_cost_centers(self, default_cost_centers: List[
        EmploymentDefaultCostCenter]) -> "EmployeeDefaultCostCenterBuilder":
        self._employee_default_cost_center.default_cost_centers = default_cost_centers
        return self

    def build(self) -> "EmployeeDefaultCostCenter":
        return self._employee_default_cost_center
