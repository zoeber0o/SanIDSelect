# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OpenQueryDepartmentChangeListByIdsApprovalGroupsRequestBody(object):
    _types = {
        "department_change_ids": List[str],
        "need_department_path": bool,
    }

    def __init__(self, d=None):
        self.department_change_ids: Optional[List[str]] = None
        self.need_department_path: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OpenQueryDepartmentChangeListByIdsApprovalGroupsRequestBodyBuilder":
        return OpenQueryDepartmentChangeListByIdsApprovalGroupsRequestBodyBuilder()


class OpenQueryDepartmentChangeListByIdsApprovalGroupsRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._open_query_department_change_list_by_ids_approval_groups_request_body = OpenQueryDepartmentChangeListByIdsApprovalGroupsRequestBody()

    def department_change_ids(self, department_change_ids: List[
        str]) -> "OpenQueryDepartmentChangeListByIdsApprovalGroupsRequestBodyBuilder":
        self._open_query_department_change_list_by_ids_approval_groups_request_body.department_change_ids = department_change_ids
        return self

    def need_department_path(self,
                             need_department_path: bool) -> "OpenQueryDepartmentChangeListByIdsApprovalGroupsRequestBodyBuilder":
        self._open_query_department_change_list_by_ids_approval_groups_request_body.need_department_path = need_department_path
        return self

    def build(self) -> "OpenQueryDepartmentChangeListByIdsApprovalGroupsRequestBody":
        return self._open_query_department_change_list_by_ids_approval_groups_request_body
