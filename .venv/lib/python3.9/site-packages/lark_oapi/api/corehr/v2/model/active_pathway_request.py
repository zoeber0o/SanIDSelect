# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .active_pathway_request_body import ActivePathwayRequestBody


class ActivePathwayRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.request_body: Optional[ActivePathwayRequestBody] = None

    @staticmethod
    def builder() -> "ActivePathwayRequestBuilder":
        return ActivePathwayRequestBuilder()


class ActivePathwayRequestBuilder(object):

    def __init__(self) -> None:
        active_pathway_request = ActivePathwayRequest()
        active_pathway_request.http_method = HttpMethod.POST
        active_pathway_request.uri = "/open-apis/corehr/v2/pathways/active"
        active_pathway_request.token_types = {AccessTokenType.TENANT}
        self._active_pathway_request: ActivePathwayRequest = active_pathway_request

    def request_body(self, request_body: ActivePathwayRequestBody) -> "ActivePathwayRequestBuilder":
        self._active_pathway_request.request_body = request_body
        self._active_pathway_request.body = request_body
        return self

    def build(self) -> ActivePathwayRequest:
        return self._active_pathway_request
