# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n import I18n


class SignatureMetaInfo(object):
    _types = {
        "api_name": str,
        "wk_id": str,
        "label": List[I18n],
    }

    def __init__(self, d=None):
        self.api_name: Optional[str] = None
        self.wk_id: Optional[str] = None
        self.label: Optional[List[I18n]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SignatureMetaInfoBuilder":
        return SignatureMetaInfoBuilder()


class SignatureMetaInfoBuilder(object):
    def __init__(self) -> None:
        self._signature_meta_info = SignatureMetaInfo()

    def api_name(self, api_name: str) -> "SignatureMetaInfoBuilder":
        self._signature_meta_info.api_name = api_name
        return self

    def wk_id(self, wk_id: str) -> "SignatureMetaInfoBuilder":
        self._signature_meta_info.wk_id = wk_id
        return self

    def label(self, label: List[I18n]) -> "SignatureMetaInfoBuilder":
        self._signature_meta_info.label = label
        return self

    def build(self) -> "SignatureMetaInfo":
        return self._signature_meta_info
