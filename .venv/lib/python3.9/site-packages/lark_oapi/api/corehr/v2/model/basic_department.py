# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n import I18n


class BasicDepartment(object):
    _types = {
        "id": str,
        "id_v2": str,
        "department_name": List[I18n],
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.id_v2: Optional[str] = None
        self.department_name: Optional[List[I18n]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BasicDepartmentBuilder":
        return BasicDepartmentBuilder()


class BasicDepartmentBuilder(object):
    def __init__(self) -> None:
        self._basic_department = BasicDepartment()

    def id(self, id: str) -> "BasicDepartmentBuilder":
        self._basic_department.id = id
        return self

    def id_v2(self, id_v2: str) -> "BasicDepartmentBuilder":
        self._basic_department.id_v2 = id_v2
        return self

    def department_name(self, department_name: List[I18n]) -> "BasicDepartmentBuilder":
        self._basic_department.department_name = department_name
        return self

    def build(self) -> "BasicDepartment":
        return self._basic_department
