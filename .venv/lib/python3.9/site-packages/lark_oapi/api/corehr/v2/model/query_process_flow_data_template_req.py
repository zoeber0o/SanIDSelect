# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class QueryProcessFlowDataTemplateReq(object):
    _types = {
        "flow_definition_id": str,
        "variable_api_names": List[str],
    }

    def __init__(self, d=None):
        self.flow_definition_id: Optional[str] = None
        self.variable_api_names: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryProcessFlowDataTemplateReqBuilder":
        return QueryProcessFlowDataTemplateReqBuilder()


class QueryProcessFlowDataTemplateReqBuilder(object):
    def __init__(self) -> None:
        self._query_process_flow_data_template_req = QueryProcessFlowDataTemplateReq()

    def flow_definition_id(self, flow_definition_id: str) -> "QueryProcessFlowDataTemplateReqBuilder":
        self._query_process_flow_data_template_req.flow_definition_id = flow_definition_id
        return self

    def variable_api_names(self, variable_api_names: List[str]) -> "QueryProcessFlowDataTemplateReqBuilder":
        self._query_process_flow_data_template_req.variable_api_names = variable_api_names
        return self

    def build(self) -> "QueryProcessFlowDataTemplateReq":
        return self._query_process_flow_data_template_req
