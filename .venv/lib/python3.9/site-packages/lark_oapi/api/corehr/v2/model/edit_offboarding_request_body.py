# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .object_field_data import ObjectFieldData


class EditOffboardingRequestBody(object):
    _types = {
        "offboarding_id": str,
        "operator_id": str,
        "update_data": List[ObjectFieldData],
    }

    def __init__(self, d=None):
        self.offboarding_id: Optional[str] = None
        self.operator_id: Optional[str] = None
        self.update_data: Optional[List[ObjectFieldData]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "EditOffboardingRequestBodyBuilder":
        return EditOffboardingRequestBodyBuilder()


class EditOffboardingRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._edit_offboarding_request_body = EditOffboardingRequestBody()

    def offboarding_id(self, offboarding_id: str) -> "EditOffboardingRequestBodyBuilder":
        self._edit_offboarding_request_body.offboarding_id = offboarding_id
        return self

    def operator_id(self, operator_id: str) -> "EditOffboardingRequestBodyBuilder":
        self._edit_offboarding_request_body.operator_id = operator_id
        return self

    def update_data(self, update_data: List[ObjectFieldData]) -> "EditOffboardingRequestBodyBuilder":
        self._edit_offboarding_request_body.update_data = update_data
        return self

    def build(self) -> "EditOffboardingRequestBody":
        return self._edit_offboarding_request_body
