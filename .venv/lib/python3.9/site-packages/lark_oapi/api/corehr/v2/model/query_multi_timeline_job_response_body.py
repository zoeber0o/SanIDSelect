# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .job_timeline import JobTimeline


class QueryMultiTimelineJobResponseBody(object):
    _types = {
        "items": List[JobTimeline],
    }

    def __init__(self, d=None):
        self.items: Optional[List[JobTimeline]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryMultiTimelineJobResponseBodyBuilder":
        return QueryMultiTimelineJobResponseBodyBuilder()


class QueryMultiTimelineJobResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._query_multi_timeline_job_response_body = QueryMultiTimelineJobResponseBody()

    def items(self, items: List[JobTimeline]) -> "QueryMultiTimelineJobResponseBodyBuilder":
        self._query_multi_timeline_job_response_body.items = items
        return self

    def build(self) -> "QueryMultiTimelineJobResponseBody":
        return self._query_multi_timeline_job_response_body
