# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .i18n import I18n


class NoticePeriodDetail(object):
    _types = {
        "wk_id": str,
        "value": int,
        "value_unit": str,
        "name": I18n,
    }

    def __init__(self, d=None):
        self.wk_id: Optional[str] = None
        self.value: Optional[int] = None
        self.value_unit: Optional[str] = None
        self.name: Optional[I18n] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "NoticePeriodDetailBuilder":
        return NoticePeriodDetailBuilder()


class NoticePeriodDetailBuilder(object):
    def __init__(self) -> None:
        self._notice_period_detail = NoticePeriodDetail()

    def wk_id(self, wk_id: str) -> "NoticePeriodDetailBuilder":
        self._notice_period_detail.wk_id = wk_id
        return self

    def value(self, value: int) -> "NoticePeriodDetailBuilder":
        self._notice_period_detail.value = value
        return self

    def value_unit(self, value_unit: str) -> "NoticePeriodDetailBuilder":
        self._notice_period_detail.value_unit = value_unit
        return self

    def name(self, name: I18n) -> "NoticePeriodDetailBuilder":
        self._notice_period_detail.name = name
        return self

    def build(self) -> "NoticePeriodDetail":
        return self._notice_period_detail
