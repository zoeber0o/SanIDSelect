# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class EmployeeUnionCityInfo(object):
    _types = {
        "employment_id": str,
        "is_in_union_city": bool,
    }

    def __init__(self, d=None):
        self.employment_id: Optional[str] = None
        self.is_in_union_city: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "EmployeeUnionCityInfoBuilder":
        return EmployeeUnionCityInfoBuilder()


class EmployeeUnionCityInfoBuilder(object):
    def __init__(self) -> None:
        self._employee_union_city_info = EmployeeUnionCityInfo()

    def employment_id(self, employment_id: str) -> "EmployeeUnionCityInfoBuilder":
        self._employee_union_city_info.employment_id = employment_id
        return self

    def is_in_union_city(self, is_in_union_city: bool) -> "EmployeeUnionCityInfoBuilder":
        self._employee_union_city_info.is_in_union_city = is_in_union_city
        return self

    def build(self) -> "EmployeeUnionCityInfo":
        return self._employee_union_city_info
