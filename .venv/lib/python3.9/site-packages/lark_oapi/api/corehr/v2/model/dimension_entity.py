# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class DimensionEntity(object):
    _types = {
        "dimension_key": str,
        "dimension_value": str,
    }

    def __init__(self, d=None):
        self.dimension_key: Optional[str] = None
        self.dimension_value: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DimensionEntityBuilder":
        return DimensionEntityBuilder()


class DimensionEntityBuilder(object):
    def __init__(self) -> None:
        self._dimension_entity = DimensionEntity()

    def dimension_key(self, dimension_key: str) -> "DimensionEntityBuilder":
        self._dimension_entity.dimension_key = dimension_key
        return self

    def dimension_value(self, dimension_value: str) -> "DimensionEntityBuilder":
        self._dimension_entity.dimension_value = dimension_value
        return self

    def build(self) -> "DimensionEntity":
        return self._dimension_entity
