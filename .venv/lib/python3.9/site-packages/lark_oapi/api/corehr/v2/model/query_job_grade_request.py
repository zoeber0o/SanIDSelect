# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .query_job_grade_request_body import QueryJobGradeRequestBody


class QueryJobGradeRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.page_size: Optional[int] = None
        self.page_token: Optional[str] = None
        self.request_body: Optional[QueryJobGradeRequestBody] = None

    @staticmethod
    def builder() -> "QueryJobGradeRequestBuilder":
        return QueryJobGradeRequestBuilder()


class QueryJobGradeRequestBuilder(object):

    def __init__(self) -> None:
        query_job_grade_request = QueryJobGradeRequest()
        query_job_grade_request.http_method = HttpMethod.POST
        query_job_grade_request.uri = "/open-apis/corehr/v2/job_grades/query"
        query_job_grade_request.token_types = {AccessTokenType.TENANT}
        self._query_job_grade_request: QueryJobGradeRequest = query_job_grade_request

    def page_size(self, page_size: int) -> "QueryJobGradeRequestBuilder":
        self._query_job_grade_request.page_size = page_size
        self._query_job_grade_request.add_query("page_size", page_size)
        return self

    def page_token(self, page_token: str) -> "QueryJobGradeRequestBuilder":
        self._query_job_grade_request.page_token = page_token
        self._query_job_grade_request.add_query("page_token", page_token)
        return self

    def request_body(self, request_body: QueryJobGradeRequestBody) -> "QueryJobGradeRequestBuilder":
        self._query_job_grade_request.request_body = request_body
        self._query_job_grade_request.body = request_body
        return self

    def build(self) -> QueryJobGradeRequest:
        return self._query_job_grade_request
