# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .update_rule_custom_org_request_body import UpdateRuleCustomOrgRequestBody


class UpdateRuleCustomOrgRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.request_body: Optional[UpdateRuleCustomOrgRequestBody] = None

    @staticmethod
    def builder() -> "UpdateRuleCustomOrgRequestBuilder":
        return UpdateRuleCustomOrgRequestBuilder()


class UpdateRuleCustomOrgRequestBuilder(object):

    def __init__(self) -> None:
        update_rule_custom_org_request = UpdateRuleCustomOrgRequest()
        update_rule_custom_org_request.http_method = HttpMethod.POST
        update_rule_custom_org_request.uri = "/open-apis/corehr/v2/custom_orgs/update_rule"
        update_rule_custom_org_request.token_types = {AccessTokenType.TENANT}
        self._update_rule_custom_org_request: UpdateRuleCustomOrgRequest = update_rule_custom_org_request

    def request_body(self, request_body: UpdateRuleCustomOrgRequestBody) -> "UpdateRuleCustomOrgRequestBuilder":
        self._update_rule_custom_org_request.request_body = request_body
        self._update_rule_custom_org_request.body = request_body
        return self

    def build(self) -> UpdateRuleCustomOrgRequest:
        return self._update_rule_custom_org_request
