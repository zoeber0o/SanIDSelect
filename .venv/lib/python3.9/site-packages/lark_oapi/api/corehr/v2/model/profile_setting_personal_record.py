# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .profile_setting_file import ProfileSettingFile


class ProfileSettingPersonalRecord(object):
    _types = {
        "profile_type": str,
        "files": List[ProfileSettingFile],
    }

    def __init__(self, d=None):
        self.profile_type: Optional[str] = None
        self.files: Optional[List[ProfileSettingFile]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ProfileSettingPersonalRecordBuilder":
        return ProfileSettingPersonalRecordBuilder()


class ProfileSettingPersonalRecordBuilder(object):
    def __init__(self) -> None:
        self._profile_setting_personal_record = ProfileSettingPersonalRecord()

    def profile_type(self, profile_type: str) -> "ProfileSettingPersonalRecordBuilder":
        self._profile_setting_personal_record.profile_type = profile_type
        return self

    def files(self, files: List[ProfileSettingFile]) -> "ProfileSettingPersonalRecordBuilder":
        self._profile_setting_personal_record.files = files
        return self

    def build(self) -> "ProfileSettingPersonalRecord":
        return self._profile_setting_personal_record
