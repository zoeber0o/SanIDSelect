# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .employment_custom_object_record import EmploymentCustomObjectRecord


class EmpCustomObjectInfo(object):
    _types = {
        "system_info": str,
        "is_timeline": bool,
        "is_activate": bool,
        "employment_custom_object_records": List[EmploymentCustomObjectRecord],
    }

    def __init__(self, d=None):
        self.system_info: Optional[str] = None
        self.is_timeline: Optional[bool] = None
        self.is_activate: Optional[bool] = None
        self.employment_custom_object_records: Optional[List[EmploymentCustomObjectRecord]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "EmpCustomObjectInfoBuilder":
        return EmpCustomObjectInfoBuilder()


class EmpCustomObjectInfoBuilder(object):
    def __init__(self) -> None:
        self._emp_custom_object_info = EmpCustomObjectInfo()

    def system_info(self, system_info: str) -> "EmpCustomObjectInfoBuilder":
        self._emp_custom_object_info.system_info = system_info
        return self

    def is_timeline(self, is_timeline: bool) -> "EmpCustomObjectInfoBuilder":
        self._emp_custom_object_info.is_timeline = is_timeline
        return self

    def is_activate(self, is_activate: bool) -> "EmpCustomObjectInfoBuilder":
        self._emp_custom_object_info.is_activate = is_activate
        return self

    def employment_custom_object_records(self, employment_custom_object_records: List[
        EmploymentCustomObjectRecord]) -> "EmpCustomObjectInfoBuilder":
        self._emp_custom_object_info.employment_custom_object_records = employment_custom_object_records
        return self

    def build(self) -> "EmpCustomObjectInfo":
        return self._emp_custom_object_info
