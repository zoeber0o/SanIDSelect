# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class SearchContractRequestBody(object):
    _types = {
        "employment_id_list": List[str],
        "contract_id_list": List[str],
    }

    def __init__(self, d=None):
        self.employment_id_list: Optional[List[str]] = None
        self.contract_id_list: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SearchContractRequestBodyBuilder":
        return SearchContractRequestBodyBuilder()


class SearchContractRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._search_contract_request_body = SearchContractRequestBody()

    def employment_id_list(self, employment_id_list: List[str]) -> "SearchContractRequestBodyBuilder":
        self._search_contract_request_body.employment_id_list = employment_id_list
        return self

    def contract_id_list(self, contract_id_list: List[str]) -> "SearchContractRequestBodyBuilder":
        self._search_contract_request_body.contract_id_list = contract_id_list
        return self

    def build(self) -> "SearchContractRequestBody":
        return self._search_contract_request_body
