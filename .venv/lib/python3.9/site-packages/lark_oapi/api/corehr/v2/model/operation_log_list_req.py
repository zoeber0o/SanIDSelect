# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OperationLogListReq(object):
    _types = {
        "start_time": str,
        "end_time": str,
        "operator_ids": List[str],
        "employment_id": str,
        "filter_fields": List[str],
    }

    def __init__(self, d=None):
        self.start_time: Optional[str] = None
        self.end_time: Optional[str] = None
        self.operator_ids: Optional[List[str]] = None
        self.employment_id: Optional[str] = None
        self.filter_fields: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OperationLogListReqBuilder":
        return OperationLogListReqBuilder()


class OperationLogListReqBuilder(object):
    def __init__(self) -> None:
        self._operation_log_list_req = OperationLogListReq()

    def start_time(self, start_time: str) -> "OperationLogListReqBuilder":
        self._operation_log_list_req.start_time = start_time
        return self

    def end_time(self, end_time: str) -> "OperationLogListReqBuilder":
        self._operation_log_list_req.end_time = end_time
        return self

    def operator_ids(self, operator_ids: List[str]) -> "OperationLogListReqBuilder":
        self._operation_log_list_req.operator_ids = operator_ids
        return self

    def employment_id(self, employment_id: str) -> "OperationLogListReqBuilder":
        self._operation_log_list_req.employment_id = employment_id
        return self

    def filter_fields(self, filter_fields: List[str]) -> "OperationLogListReqBuilder":
        self._operation_log_list_req.filter_fields = filter_fields
        return self

    def build(self) -> "OperationLogListReq":
        return self._operation_log_list_req
