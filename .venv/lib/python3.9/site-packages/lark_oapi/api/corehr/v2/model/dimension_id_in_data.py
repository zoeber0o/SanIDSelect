# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class DimensionIdInData(object):
    _types = {
        "dimension_key": str,
        "dimension_ids": List[str],
    }

    def __init__(self, d=None):
        self.dimension_key: Optional[str] = None
        self.dimension_ids: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DimensionIdInDataBuilder":
        return DimensionIdInDataBuilder()


class DimensionIdInDataBuilder(object):
    def __init__(self) -> None:
        self._dimension_id_in_data = DimensionIdInData()

    def dimension_key(self, dimension_key: str) -> "DimensionIdInDataBuilder":
        self._dimension_id_in_data.dimension_key = dimension_key
        return self

    def dimension_ids(self, dimension_ids: List[str]) -> "DimensionIdInDataBuilder":
        self._dimension_id_in_data.dimension_ids = dimension_ids
        return self

    def build(self) -> "DimensionIdInData":
        return self._dimension_id_in_data
