# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .object_field_data import ObjectFieldData


class TalentPoolMemberOpReqItem(object):
    _types = {
        "employment_id": str,
        "date": str,
        "reason": str,
        "custom_fields": List[ObjectFieldData],
    }

    def __init__(self, d=None):
        self.employment_id: Optional[str] = None
        self.date: Optional[str] = None
        self.reason: Optional[str] = None
        self.custom_fields: Optional[List[ObjectFieldData]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "TalentPoolMemberOpReqItemBuilder":
        return TalentPoolMemberOpReqItemBuilder()


class TalentPoolMemberOpReqItemBuilder(object):
    def __init__(self) -> None:
        self._talent_pool_member_op_req_item = TalentPoolMemberOpReqItem()

    def employment_id(self, employment_id: str) -> "TalentPoolMemberOpReqItemBuilder":
        self._talent_pool_member_op_req_item.employment_id = employment_id
        return self

    def date(self, date: str) -> "TalentPoolMemberOpReqItemBuilder":
        self._talent_pool_member_op_req_item.date = date
        return self

    def reason(self, reason: str) -> "TalentPoolMemberOpReqItemBuilder":
        self._talent_pool_member_op_req_item.reason = reason
        return self

    def custom_fields(self, custom_fields: List[ObjectFieldData]) -> "TalentPoolMemberOpReqItemBuilder":
        self._talent_pool_member_op_req_item.custom_fields = custom_fields
        return self

    def build(self) -> "TalentPoolMemberOpReqItem":
        return self._talent_pool_member_op_req_item
