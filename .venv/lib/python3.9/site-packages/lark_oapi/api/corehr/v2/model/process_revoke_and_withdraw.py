# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ProcessRevokeAndWithdraw(object):
    _types = {
        "user_id": str,
        "reason": str,
        "system_user": bool,
    }

    def __init__(self, d=None):
        self.user_id: Optional[str] = None
        self.reason: Optional[str] = None
        self.system_user: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ProcessRevokeAndWithdrawBuilder":
        return ProcessRevokeAndWithdrawBuilder()


class ProcessRevokeAndWithdrawBuilder(object):
    def __init__(self) -> None:
        self._process_revoke_and_withdraw = ProcessRevokeAndWithdraw()

    def user_id(self, user_id: str) -> "ProcessRevokeAndWithdrawBuilder":
        self._process_revoke_and_withdraw.user_id = user_id
        return self

    def reason(self, reason: str) -> "ProcessRevokeAndWithdrawBuilder":
        self._process_revoke_and_withdraw.reason = reason
        return self

    def system_user(self, system_user: bool) -> "ProcessRevokeAndWithdrawBuilder":
        self._process_revoke_and_withdraw.system_user = system_user
        return self

    def build(self) -> "ProcessRevokeAndWithdraw":
        return self._process_revoke_and_withdraw
