# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .approval_group import ApprovalGroup


class GetApprovalGroupsResponseBody(object):
    _types = {
        "approval_group": ApprovalGroup,
    }

    def __init__(self, d=None):
        self.approval_group: Optional[ApprovalGroup] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetApprovalGroupsResponseBodyBuilder":
        return GetApprovalGroupsResponseBodyBuilder()


class GetApprovalGroupsResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_approval_groups_response_body = GetApprovalGroupsResponseBody()

    def approval_group(self, approval_group: ApprovalGroup) -> "GetApprovalGroupsResponseBodyBuilder":
        self._get_approval_groups_response_body.approval_group = approval_group
        return self

    def build(self) -> "GetApprovalGroupsResponseBody":
        return self._get_approval_groups_response_body
