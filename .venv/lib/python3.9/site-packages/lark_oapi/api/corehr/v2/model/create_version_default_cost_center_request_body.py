# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .employment_default_cost_center import EmploymentDefaultCostCenter


class CreateVersionDefaultCostCenterRequestBody(object):
    _types = {
        "employment_id": str,
        "default_cost_center": EmploymentDefaultCostCenter,
    }

    def __init__(self, d=None):
        self.employment_id: Optional[str] = None
        self.default_cost_center: Optional[EmploymentDefaultCostCenter] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateVersionDefaultCostCenterRequestBodyBuilder":
        return CreateVersionDefaultCostCenterRequestBodyBuilder()


class CreateVersionDefaultCostCenterRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._create_version_default_cost_center_request_body = CreateVersionDefaultCostCenterRequestBody()

    def employment_id(self, employment_id: str) -> "CreateVersionDefaultCostCenterRequestBodyBuilder":
        self._create_version_default_cost_center_request_body.employment_id = employment_id
        return self

    def default_cost_center(self,
                            default_cost_center: EmploymentDefaultCostCenter) -> "CreateVersionDefaultCostCenterRequestBodyBuilder":
        self._create_version_default_cost_center_request_body.default_cost_center = default_cost_center
        return self

    def build(self) -> "CreateVersionDefaultCostCenterRequestBody":
        return self._create_version_default_cost_center_request_body
