# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .signature_template_content_item import SignatureTemplateContentItem
from .signature_template_custom_field import SignatureTemplateCustomField
from .signature_template_filter import SignatureTemplateFilter
from .signature_template_common_field_info import SignatureTemplateCommonFieldInfo
from .signature_template_field import SignatureTemplateField


class SignatureTemplateContentInfo(object):
    _types = {
        "contents": List[SignatureTemplateContentItem],
        "custom_fields": List[SignatureTemplateCustomField],
        "filter_fields": List[SignatureTemplateFilter],
        "using_fields": List[SignatureTemplateCommonFieldInfo],
        "system_setting_fields": List[SignatureTemplateField],
    }

    def __init__(self, d=None):
        self.contents: Optional[List[SignatureTemplateContentItem]] = None
        self.custom_fields: Optional[List[SignatureTemplateCustomField]] = None
        self.filter_fields: Optional[List[SignatureTemplateFilter]] = None
        self.using_fields: Optional[List[SignatureTemplateCommonFieldInfo]] = None
        self.system_setting_fields: Optional[List[SignatureTemplateField]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SignatureTemplateContentInfoBuilder":
        return SignatureTemplateContentInfoBuilder()


class SignatureTemplateContentInfoBuilder(object):
    def __init__(self) -> None:
        self._signature_template_content_info = SignatureTemplateContentInfo()

    def contents(self, contents: List[SignatureTemplateContentItem]) -> "SignatureTemplateContentInfoBuilder":
        self._signature_template_content_info.contents = contents
        return self

    def custom_fields(self, custom_fields: List[SignatureTemplateCustomField]) -> "SignatureTemplateContentInfoBuilder":
        self._signature_template_content_info.custom_fields = custom_fields
        return self

    def filter_fields(self, filter_fields: List[SignatureTemplateFilter]) -> "SignatureTemplateContentInfoBuilder":
        self._signature_template_content_info.filter_fields = filter_fields
        return self

    def using_fields(self,
                     using_fields: List[SignatureTemplateCommonFieldInfo]) -> "SignatureTemplateContentInfoBuilder":
        self._signature_template_content_info.using_fields = using_fields
        return self

    def system_setting_fields(self, system_setting_fields: List[
        SignatureTemplateField]) -> "SignatureTemplateContentInfoBuilder":
        self._signature_template_content_info.system_setting_fields = system_setting_fields
        return self

    def build(self) -> "SignatureTemplateContentInfo":
        return self._signature_template_content_info
