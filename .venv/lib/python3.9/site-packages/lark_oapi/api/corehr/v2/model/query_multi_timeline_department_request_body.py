# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class QueryMultiTimelineDepartmentRequestBody(object):
    _types = {
        "department_ids": List[str],
        "effective_date_start": str,
        "effective_date_end": str,
        "fields": List[str],
    }

    def __init__(self, d=None):
        self.department_ids: Optional[List[str]] = None
        self.effective_date_start: Optional[str] = None
        self.effective_date_end: Optional[str] = None
        self.fields: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryMultiTimelineDepartmentRequestBodyBuilder":
        return QueryMultiTimelineDepartmentRequestBodyBuilder()


class QueryMultiTimelineDepartmentRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._query_multi_timeline_department_request_body = QueryMultiTimelineDepartmentRequestBody()

    def department_ids(self, department_ids: List[str]) -> "QueryMultiTimelineDepartmentRequestBodyBuilder":
        self._query_multi_timeline_department_request_body.department_ids = department_ids
        return self

    def effective_date_start(self, effective_date_start: str) -> "QueryMultiTimelineDepartmentRequestBodyBuilder":
        self._query_multi_timeline_department_request_body.effective_date_start = effective_date_start
        return self

    def effective_date_end(self, effective_date_end: str) -> "QueryMultiTimelineDepartmentRequestBodyBuilder":
        self._query_multi_timeline_department_request_body.effective_date_end = effective_date_end
        return self

    def fields(self, fields: List[str]) -> "QueryMultiTimelineDepartmentRequestBodyBuilder":
        self._query_multi_timeline_department_request_body.fields = fields
        return self

    def build(self) -> "QueryMultiTimelineDepartmentRequestBody":
        return self._query_multi_timeline_department_request_body
