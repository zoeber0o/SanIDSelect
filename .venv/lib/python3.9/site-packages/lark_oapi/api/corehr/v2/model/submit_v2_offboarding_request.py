# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .submit_v2_offboarding_request_body import SubmitV2OffboardingRequestBody


class SubmitV2OffboardingRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.user_id_type: Optional[str] = None
        self.request_body: Optional[SubmitV2OffboardingRequestBody] = None

    @staticmethod
    def builder() -> "SubmitV2OffboardingRequestBuilder":
        return SubmitV2OffboardingRequestBuilder()


class SubmitV2OffboardingRequestBuilder(object):

    def __init__(self) -> None:
        submit_v2_offboarding_request = SubmitV2OffboardingRequest()
        submit_v2_offboarding_request.http_method = HttpMethod.POST
        submit_v2_offboarding_request.uri = "/open-apis/corehr/v2/offboardings/submit_v2"
        submit_v2_offboarding_request.token_types = {AccessTokenType.TENANT}
        self._submit_v2_offboarding_request: SubmitV2OffboardingRequest = submit_v2_offboarding_request

    def user_id_type(self, user_id_type: str) -> "SubmitV2OffboardingRequestBuilder":
        self._submit_v2_offboarding_request.user_id_type = user_id_type
        self._submit_v2_offboarding_request.add_query("user_id_type", user_id_type)
        return self

    def request_body(self, request_body: SubmitV2OffboardingRequestBody) -> "SubmitV2OffboardingRequestBuilder":
        self._submit_v2_offboarding_request.request_body = request_body
        self._submit_v2_offboarding_request.body = request_body
        return self

    def build(self) -> SubmitV2OffboardingRequest:
        return self._submit_v2_offboarding_request
