# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .employment_cost_allocation import EmploymentCostAllocation


class RemoveVersionCostAllocationRequestBody(object):
    _types = {
        "employment_id": str,
        "cost_allocation": EmploymentCostAllocation,
    }

    def __init__(self, d=None):
        self.employment_id: Optional[str] = None
        self.cost_allocation: Optional[EmploymentCostAllocation] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RemoveVersionCostAllocationRequestBodyBuilder":
        return RemoveVersionCostAllocationRequestBodyBuilder()


class RemoveVersionCostAllocationRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._remove_version_cost_allocation_request_body = RemoveVersionCostAllocationRequestBody()

    def employment_id(self, employment_id: str) -> "RemoveVersionCostAllocationRequestBodyBuilder":
        self._remove_version_cost_allocation_request_body.employment_id = employment_id
        return self

    def cost_allocation(self,
                        cost_allocation: EmploymentCostAllocation) -> "RemoveVersionCostAllocationRequestBodyBuilder":
        self._remove_version_cost_allocation_request_body.cost_allocation = cost_allocation
        return self

    def build(self) -> "RemoveVersionCostAllocationRequestBody":
        return self._remove_version_cost_allocation_request_body
