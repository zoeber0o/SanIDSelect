# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OperationLogEntityFieldExt(object):
    _types = {
        "id": str,
        "usage": str,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.usage: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OperationLogEntityFieldExtBuilder":
        return OperationLogEntityFieldExtBuilder()


class OperationLogEntityFieldExtBuilder(object):
    def __init__(self) -> None:
        self._operation_log_entity_field_ext = OperationLogEntityFieldExt()

    def id(self, id: str) -> "OperationLogEntityFieldExtBuilder":
        self._operation_log_entity_field_ext.id = id
        return self

    def usage(self, usage: str) -> "OperationLogEntityFieldExtBuilder":
        self._operation_log_entity_field_ext.usage = usage
        return self

    def build(self) -> "OperationLogEntityFieldExt":
        return self._operation_log_entity_field_ext
