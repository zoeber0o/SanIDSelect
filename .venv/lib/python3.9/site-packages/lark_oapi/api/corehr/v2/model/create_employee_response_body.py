# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class CreateEmployeeResponseBody(object):
    _types = {
        "employment_id": str,
        "contract_id": str,
        "job_data_id": str,
    }

    def __init__(self, d=None):
        self.employment_id: Optional[str] = None
        self.contract_id: Optional[str] = None
        self.job_data_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateEmployeeResponseBodyBuilder":
        return CreateEmployeeResponseBodyBuilder()


class CreateEmployeeResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_employee_response_body = CreateEmployeeResponseBody()

    def employment_id(self, employment_id: str) -> "CreateEmployeeResponseBodyBuilder":
        self._create_employee_response_body.employment_id = employment_id
        return self

    def contract_id(self, contract_id: str) -> "CreateEmployeeResponseBodyBuilder":
        self._create_employee_response_body.contract_id = contract_id
        return self

    def job_data_id(self, job_data_id: str) -> "CreateEmployeeResponseBodyBuilder":
        self._create_employee_response_body.job_data_id = job_data_id
        return self

    def build(self) -> "CreateEmployeeResponseBody":
        return self._create_employee_response_body
