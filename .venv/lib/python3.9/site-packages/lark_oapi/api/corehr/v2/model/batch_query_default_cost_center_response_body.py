# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .employee_default_cost_center import EmployeeDefaultCostCenter


class BatchQueryDefaultCostCenterResponseBody(object):
    _types = {
        "items": List[EmployeeDefaultCostCenter],
    }

    def __init__(self, d=None):
        self.items: Optional[List[EmployeeDefaultCostCenter]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchQueryDefaultCostCenterResponseBodyBuilder":
        return BatchQueryDefaultCostCenterResponseBodyBuilder()


class BatchQueryDefaultCostCenterResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_query_default_cost_center_response_body = BatchQueryDefaultCostCenterResponseBody()

    def items(self, items: List[EmployeeDefaultCostCenter]) -> "BatchQueryDefaultCostCenterResponseBodyBuilder":
        self._batch_query_default_cost_center_response_body.items = items
        return self

    def build(self) -> "BatchQueryDefaultCostCenterResponseBody":
        return self._batch_query_default_cost_center_response_body
