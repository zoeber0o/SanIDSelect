# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .employees_additional_job_write_resp import EmployeesAdditionalJobWriteResp


class PatchEmployeesAdditionalJobResponseBody(object):
    _types = {
        "additional_job": EmployeesAdditionalJobWriteResp,
    }

    def __init__(self, d=None):
        self.additional_job: Optional[EmployeesAdditionalJobWriteResp] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PatchEmployeesAdditionalJobResponseBodyBuilder":
        return PatchEmployeesAdditionalJobResponseBodyBuilder()


class PatchEmployeesAdditionalJobResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._patch_employees_additional_job_response_body = PatchEmployeesAdditionalJobResponseBody()

    def additional_job(self,
                       additional_job: EmployeesAdditionalJobWriteResp) -> "PatchEmployeesAdditionalJobResponseBodyBuilder":
        self._patch_employees_additional_job_response_body.additional_job = additional_job
        return self

    def build(self) -> "PatchEmployeesAdditionalJobResponseBody":
        return self._patch_employees_additional_job_response_body
