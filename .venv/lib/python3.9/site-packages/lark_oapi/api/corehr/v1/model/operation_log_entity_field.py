# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OperationLogEntityField(object):
    _types = {
        "field": str,
        "before": str,
        "after": str,
    }

    def __init__(self, d=None):
        self.field: Optional[str] = None
        self.before: Optional[str] = None
        self.after: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OperationLogEntityFieldBuilder":
        return OperationLogEntityFieldBuilder()


class OperationLogEntityFieldBuilder(object):
    def __init__(self) -> None:
        self._operation_log_entity_field = OperationLogEntityField()

    def field(self, field: str) -> "OperationLogEntityFieldBuilder":
        self._operation_log_entity_field.field = field
        return self

    def before(self, before: str) -> "OperationLogEntityFieldBuilder":
        self._operation_log_entity_field.before = before
        return self

    def after(self, after: str) -> "OperationLogEntityFieldBuilder":
        self._operation_log_entity_field.after = after
        return self

    def build(self) -> "OperationLogEntityField":
        return self._operation_log_entity_field
