# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ManagementScope(object):
    _types = {
        "management_dimension": str,
        "obj_id": str,
    }

    def __init__(self, d=None):
        self.management_dimension: Optional[str] = None
        self.obj_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ManagementScopeBuilder":
        return ManagementScopeBuilder()


class ManagementScopeBuilder(object):
    def __init__(self) -> None:
        self._management_scope = ManagementScope()

    def management_dimension(self, management_dimension: str) -> "ManagementScopeBuilder":
        self._management_scope.management_dimension = management_dimension
        return self

    def obj_id(self, obj_id: str) -> "ManagementScopeBuilder":
        self._management_scope.obj_id = obj_id
        return self

    def build(self) -> "ManagementScope":
        return self._management_scope
