# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .job_family import JobFamily


class CreateJobFamilyResponseBody(object):
    _types = {
        "job_family": JobFamily,
    }

    def __init__(self, d=None):
        self.job_family: Optional[JobFamily] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateJobFamilyResponseBodyBuilder":
        return CreateJobFamilyResponseBodyBuilder()


class CreateJobFamilyResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_job_family_response_body = CreateJobFamilyResponseBody()

    def job_family(self, job_family: JobFamily) -> "CreateJobFamilyResponseBodyBuilder":
        self._create_job_family_response_body.job_family = job_family
        return self

    def build(self) -> "CreateJobFamilyResponseBody":
        return self._create_job_family_response_body
