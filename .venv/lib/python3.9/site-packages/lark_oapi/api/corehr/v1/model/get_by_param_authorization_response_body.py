# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .role_authorization import RoleAuthorization


class GetByParamAuthorizationResponseBody(object):
    _types = {
        "role_authorization": RoleAuthorization,
    }

    def __init__(self, d=None):
        self.role_authorization: Optional[RoleAuthorization] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetByParamAuthorizationResponseBodyBuilder":
        return GetByParamAuthorizationResponseBodyBuilder()


class GetByParamAuthorizationResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_by_param_authorization_response_body = GetByParamAuthorizationResponseBody()

    def role_authorization(self, role_authorization: RoleAuthorization) -> "GetByParamAuthorizationResponseBodyBuilder":
        self._get_by_param_authorization_response_body.role_authorization = role_authorization
        return self

    def build(self) -> "GetByParamAuthorizationResponseBody":
        return self._get_by_param_authorization_response_body
