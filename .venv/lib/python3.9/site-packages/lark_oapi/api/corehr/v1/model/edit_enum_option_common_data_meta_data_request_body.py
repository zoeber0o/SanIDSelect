# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .enum_field_option import EnumFieldOption


class EditEnumOptionCommonDataMetaDataRequestBody(object):
    _types = {
        "object_api_name": str,
        "enum_field_api_name": str,
        "enum_field_option": EnumFieldOption,
    }

    def __init__(self, d=None):
        self.object_api_name: Optional[str] = None
        self.enum_field_api_name: Optional[str] = None
        self.enum_field_option: Optional[EnumFieldOption] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "EditEnumOptionCommonDataMetaDataRequestBodyBuilder":
        return EditEnumOptionCommonDataMetaDataRequestBodyBuilder()


class EditEnumOptionCommonDataMetaDataRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._edit_enum_option_common_data_meta_data_request_body = EditEnumOptionCommonDataMetaDataRequestBody()

    def object_api_name(self, object_api_name: str) -> "EditEnumOptionCommonDataMetaDataRequestBodyBuilder":
        self._edit_enum_option_common_data_meta_data_request_body.object_api_name = object_api_name
        return self

    def enum_field_api_name(self, enum_field_api_name: str) -> "EditEnumOptionCommonDataMetaDataRequestBodyBuilder":
        self._edit_enum_option_common_data_meta_data_request_body.enum_field_api_name = enum_field_api_name
        return self

    def enum_field_option(self,
                          enum_field_option: EnumFieldOption) -> "EditEnumOptionCommonDataMetaDataRequestBodyBuilder":
        self._edit_enum_option_common_data_meta_data_request_body.enum_field_option = enum_field_option
        return self

    def build(self) -> "EditEnumOptionCommonDataMetaDataRequestBody":
        return self._edit_enum_option_common_data_meta_data_request_body
