# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .operation_log_entity import OperationLogEntity


class OperationLogListRespItem(object):
    _types = {
        "operator_id": str,
        "opt_time": str,
        "entities": List[OperationLogEntity],
    }

    def __init__(self, d=None):
        self.operator_id: Optional[str] = None
        self.opt_time: Optional[str] = None
        self.entities: Optional[List[OperationLogEntity]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OperationLogListRespItemBuilder":
        return OperationLogListRespItemBuilder()


class OperationLogListRespItemBuilder(object):
    def __init__(self) -> None:
        self._operation_log_list_resp_item = OperationLogListRespItem()

    def operator_id(self, operator_id: str) -> "OperationLogListRespItemBuilder":
        self._operation_log_list_resp_item.operator_id = operator_id
        return self

    def opt_time(self, opt_time: str) -> "OperationLogListRespItemBuilder":
        self._operation_log_list_resp_item.opt_time = opt_time
        return self

    def entities(self, entities: List[OperationLogEntity]) -> "OperationLogListRespItemBuilder":
        self._operation_log_list_resp_item.entities = entities
        return self

    def build(self) -> "OperationLogListRespItem":
        return self._operation_log_list_resp_item
