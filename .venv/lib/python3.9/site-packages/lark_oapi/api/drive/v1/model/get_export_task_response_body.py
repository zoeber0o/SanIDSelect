# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .export_task import ExportTask


class GetExportTaskResponseBody(object):
    _types = {
        "result": ExportTask,
    }

    def __init__(self, d=None):
        self.result: Optional[ExportTask] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetExportTaskResponseBodyBuilder":
        return GetExportTaskResponseBodyBuilder()


class GetExportTaskResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_export_task_response_body = GetExportTaskResponseBody()

    def result(self, result: ExportTask) -> "GetExportTaskResponseBodyBuilder":
        self._get_export_task_response_body.result = result
        return self

    def build(self) -> "GetExportTaskResponseBody":
        return self._get_export_task_response_body
