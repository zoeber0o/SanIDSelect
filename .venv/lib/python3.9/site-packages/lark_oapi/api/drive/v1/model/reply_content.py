# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .reply_element import ReplyElement


class ReplyContent(object):
    _types = {
        "elements": List[ReplyElement],
    }

    def __init__(self, d=None):
        self.elements: Optional[List[ReplyElement]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ReplyContentBuilder":
        return ReplyContentBuilder()


class ReplyContentBuilder(object):
    def __init__(self) -> None:
        self._reply_content = ReplyContent()

    def elements(self, elements: List[ReplyElement]) -> "ReplyContentBuilder":
        self._reply_content.elements = elements
        return self

    def build(self) -> "ReplyContent":
        return self._reply_content
