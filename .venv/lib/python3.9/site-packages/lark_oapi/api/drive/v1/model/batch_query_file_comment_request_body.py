# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class BatchQueryFileCommentRequestBody(object):
    _types = {
        "comment_ids": List[str],
    }

    def __init__(self, d=None):
        self.comment_ids: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchQueryFileCommentRequestBodyBuilder":
        return BatchQueryFileCommentRequestBodyBuilder()


class BatchQueryFileCommentRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_query_file_comment_request_body = BatchQueryFileCommentRequestBody()

    def comment_ids(self, comment_ids: List[str]) -> "BatchQueryFileCommentRequestBodyBuilder":
        self._batch_query_file_comment_request_body.comment_ids = comment_ids
        return self

    def build(self) -> "BatchQueryFileCommentRequestBody":
        return self._batch_query_file_comment_request_body
