# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class GetFileSubscriptionRequestBody(object):
    _types = {
        "file_type": str,
    }

    def __init__(self, d=None):
        self.file_type: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetFileSubscriptionRequestBodyBuilder":
        return GetFileSubscriptionRequestBodyBuilder()


class GetFileSubscriptionRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._get_file_subscription_request_body = GetFileSubscriptionRequestBody()

    def file_type(self, file_type: str) -> "GetFileSubscriptionRequestBodyBuilder":
        self._get_file_subscription_request_body.file_type = file_type
        return self

    def build(self) -> "GetFileSubscriptionRequestBody":
        return self._get_file_subscription_request_body
