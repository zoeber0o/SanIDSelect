# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .file_comment import FileComment


class BatchQueryFileCommentResponseBody(object):
    _types = {
        "items": List[FileComment],
    }

    def __init__(self, d=None):
        self.items: Optional[List[FileComment]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchQueryFileCommentResponseBodyBuilder":
        return BatchQueryFileCommentResponseBodyBuilder()


class BatchQueryFileCommentResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_query_file_comment_response_body = BatchQueryFileCommentResponseBody()

    def items(self, items: List[FileComment]) -> "BatchQueryFileCommentResponseBodyBuilder":
        self._batch_query_file_comment_response_body.items = items
        return self

    def build(self) -> "BatchQueryFileCommentResponseBody":
        return self._batch_query_file_comment_response_body
