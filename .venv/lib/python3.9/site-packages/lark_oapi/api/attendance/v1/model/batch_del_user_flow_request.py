# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .batch_del_user_flow_request_body import BatchDelUserFlowRequestBody


class BatchDelUserFlowRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.request_body: Optional[BatchDelUserFlowRequestBody] = None

    @staticmethod
    def builder() -> "BatchDelUserFlowRequestBuilder":
        return BatchDelUserFlowRequestBuilder()


class BatchDelUserFlowRequestBuilder(object):

    def __init__(self) -> None:
        batch_del_user_flow_request = BatchDelUserFlowRequest()
        batch_del_user_flow_request.http_method = HttpMethod.POST
        batch_del_user_flow_request.uri = "/open-apis/attendance/v1/user_flows/batch_del"
        batch_del_user_flow_request.token_types = {AccessTokenType.TENANT}
        self._batch_del_user_flow_request: BatchDelUserFlowRequest = batch_del_user_flow_request

    def request_body(self, request_body: BatchDelUserFlowRequestBody) -> "BatchDelUserFlowRequestBuilder":
        self._batch_del_user_flow_request.request_body = request_body
        self._batch_del_user_flow_request.body = request_body
        return self

    def build(self) -> BatchDelUserFlowRequest:
        return self._batch_del_user_flow_request
