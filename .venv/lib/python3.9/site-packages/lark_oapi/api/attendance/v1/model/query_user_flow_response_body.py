# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user_flow import UserFlow


class QueryUserFlowResponseBody(object):
    _types = {
        "user_flow_results": List[UserFlow],
    }

    def __init__(self, d=None):
        self.user_flow_results: Optional[List[UserFlow]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryUserFlowResponseBodyBuilder":
        return QueryUserFlowResponseBodyBuilder()


class QueryUserFlowResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._query_user_flow_response_body = QueryUserFlowResponseBody()

    def user_flow_results(self, user_flow_results: List[UserFlow]) -> "QueryUserFlowResponseBodyBuilder":
        self._query_user_flow_response_body.user_flow_results = user_flow_results
        return self

    def build(self) -> "QueryUserFlowResponseBody":
        return self._query_user_flow_response_body
