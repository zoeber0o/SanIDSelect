# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class UploadReportArchiveRuleResponseBody(object):
    _types = {
        "invalid_code": List[str],
        "invalid_member_id": List[str],
    }

    def __init__(self, d=None):
        self.invalid_code: Optional[List[str]] = None
        self.invalid_member_id: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "UploadReportArchiveRuleResponseBodyBuilder":
        return UploadReportArchiveRuleResponseBodyBuilder()


class UploadReportArchiveRuleResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._upload_report_archive_rule_response_body = UploadReportArchiveRuleResponseBody()

    def invalid_code(self, invalid_code: List[str]) -> "UploadReportArchiveRuleResponseBodyBuilder":
        self._upload_report_archive_rule_response_body.invalid_code = invalid_code
        return self

    def invalid_member_id(self, invalid_member_id: List[str]) -> "UploadReportArchiveRuleResponseBodyBuilder":
        self._upload_report_archive_rule_response_body.invalid_member_id = invalid_member_id
        return self

    def build(self) -> "UploadReportArchiveRuleResponseBody":
        return self._upload_report_archive_rule_response_body
