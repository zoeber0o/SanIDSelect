# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ArchiveFieldData(object):
    _types = {
        "code": str,
        "value": str,
    }

    def __init__(self, d=None):
        self.code: Optional[str] = None
        self.value: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ArchiveFieldDataBuilder":
        return ArchiveFieldDataBuilder()


class ArchiveFieldDataBuilder(object):
    def __init__(self) -> None:
        self._archive_field_data = ArchiveFieldData()

    def code(self, code: str) -> "ArchiveFieldDataBuilder":
        self._archive_field_data.code = code
        return self

    def value(self, value: str) -> "ArchiveFieldDataBuilder":
        self._archive_field_data.value = value
        return self

    def build(self) -> "ArchiveFieldData":
        return self._archive_field_data
