# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .del_report_archive_rule_request_body import DelReportArchiveRuleRequestBody


class DelReportArchiveRuleRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.employee_type: Optional[str] = None
        self.request_body: Optional[DelReportArchiveRuleRequestBody] = None

    @staticmethod
    def builder() -> "DelReportArchiveRuleRequestBuilder":
        return DelReportArchiveRuleRequestBuilder()


class DelReportArchiveRuleRequestBuilder(object):

    def __init__(self) -> None:
        del_report_archive_rule_request = DelReportArchiveRuleRequest()
        del_report_archive_rule_request.http_method = HttpMethod.POST
        del_report_archive_rule_request.uri = "/open-apis/attendance/v1/archive_rule/del_report"
        del_report_archive_rule_request.token_types = {AccessTokenType.TENANT, AccessTokenType.USER}
        self._del_report_archive_rule_request: DelReportArchiveRuleRequest = del_report_archive_rule_request

    def employee_type(self, employee_type: str) -> "DelReportArchiveRuleRequestBuilder":
        self._del_report_archive_rule_request.employee_type = employee_type
        self._del_report_archive_rule_request.add_query("employee_type", employee_type)
        return self

    def request_body(self, request_body: DelReportArchiveRuleRequestBody) -> "DelReportArchiveRuleRequestBuilder":
        self._del_report_archive_rule_request.request_body = request_body
        self._del_report_archive_rule_request.body = request_body
        return self

    def build(self) -> DelReportArchiveRuleRequest:
        return self._del_report_archive_rule_request
