# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ReportRow(object):
    _types = {
        "name": str,
        "user_id": str,
        "column_map": str,
    }

    def __init__(self, d=None):
        self.name: Optional[str] = None
        self.user_id: Optional[str] = None
        self.column_map: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ReportRowBuilder":
        return ReportRowBuilder()


class ReportRowBuilder(object):
    def __init__(self) -> None:
        self._report_row = ReportRow()

    def name(self, name: str) -> "ReportRowBuilder":
        self._report_row.name = name
        return self

    def user_id(self, user_id: str) -> "ReportRowBuilder":
        self._report_row.user_id = user_id
        return self

    def column_map(self, column_map: str) -> "ReportRowBuilder":
        self._report_row.column_map = column_map
        return self

    def build(self) -> "ReportRow":
        return self._report_row
