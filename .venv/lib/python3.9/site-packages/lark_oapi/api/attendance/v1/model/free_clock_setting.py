# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class FreeClockSetting(object):
    _types = {
        "clock_mode": int,
        "clock_internal_hhmm": int,
    }

    def __init__(self, d=None):
        self.clock_mode: Optional[int] = None
        self.clock_internal_hhmm: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "FreeClockSettingBuilder":
        return FreeClockSettingBuilder()


class FreeClockSettingBuilder(object):
    def __init__(self) -> None:
        self._free_clock_setting = FreeClockSetting()

    def clock_mode(self, clock_mode: int) -> "FreeClockSettingBuilder":
        self._free_clock_setting.clock_mode = clock_mode
        return self

    def clock_internal_hhmm(self, clock_internal_hhmm: int) -> "FreeClockSettingBuilder":
        self._free_clock_setting.clock_internal_hhmm = clock_internal_hhmm
        return self

    def build(self) -> "FreeClockSetting":
        return self._free_clock_setting
