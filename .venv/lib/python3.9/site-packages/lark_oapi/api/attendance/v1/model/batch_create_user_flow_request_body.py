# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user_flow import UserFlow


class BatchCreateUserFlowRequestBody(object):
    _types = {
        "flow_records": List[UserFlow],
    }

    def __init__(self, d=None):
        self.flow_records: Optional[List[UserFlow]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchCreateUserFlowRequestBodyBuilder":
        return BatchCreateUserFlowRequestBodyBuilder()


class BatchCreateUserFlowRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._batch_create_user_flow_request_body = BatchCreateUserFlowRequestBody()

    def flow_records(self, flow_records: List[UserFlow]) -> "BatchCreateUserFlowRequestBodyBuilder":
        self._batch_create_user_flow_request_body.flow_records = flow_records
        return self

    def build(self) -> "BatchCreateUserFlowRequestBody":
        return self._batch_create_user_flow_request_body
