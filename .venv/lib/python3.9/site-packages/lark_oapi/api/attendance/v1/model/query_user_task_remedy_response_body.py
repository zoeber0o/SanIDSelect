# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user_task_remedy import UserTaskRemedy


class QueryUserTaskRemedyResponseBody(object):
    _types = {
        "user_remedys": List[UserTaskRemedy],
    }

    def __init__(self, d=None):
        self.user_remedys: Optional[List[UserTaskRemedy]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryUserTaskRemedyResponseBodyBuilder":
        return QueryUserTaskRemedyResponseBodyBuilder()


class QueryUserTaskRemedyResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._query_user_task_remedy_response_body = QueryUserTaskRemedyResponseBody()

    def user_remedys(self, user_remedys: List[UserTaskRemedy]) -> "QueryUserTaskRemedyResponseBodyBuilder":
        self._query_user_task_remedy_response_body.user_remedys = user_remedys
        return self

    def build(self) -> "QueryUserTaskRemedyResponseBody":
        return self._query_user_task_remedy_response_body
