# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class QueryUserAllowedRemedysUserTaskRemedyRequestBody(object):
    _types = {
        "user_id": str,
        "remedy_date": int,
    }

    def __init__(self, d=None):
        self.user_id: Optional[str] = None
        self.remedy_date: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryUserAllowedRemedysUserTaskRemedyRequestBodyBuilder":
        return QueryUserAllowedRemedysUserTaskRemedyRequestBodyBuilder()


class QueryUserAllowedRemedysUserTaskRemedyRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._query_user_allowed_remedys_user_task_remedy_request_body = QueryUserAllowedRemedysUserTaskRemedyRequestBody()

    def user_id(self, user_id: str) -> "QueryUserAllowedRemedysUserTaskRemedyRequestBodyBuilder":
        self._query_user_allowed_remedys_user_task_remedy_request_body.user_id = user_id
        return self

    def remedy_date(self, remedy_date: int) -> "QueryUserAllowedRemedysUserTaskRemedyRequestBodyBuilder":
        self._query_user_allowed_remedys_user_task_remedy_request_body.remedy_date = remedy_date
        return self

    def build(self) -> "QueryUserAllowedRemedysUserTaskRemedyRequestBody":
        return self._query_user_allowed_remedys_user_task_remedy_request_body
