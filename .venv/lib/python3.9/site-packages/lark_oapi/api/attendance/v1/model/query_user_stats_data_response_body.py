# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user_stats_data import UserStatsData


class QueryUserStatsDataResponseBody(object):
    _types = {
        "user_datas": List[UserStatsData],
        "invalid_user_list": List[str],
    }

    def __init__(self, d=None):
        self.user_datas: Optional[List[UserStatsData]] = None
        self.invalid_user_list: Optional[List[str]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryUserStatsDataResponseBodyBuilder":
        return QueryUserStatsDataResponseBodyBuilder()


class QueryUserStatsDataResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._query_user_stats_data_response_body = QueryUserStatsDataResponseBody()

    def user_datas(self, user_datas: List[UserStatsData]) -> "QueryUserStatsDataResponseBodyBuilder":
        self._query_user_stats_data_response_body.user_datas = user_datas
        return self

    def invalid_user_list(self, invalid_user_list: List[str]) -> "QueryUserStatsDataResponseBodyBuilder":
        self._query_user_stats_data_response_body.invalid_user_list = invalid_user_list
        return self

    def build(self) -> "QueryUserStatsDataResponseBody":
        return self._query_user_stats_data_response_body
