# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class DocImage(object):
    _types = {
        "image_key": str,
    }

    def __init__(self, d=None):
        self.image_key: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DocImageBuilder":
        return DocImageBuilder()


class DocImageBuilder(object):
    def __init__(self) -> None:
        self._doc_image = DocImage()

    def image_key(self, image_key: str) -> "DocImageBuilder":
        self._doc_image.image_key = image_key
        return self

    def build(self) -> "DocImage":
        return self._doc_image
