# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .draft import Draft


class CreateDraftResponseBody(object):
    _types = {
        "draft": Draft,
    }

    def __init__(self, d=None):
        self.draft: Optional[Draft] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateDraftResponseBodyBuilder":
        return CreateDraftResponseBodyBuilder()


class CreateDraftResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_draft_response_body = CreateDraftResponseBody()

    def draft(self, draft: Draft) -> "CreateDraftResponseBodyBuilder":
        self._create_draft_response_body.draft = draft
        return self

    def build(self) -> "CreateDraftResponseBody":
        return self._create_draft_response_body
