# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .text import Text


class ConnectorCaption(object):
    _types = {
        "data": List[Text],
    }

    def __init__(self, d=None):
        self.data: Optional[List[Text]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ConnectorCaptionBuilder":
        return ConnectorCaptionBuilder()


class ConnectorCaptionBuilder(object):
    def __init__(self) -> None:
        self._connector_caption = ConnectorCaption()

    def data(self, data: List[Text]) -> "ConnectorCaptionBuilder":
        self._connector_caption.data = data
        return self

    def build(self) -> "ConnectorCaption":
        return self._connector_caption
