# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .whiteboard_node import WhiteboardNode


class CreateWhiteboardNodeRequestBody(object):
    _types = {
        "nodes": List[WhiteboardNode],
    }

    def __init__(self, d=None):
        self.nodes: Optional[List[WhiteboardNode]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateWhiteboardNodeRequestBodyBuilder":
        return CreateWhiteboardNodeRequestBodyBuilder()


class CreateWhiteboardNodeRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._create_whiteboard_node_request_body = CreateWhiteboardNodeRequestBody()

    def nodes(self, nodes: List[WhiteboardNode]) -> "CreateWhiteboardNodeRequestBodyBuilder":
        self._create_whiteboard_node_request_body.nodes = nodes
        return self

    def build(self) -> "CreateWhiteboardNodeRequestBody":
        return self._create_whiteboard_node_request_body
