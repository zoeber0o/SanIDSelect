# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class Lifeline(object):
    _types = {
        "size": float,
        "type": str,
    }

    def __init__(self, d=None):
        self.size: Optional[float] = None
        self.type: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "LifelineBuilder":
        return LifelineBuilder()


class LifelineBuilder(object):
    def __init__(self) -> None:
        self._lifeline = Lifeline()

    def size(self, size: float) -> "LifelineBuilder":
        self._lifeline.size = size
        return self

    def type(self, type: str) -> "LifelineBuilder":
        self._lifeline.type = type
        return self

    def build(self) -> "Lifeline":
        return self._lifeline
