# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class ThemeWhiteboardRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.whiteboard_id: Optional[str] = None

    @staticmethod
    def builder() -> "ThemeWhiteboardRequestBuilder":
        return ThemeWhiteboardRequestBuilder()


class ThemeWhiteboardRequestBuilder(object):

    def __init__(self) -> None:
        theme_whiteboard_request = ThemeWhiteboardRequest()
        theme_whiteboard_request.http_method = HttpMethod.GET
        theme_whiteboard_request.uri = "/open-apis/board/v1/whiteboards/:whiteboard_id/theme"
        theme_whiteboard_request.token_types = {AccessTokenType.USER, AccessTokenType.TENANT}
        self._theme_whiteboard_request: ThemeWhiteboardRequest = theme_whiteboard_request

    def whiteboard_id(self, whiteboard_id: str) -> "ThemeWhiteboardRequestBuilder":
        self._theme_whiteboard_request.whiteboard_id = whiteboard_id
        self._theme_whiteboard_request.paths["whiteboard_id"] = str(whiteboard_id)
        return self

    def build(self) -> ThemeWhiteboardRequest:
        return self._theme_whiteboard_request
