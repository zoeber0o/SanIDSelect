# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .common import Common


class GetBatchCountryRegionRequestBody(object):
    _types = {
        "common": Common,
    }

    def __init__(self, d=None):
        self.common: Optional[Common] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetBatchCountryRegionRequestBodyBuilder":
        return GetBatchCountryRegionRequestBodyBuilder()


class GetBatchCountryRegionRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._get_batch_country_region_request_body = GetBatchCountryRegionRequestBody()

    def common(self, common: Common) -> "GetBatchCountryRegionRequestBodyBuilder":
        self._get_batch_country_region_request_body.common = common
        return self

    def build(self) -> "GetBatchCountryRegionRequestBody":
        return self._get_batch_country_region_request_body
