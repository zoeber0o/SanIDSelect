# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .common import Common


class TimeZone(object):
    _types = {
        "update_by": str,
        "create_by": str,
        "update_time": str,
        "create_time": str,
        "time_zone_id": str,
        "name": Common,
        "utc_offset": str,
        "mdm_code": str,
        "remark": str,
        "update_reason": str,
        "status": str,
    }

    def __init__(self, d=None):
        self.update_by: Optional[str] = None
        self.create_by: Optional[str] = None
        self.update_time: Optional[str] = None
        self.create_time: Optional[str] = None
        self.time_zone_id: Optional[str] = None
        self.name: Optional[Common] = None
        self.utc_offset: Optional[str] = None
        self.mdm_code: Optional[str] = None
        self.remark: Optional[str] = None
        self.update_reason: Optional[str] = None
        self.status: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "TimeZoneBuilder":
        return TimeZoneBuilder()


class TimeZoneBuilder(object):
    def __init__(self) -> None:
        self._time_zone = TimeZone()

    def update_by(self, update_by: str) -> "TimeZoneBuilder":
        self._time_zone.update_by = update_by
        return self

    def create_by(self, create_by: str) -> "TimeZoneBuilder":
        self._time_zone.create_by = create_by
        return self

    def update_time(self, update_time: str) -> "TimeZoneBuilder":
        self._time_zone.update_time = update_time
        return self

    def create_time(self, create_time: str) -> "TimeZoneBuilder":
        self._time_zone.create_time = create_time
        return self

    def time_zone_id(self, time_zone_id: str) -> "TimeZoneBuilder":
        self._time_zone.time_zone_id = time_zone_id
        return self

    def name(self, name: Common) -> "TimeZoneBuilder":
        self._time_zone.name = name
        return self

    def utc_offset(self, utc_offset: str) -> "TimeZoneBuilder":
        self._time_zone.utc_offset = utc_offset
        return self

    def mdm_code(self, mdm_code: str) -> "TimeZoneBuilder":
        self._time_zone.mdm_code = mdm_code
        return self

    def remark(self, remark: str) -> "TimeZoneBuilder":
        self._time_zone.remark = remark
        return self

    def update_reason(self, update_reason: str) -> "TimeZoneBuilder":
        self._time_zone.update_reason = update_reason
        return self

    def status(self, status: str) -> "TimeZoneBuilder":
        self._time_zone.status = status
        return self

    def build(self) -> "TimeZone":
        return self._time_zone
