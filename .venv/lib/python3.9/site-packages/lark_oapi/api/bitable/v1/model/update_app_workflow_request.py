# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .update_app_workflow_request_body import UpdateAppWorkflowRequestBody


class UpdateAppWorkflowRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.app_token: Optional[str] = None
        self.workflow_id: Optional[str] = None
        self.request_body: Optional[UpdateAppWorkflowRequestBody] = None

    @staticmethod
    def builder() -> "UpdateAppWorkflowRequestBuilder":
        return UpdateAppWorkflowRequestBuilder()


class UpdateAppWorkflowRequestBuilder(object):

    def __init__(self) -> None:
        update_app_workflow_request = UpdateAppWorkflowRequest()
        update_app_workflow_request.http_method = HttpMethod.PUT
        update_app_workflow_request.uri = "/open-apis/bitable/v1/apps/:app_token/workflows/:workflow_id"
        update_app_workflow_request.token_types = {AccessTokenType.USER, AccessTokenType.TENANT}
        self._update_app_workflow_request: UpdateAppWorkflowRequest = update_app_workflow_request

    def app_token(self, app_token: str) -> "UpdateAppWorkflowRequestBuilder":
        self._update_app_workflow_request.app_token = app_token
        self._update_app_workflow_request.paths["app_token"] = str(app_token)
        return self

    def workflow_id(self, workflow_id: str) -> "UpdateAppWorkflowRequestBuilder":
        self._update_app_workflow_request.workflow_id = workflow_id
        self._update_app_workflow_request.paths["workflow_id"] = str(workflow_id)
        return self

    def request_body(self, request_body: UpdateAppWorkflowRequestBody) -> "UpdateAppWorkflowRequestBuilder":
        self._update_app_workflow_request.request_body = request_body
        self._update_app_workflow_request.body = request_body
        return self

    def build(self) -> UpdateAppWorkflowRequest:
        return self._update_app_workflow_request
