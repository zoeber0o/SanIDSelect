# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class AppTableFieldPropertyFilterInfoCondition(object):
    _types = {
        "field_id": str,
        "operator": str,
        "value": str,
        "condition_id": str,
        "field_type": int,
    }

    def __init__(self, d=None):
        self.field_id: Optional[str] = None
        self.operator: Optional[str] = None
        self.value: Optional[str] = None
        self.condition_id: Optional[str] = None
        self.field_type: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "AppTableFieldPropertyFilterInfoConditionBuilder":
        return AppTableFieldPropertyFilterInfoConditionBuilder()


class AppTableFieldPropertyFilterInfoConditionBuilder(object):
    def __init__(self) -> None:
        self._app_table_field_property_filter_info_condition = AppTableFieldPropertyFilterInfoCondition()

    def field_id(self, field_id: str) -> "AppTableFieldPropertyFilterInfoConditionBuilder":
        self._app_table_field_property_filter_info_condition.field_id = field_id
        return self

    def operator(self, operator: str) -> "AppTableFieldPropertyFilterInfoConditionBuilder":
        self._app_table_field_property_filter_info_condition.operator = operator
        return self

    def value(self, value: str) -> "AppTableFieldPropertyFilterInfoConditionBuilder":
        self._app_table_field_property_filter_info_condition.value = value
        return self

    def condition_id(self, condition_id: str) -> "AppTableFieldPropertyFilterInfoConditionBuilder":
        self._app_table_field_property_filter_info_condition.condition_id = condition_id
        return self

    def field_type(self, field_type: int) -> "AppTableFieldPropertyFilterInfoConditionBuilder":
        self._app_table_field_property_filter_info_condition.field_type = field_type
        return self

    def build(self) -> "AppTableFieldPropertyFilterInfoCondition":
        return self._app_table_field_property_filter_info_condition
