# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class AppBlockWorkflow(object):
    _types = {
        "workflow_id": str,
        "title": str,
        "status": str,
    }

    def __init__(self, d=None):
        self.workflow_id: Optional[str] = None
        self.title: Optional[str] = None
        self.status: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "AppBlockWorkflowBuilder":
        return AppBlockWorkflowBuilder()


class AppBlockWorkflowBuilder(object):
    def __init__(self) -> None:
        self._app_block_workflow = AppBlockWorkflow()

    def workflow_id(self, workflow_id: str) -> "AppBlockWorkflowBuilder":
        self._app_block_workflow.workflow_id = workflow_id
        return self

    def title(self, title: str) -> "AppBlockWorkflowBuilder":
        self._app_block_workflow.title = title
        return self

    def status(self, status: str) -> "AppBlockWorkflowBuilder":
        self._app_block_workflow.status = status
        return self

    def build(self) -> "AppBlockWorkflow":
        return self._app_block_workflow
