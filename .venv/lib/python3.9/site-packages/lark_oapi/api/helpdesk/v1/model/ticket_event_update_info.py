# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class TicketEventUpdateInfo(object):
    _types = {
        "stage": int,
        "status": int,
        "updated_at": int,
    }

    def __init__(self, d=None):
        self.stage: Optional[int] = None
        self.status: Optional[int] = None
        self.updated_at: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "TicketEventUpdateInfoBuilder":
        return TicketEventUpdateInfoBuilder()


class TicketEventUpdateInfoBuilder(object):
    def __init__(self) -> None:
        self._ticket_event_update_info = TicketEventUpdateInfo()

    def stage(self, stage: int) -> "TicketEventUpdateInfoBuilder":
        self._ticket_event_update_info.stage = stage
        return self

    def status(self, status: int) -> "TicketEventUpdateInfoBuilder":
        self._ticket_event_update_info.status = status
        return self

    def updated_at(self, updated_at: int) -> "TicketEventUpdateInfoBuilder":
        self._ticket_event_update_info.updated_at = updated_at
        return self

    def build(self) -> "TicketEventUpdateInfo":
        return self._ticket_event_update_info
