# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .connector_log_data import ConnectorLogData


class ConnectorLog(object):
    _types = {
        "log_data": List[ConnectorLogData],
    }

    def __init__(self, d=None):
        self.log_data: Optional[List[ConnectorLogData]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ConnectorLogBuilder":
        return ConnectorLogBuilder()


class ConnectorLogBuilder(object):
    def __init__(self) -> None:
        self._connector_log = ConnectorLog()

    def log_data(self, log_data: List[ConnectorLogData]) -> "ConnectorLogBuilder":
        self._connector_log.log_data = log_data
        return self

    def build(self) -> "ConnectorLog":
        return self._connector_log
