# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class SwapShiftDetail(object):
    _types = {
        "date": str,
        "return_date": str,
        "shfit_id": str,
    }

    def __init__(self, d=None):
        self.date: Optional[str] = None
        self.return_date: Optional[str] = None
        self.shfit_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SwapShiftDetailBuilder":
        return SwapShiftDetailBuilder()


class SwapShiftDetailBuilder(object):
    def __init__(self) -> None:
        self._swap_shift_detail = SwapShiftDetail()

    def date(self, date: str) -> "SwapShiftDetailBuilder":
        self._swap_shift_detail.date = date
        return self

    def return_date(self, return_date: str) -> "SwapShiftDetailBuilder":
        self._swap_shift_detail.return_date = return_date
        return self

    def shfit_id(self, shfit_id: str) -> "SwapShiftDetailBuilder":
        self._swap_shift_detail.shfit_id = shfit_id
        return self

    def build(self) -> "SwapShiftDetail":
        return self._swap_shift_detail
