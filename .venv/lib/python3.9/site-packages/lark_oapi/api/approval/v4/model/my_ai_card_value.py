# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MyAiCardValue(object):
    _types = {
        "body": str,
        "handle": str,
    }

    def __init__(self, d=None):
        self.body: Optional[str] = None
        self.handle: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MyAiCardValueBuilder":
        return MyAiCardValueBuilder()


class MyAiCardValueBuilder(object):
    def __init__(self) -> None:
        self._my_ai_card_value = MyAiCardValue()

    def body(self, body: str) -> "MyAiCardValueBuilder":
        self._my_ai_card_value.body = body
        return self

    def handle(self, handle: str) -> "MyAiCardValueBuilder":
        self._my_ai_card_value.handle = handle
        return self

    def build(self) -> "MyAiCardValue":
        return self._my_ai_card_value
