# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .comment import Comment


class ListInstanceCommentResponseBody(object):
    _types = {
        "comments": List[Comment],
    }

    def __init__(self, d=None):
        self.comments: Optional[List[Comment]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ListInstanceCommentResponseBodyBuilder":
        return ListInstanceCommentResponseBodyBuilder()


class ListInstanceCommentResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._list_instance_comment_response_body = ListInstanceCommentResponseBody()

    def comments(self, comments: List[Comment]) -> "ListInstanceCommentResponseBodyBuilder":
        self._list_instance_comment_response_body.comments = comments
        return self

    def build(self) -> "ListInstanceCommentResponseBody":
        return self._list_instance_comment_response_body
