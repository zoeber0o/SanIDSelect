# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MatchInfo(object):
    _types = {
        "entity_id": str,
        "type": int,
    }

    def __init__(self, d=None):
        self.entity_id: Optional[str] = None
        self.type: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MatchInfoBuilder":
        return MatchInfoBuilder()


class MatchInfoBuilder(object):
    def __init__(self) -> None:
        self._match_info = MatchInfo()

    def entity_id(self, entity_id: str) -> "MatchInfoBuilder":
        self._match_info.entity_id = entity_id
        return self

    def type(self, type: int) -> "MatchInfoBuilder":
        self._match_info.type = type
        return self

    def build(self) -> "MatchInfo":
        return self._match_info
