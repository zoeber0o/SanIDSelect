# Code generated by Lark OpenAPI.

from typing import Optional

from lark_oapi.core.construct import init


class MyAiAvPluginCallbackInfo(object):
    _types = {
        "biz_id": str,
        "biz_type": int,
        "object_id": str,
        "type": str,
    }

    def __init__(self, d=None):
        self.biz_id: Optional[str] = None
        self.biz_type: Optional[int] = None
        self.object_id: Optional[str] = None
        self.type: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MyAiAvPluginCallbackInfoBuilder":
        return MyAiAvPluginCallbackInfoBuilder()


class MyAiAvPluginCallbackInfoBuilder(object):
    def __init__(self) -> None:
        self._my_ai_av_plugin_callback_info = MyAiAvPluginCallbackInfo()

    def biz_id(self, biz_id: str) -> "MyAiAvPluginCallbackInfoBuilder":
        self._my_ai_av_plugin_callback_info.biz_id = biz_id
        return self

    def biz_type(self, biz_type: int) -> "MyAiAvPluginCallbackInfoBuilder":
        self._my_ai_av_plugin_callback_info.biz_type = biz_type
        return self

    def object_id(self, object_id: str) -> "MyAiAvPluginCallbackInfoBuilder":
        self._my_ai_av_plugin_callback_info.object_id = object_id
        return self

    def type(self, type: str) -> "MyAiAvPluginCallbackInfoBuilder":
        self._my_ai_av_plugin_callback_info.type = type
        return self

    def build(self) -> "MyAiAvPluginCallbackInfo":
        return self._my_ai_av_plugin_callback_info
