# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .disable_inform_config import DisableInformConfig


class PatchReserveConfigDisableInformRequestBody(object):
    _types = {
        "scope_type": int,
        "disable_inform": DisableInformConfig,
    }

    def __init__(self, d=None):
        self.scope_type: Optional[int] = None
        self.disable_inform: Optional[DisableInformConfig] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PatchReserveConfigDisableInformRequestBodyBuilder":
        return PatchReserveConfigDisableInformRequestBodyBuilder()


class PatchReserveConfigDisableInformRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._patch_reserve_config_disable_inform_request_body = PatchReserveConfigDisableInformRequestBody()

    def scope_type(self, scope_type: int) -> "PatchReserveConfigDisableInformRequestBodyBuilder":
        self._patch_reserve_config_disable_inform_request_body.scope_type = scope_type
        return self

    def disable_inform(self,
                       disable_inform: DisableInformConfig) -> "PatchReserveConfigDisableInformRequestBodyBuilder":
        self._patch_reserve_config_disable_inform_request_body.disable_inform = disable_inform
        return self

    def build(self) -> "PatchReserveConfigDisableInformRequestBody":
        return self._patch_reserve_config_disable_inform_request_body
