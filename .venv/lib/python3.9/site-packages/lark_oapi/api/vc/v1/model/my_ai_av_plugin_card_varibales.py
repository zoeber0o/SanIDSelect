# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MyAiAvPluginCardVaribales(object):
    _types = {
        "content": str,
    }

    def __init__(self, d=None):
        self.content: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MyAiAvPluginCardVaribalesBuilder":
        return MyAiAvPluginCardVaribalesBuilder()


class MyAiAvPluginCardVaribalesBuilder(object):
    def __init__(self) -> None:
        self._my_ai_av_plugin_card_varibales = MyAiAvPluginCardVaribales()

    def content(self, content: str) -> "MyAiAvPluginCardVaribalesBuilder":
        self._my_ai_av_plugin_card_varibales.content = content
        return self

    def build(self) -> "MyAiAvPluginCardVaribales":
        return self._my_ai_av_plugin_card_varibales
