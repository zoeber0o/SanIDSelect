# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MyAiVcRoomExtra(object):
    _types = {
        "calendar_info": str,
    }

    def __init__(self, d=None):
        self.calendar_info: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MyAiVcRoomExtraBuilder":
        return MyAiVcRoomExtraBuilder()


class MyAiVcRoomExtraBuilder(object):
    def __init__(self) -> None:
        self._my_ai_vc_room_extra = MyAiVcRoomExtra()

    def calendar_info(self, calendar_info: str) -> "MyAiVcRoomExtraBuilder":
        self._my_ai_vc_room_extra.calendar_info = calendar_info
        return self

    def build(self) -> "MyAiVcRoomExtra":
        return self._my_ai_vc_room_extra
