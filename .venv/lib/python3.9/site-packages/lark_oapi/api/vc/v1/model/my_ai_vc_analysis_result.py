# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MyAiVcAnalysisResult(object):
    _types = {
        "reply": str,
    }

    def __init__(self, d=None):
        self.reply: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MyAiVcAnalysisResultBuilder":
        return MyAiVcAnalysisResultBuilder()


class MyAiVcAnalysisResultBuilder(object):
    def __init__(self) -> None:
        self._my_ai_vc_analysis_result = MyAiVcAnalysisResult()

    def reply(self, reply: str) -> "MyAiVcAnalysisResultBuilder":
        self._my_ai_vc_analysis_result.reply = reply
        return self

    def build(self) -> "MyAiVcAnalysisResult":
        return self._my_ai_vc_analysis_result
