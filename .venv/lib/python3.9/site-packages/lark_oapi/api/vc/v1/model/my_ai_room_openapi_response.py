# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MyAiRoomOpenapiResponse(object):
    _types = {
        "response_type": int,
        "schedule_event_id": str,
        "other_msg": str,
        "oapi_msg": str,
    }

    def __init__(self, d=None):
        self.response_type: Optional[int] = None
        self.schedule_event_id: Optional[str] = None
        self.other_msg: Optional[str] = None
        self.oapi_msg: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MyAiRoomOpenapiResponseBuilder":
        return MyAiRoomOpenapiResponseBuilder()


class MyAiRoomOpenapiResponseBuilder(object):
    def __init__(self) -> None:
        self._my_ai_room_openapi_response = MyAiRoomOpenapiResponse()

    def response_type(self, response_type: int) -> "MyAiRoomOpenapiResponseBuilder":
        self._my_ai_room_openapi_response.response_type = response_type
        return self

    def schedule_event_id(self, schedule_event_id: str) -> "MyAiRoomOpenapiResponseBuilder":
        self._my_ai_room_openapi_response.schedule_event_id = schedule_event_id
        return self

    def other_msg(self, other_msg: str) -> "MyAiRoomOpenapiResponseBuilder":
        self._my_ai_room_openapi_response.other_msg = other_msg
        return self

    def oapi_msg(self, oapi_msg: str) -> "MyAiRoomOpenapiResponseBuilder":
        self._my_ai_room_openapi_response.oapi_msg = oapi_msg
        return self

    def build(self) -> "MyAiRoomOpenapiResponse":
        return self._my_ai_room_openapi_response
