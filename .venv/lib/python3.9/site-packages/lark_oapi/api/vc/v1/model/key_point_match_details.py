# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .key_point_match_detail import KeyPointMatchDetail


class KeyPointMatchDetails(object):
    _types = {
        "key_point_match_details": List[KeyPointMatchDetail],
    }

    def __init__(self, d=None):
        self.key_point_match_details: Optional[List[KeyPointMatchDetail]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "KeyPointMatchDetailsBuilder":
        return KeyPointMatchDetailsBuilder()


class KeyPointMatchDetailsBuilder(object):
    def __init__(self) -> None:
        self._key_point_match_details = KeyPointMatchDetails()

    def key_point_match_details(self,
                                key_point_match_details: List[KeyPointMatchDetail]) -> "KeyPointMatchDetailsBuilder":
        self._key_point_match_details.key_point_match_details = key_point_match_details
        return self

    def build(self) -> "KeyPointMatchDetails":
        return self._key_point_match_details
