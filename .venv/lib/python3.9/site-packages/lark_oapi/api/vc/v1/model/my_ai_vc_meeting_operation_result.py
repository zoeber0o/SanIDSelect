# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MyAiVcMeetingOperationResult(object):
    _types = {
        "meeting_operation_reply": str,
    }

    def __init__(self, d=None):
        self.meeting_operation_reply: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MyAiVcMeetingOperationResultBuilder":
        return MyAiVcMeetingOperationResultBuilder()


class MyAiVcMeetingOperationResultBuilder(object):
    def __init__(self) -> None:
        self._my_ai_vc_meeting_operation_result = MyAiVcMeetingOperationResult()

    def meeting_operation_reply(self, meeting_operation_reply: str) -> "MyAiVcMeetingOperationResultBuilder":
        self._my_ai_vc_meeting_operation_result.meeting_operation_reply = meeting_operation_reply
        return self

    def build(self) -> "MyAiVcMeetingOperationResult":
        return self._my_ai_vc_meeting_operation_result
