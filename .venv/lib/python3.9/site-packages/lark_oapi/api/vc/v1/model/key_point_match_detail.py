# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class KeyPointMatchDetail(object):
    _types = {
        "start_timestamp": str,
        "matched_text": str,
    }

    def __init__(self, d=None):
        self.start_timestamp: Optional[str] = None
        self.matched_text: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "KeyPointMatchDetailBuilder":
        return KeyPointMatchDetailBuilder()


class KeyPointMatchDetailBuilder(object):
    def __init__(self) -> None:
        self._key_point_match_detail = KeyPointMatchDetail()

    def start_timestamp(self, start_timestamp: str) -> "KeyPointMatchDetailBuilder":
        self._key_point_match_detail.start_timestamp = start_timestamp
        return self

    def matched_text(self, matched_text: str) -> "KeyPointMatchDetailBuilder":
        self._key_point_match_detail.matched_text = matched_text
        return self

    def build(self) -> "KeyPointMatchDetail":
        return self._key_point_match_detail
