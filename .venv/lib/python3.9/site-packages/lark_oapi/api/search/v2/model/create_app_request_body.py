# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class CreateAppRequestBody(object):
    _types = {
        "query": str,
    }

    def __init__(self, d=None):
        self.query: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateAppRequestBodyBuilder":
        return CreateAppRequestBodyBuilder()


class CreateAppRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._create_app_request_body = CreateAppRequestBody()

    def query(self, query: str) -> "CreateAppRequestBodyBuilder":
        self._create_app_request_body.query = query
        return self

    def build(self) -> "CreateAppRequestBody":
        return self._create_app_request_body
