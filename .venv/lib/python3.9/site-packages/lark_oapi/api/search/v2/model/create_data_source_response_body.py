# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .data_source import DataSource


class CreateDataSourceResponseBody(object):
    _types = {
        "data_source": DataSource,
    }

    def __init__(self, d=None):
        self.data_source: Optional[DataSource] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateDataSourceResponseBodyBuilder":
        return CreateDataSourceResponseBodyBuilder()


class CreateDataSourceResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._create_data_source_response_body = CreateDataSourceResponseBody()

    def data_source(self, data_source: DataSource) -> "CreateDataSourceResponseBodyBuilder":
        self._create_data_source_response_body.data_source = data_source
        return self

    def build(self) -> "CreateDataSourceResponseBody":
        return self._create_data_source_response_body
