# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .schema import Schema


class PatchSchemaResponseBody(object):
    _types = {
        "schema": Schema,
    }

    def __init__(self, d=None):
        self.schema: Optional[Schema] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PatchSchemaResponseBodyBuilder":
        return PatchSchemaResponseBodyBuilder()


class PatchSchemaResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._patch_schema_response_body = PatchSchemaResponseBody()

    def schema(self, schema: Schema) -> "PatchSchemaResponseBodyBuilder":
        self._patch_schema_response_body.schema = schema
        return self

    def build(self) -> "PatchSchemaResponseBody":
        return self._patch_schema_response_body
