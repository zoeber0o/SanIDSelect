# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .item import Item


class GetDataSourceItemResponseBody(object):
    _types = {
        "item": Item,
    }

    def __init__(self, d=None):
        self.item: Optional[Item] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetDataSourceItemResponseBodyBuilder":
        return GetDataSourceItemResponseBodyBuilder()


class GetDataSourceItemResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_data_source_item_response_body = GetDataSourceItemResponseBody()

    def item(self, item: Item) -> "GetDataSourceItemResponseBodyBuilder":
        self._get_data_source_item_response_body.item = item
        return self

    def build(self) -> "GetDataSourceItemResponseBody":
        return self._get_data_source_item_response_body
