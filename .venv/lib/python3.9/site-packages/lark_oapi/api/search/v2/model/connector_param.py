# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ConnectorParam(object):
    _types = {
        "callback_user_id_type": int,
        "callback_endpoint": str,
    }

    def __init__(self, d=None):
        self.callback_user_id_type: Optional[int] = None
        self.callback_endpoint: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ConnectorParamBuilder":
        return ConnectorParamBuilder()


class ConnectorParamBuilder(object):
    def __init__(self) -> None:
        self._connector_param = ConnectorParam()

    def callback_user_id_type(self, callback_user_id_type: int) -> "ConnectorParamBuilder":
        self._connector_param.callback_user_id_type = callback_user_id_type
        return self

    def callback_endpoint(self, callback_endpoint: str) -> "ConnectorParamBuilder":
        self._connector_param.callback_endpoint = callback_endpoint
        return self

    def build(self) -> "ConnectorParam":
        return self._connector_param
