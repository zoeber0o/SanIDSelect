# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class KnowledgeSourceRequestExtra(object):
    _types = {
        "locale": str,
        "timezone": str,
    }

    def __init__(self, d=None):
        self.locale: Optional[str] = None
        self.timezone: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "KnowledgeSourceRequestExtraBuilder":
        return KnowledgeSourceRequestExtraBuilder()


class KnowledgeSourceRequestExtraBuilder(object):
    def __init__(self) -> None:
        self._knowledge_source_request_extra = KnowledgeSourceRequestExtra()

    def locale(self, locale: str) -> "KnowledgeSourceRequestExtraBuilder":
        self._knowledge_source_request_extra.locale = locale
        return self

    def timezone(self, timezone: str) -> "KnowledgeSourceRequestExtraBuilder":
        self._knowledge_source_request_extra.timezone = timezone
        return self

    def build(self) -> "KnowledgeSourceRequestExtra":
        return self._knowledge_source_request_extra
