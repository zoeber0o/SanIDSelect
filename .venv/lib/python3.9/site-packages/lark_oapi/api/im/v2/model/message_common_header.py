# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class MessageCommonHeader(object):
    _types = {
        "bot_id": str,
    }

    def __init__(self, d=None):
        self.bot_id: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MessageCommonHeaderBuilder":
        return MessageCommonHeaderBuilder()


class MessageCommonHeaderBuilder(object):
    def __init__(self) -> None:
        self._message_common_header = MessageCommonHeader()

    def bot_id(self, bot_id: str) -> "MessageCommonHeaderBuilder":
        self._message_common_header.bot_id = bot_id
        return self

    def build(self) -> "MessageCommonHeader":
        return self._message_common_header
