# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OpenAppFeedLink(object):
    _types = {
        "link": str,
    }

    def __init__(self, d=None):
        self.link: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OpenAppFeedLinkBuilder":
        return OpenAppFeedLinkBuilder()


class OpenAppFeedLinkBuilder(object):
    def __init__(self) -> None:
        self._open_app_feed_link = OpenAppFeedLink()

    def link(self, link: str) -> "OpenAppFeedLinkBuilder":
        self._open_app_feed_link.link = link
        return self

    def build(self) -> "OpenAppFeedLink":
        return self._open_app_feed_link
