# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .delete_app_feed_card_batch_request_body import DeleteAppFeedCardBatchRequestBody


class DeleteAppFeedCardBatchRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.user_id_type: Optional[str] = None
        self.request_body: Optional[DeleteAppFeedCardBatchRequestBody] = None

    @staticmethod
    def builder() -> "DeleteAppFeedCardBatchRequestBuilder":
        return DeleteAppFeedCardBatchRequestBuilder()


class DeleteAppFeedCardBatchRequestBuilder(object):

    def __init__(self) -> None:
        delete_app_feed_card_batch_request = DeleteAppFeedCardBatchRequest()
        delete_app_feed_card_batch_request.http_method = HttpMethod.DELETE
        delete_app_feed_card_batch_request.uri = "/open-apis/im/v2/app_feed_card/batch"
        delete_app_feed_card_batch_request.token_types = {AccessTokenType.TENANT}
        self._delete_app_feed_card_batch_request: DeleteAppFeedCardBatchRequest = delete_app_feed_card_batch_request

    def user_id_type(self, user_id_type: str) -> "DeleteAppFeedCardBatchRequestBuilder":
        self._delete_app_feed_card_batch_request.user_id_type = user_id_type
        self._delete_app_feed_card_batch_request.add_query("user_id_type", user_id_type)
        return self

    def request_body(self, request_body: DeleteAppFeedCardBatchRequestBody) -> "DeleteAppFeedCardBatchRequestBuilder":
        self._delete_app_feed_card_batch_request.request_body = request_body
        self._delete_app_feed_card_batch_request.body = request_body
        return self

    def build(self) -> DeleteAppFeedCardBatchRequest:
        return self._delete_app_feed_card_batch_request
