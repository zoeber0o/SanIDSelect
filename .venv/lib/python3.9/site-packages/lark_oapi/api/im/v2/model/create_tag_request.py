# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType
from .create_tag_request_body import CreateTagRequestBody


class CreateTagRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.request_body: Optional[CreateTagRequestBody] = None

    @staticmethod
    def builder() -> "CreateTagRequestBuilder":
        return CreateTagRequestBuilder()


class CreateTagRequestBuilder(object):

    def __init__(self) -> None:
        create_tag_request = CreateTagRequest()
        create_tag_request.http_method = HttpMethod.POST
        create_tag_request.uri = "/open-apis/im/v2/tags"
        create_tag_request.token_types = {AccessTokenType.TENANT}
        self._create_tag_request: CreateTagRequest = create_tag_request

    def request_body(self, request_body: CreateTagRequestBody) -> "CreateTagRequestBuilder":
        self._create_tag_request.request_body = request_body
        self._create_tag_request.body = request_body
        return self

    def build(self) -> CreateTagRequest:
        return self._create_tag_request
