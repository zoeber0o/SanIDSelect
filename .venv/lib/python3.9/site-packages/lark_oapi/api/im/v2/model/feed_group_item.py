# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class FeedGroupItem(object):
    _types = {
        "feed_id": str,
        "feed_type": str,
    }

    def __init__(self, d=None):
        self.feed_id: Optional[str] = None
        self.feed_type: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "FeedGroupItemBuilder":
        return FeedGroupItemBuilder()


class FeedGroupItemBuilder(object):
    def __init__(self) -> None:
        self._feed_group_item = FeedGroupItem()

    def feed_id(self, feed_id: str) -> "FeedGroupItemBuilder":
        self._feed_group_item.feed_id = feed_id
        return self

    def feed_type(self, feed_type: str) -> "FeedGroupItemBuilder":
        self._feed_group_item.feed_type = feed_type
        return self

    def build(self) -> "FeedGroupItem":
        return self._feed_group_item
