# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class FeedCardSettingUpdater(object):
    _types = {
        "feed_card_id": str,
        "read_timestamp": str,
        "mute_with_system_message": bool,
    }

    def __init__(self, d=None):
        self.feed_card_id: Optional[str] = None
        self.read_timestamp: Optional[str] = None
        self.mute_with_system_message: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "FeedCardSettingUpdaterBuilder":
        return FeedCardSettingUpdaterBuilder()


class FeedCardSettingUpdaterBuilder(object):
    def __init__(self) -> None:
        self._feed_card_setting_updater = FeedCardSettingUpdater()

    def feed_card_id(self, feed_card_id: str) -> "FeedCardSettingUpdaterBuilder":
        self._feed_card_setting_updater.feed_card_id = feed_card_id
        return self

    def read_timestamp(self, read_timestamp: str) -> "FeedCardSettingUpdaterBuilder":
        self._feed_card_setting_updater.read_timestamp = read_timestamp
        return self

    def mute_with_system_message(self, mute_with_system_message: bool) -> "FeedCardSettingUpdaterBuilder":
        self._feed_card_setting_updater.mute_with_system_message = mute_with_system_message
        return self

    def build(self) -> "FeedCardSettingUpdater":
        return self._feed_card_setting_updater
