# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .batch_message_send_progress import BatchMessageSendProgress
from .batch_message_recall_progress import BatchMessageRecallProgress


class GetProgressBatchMessageResponseBody(object):
    _types = {
        "batch_message_send_progress": BatchMessageSendProgress,
        "batch_message_recall_progress": BatchMessageRecallProgress,
    }

    def __init__(self, d=None):
        self.batch_message_send_progress: Optional[BatchMessageSendProgress] = None
        self.batch_message_recall_progress: Optional[BatchMessageRecallProgress] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetProgressBatchMessageResponseBodyBuilder":
        return GetProgressBatchMessageResponseBodyBuilder()


class GetProgressBatchMessageResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_progress_batch_message_response_body = GetProgressBatchMessageResponseBody()

    def batch_message_send_progress(self,
                                    batch_message_send_progress: BatchMessageSendProgress) -> "GetProgressBatchMessageResponseBodyBuilder":
        self._get_progress_batch_message_response_body.batch_message_send_progress = batch_message_send_progress
        return self

    def batch_message_recall_progress(self,
                                      batch_message_recall_progress: BatchMessageRecallProgress) -> "GetProgressBatchMessageResponseBodyBuilder":
        self._get_progress_batch_message_response_body.batch_message_recall_progress = batch_message_recall_progress
        return self

    def build(self) -> "GetProgressBatchMessageResponseBody":
        return self._get_progress_batch_message_response_body
