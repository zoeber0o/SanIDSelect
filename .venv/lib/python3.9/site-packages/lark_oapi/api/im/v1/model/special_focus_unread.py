# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class SpecialFocusUnread(object):
    _types = {
        "id": str,
        "id_type": str,
        "unread_count": str,
    }

    def __init__(self, d=None):
        self.id: Optional[str] = None
        self.id_type: Optional[str] = None
        self.unread_count: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SpecialFocusUnreadBuilder":
        return SpecialFocusUnreadBuilder()


class SpecialFocusUnreadBuilder(object):
    def __init__(self) -> None:
        self._special_focus_unread = SpecialFocusUnread()

    def id(self, id: str) -> "SpecialFocusUnreadBuilder":
        self._special_focus_unread.id = id
        return self

    def id_type(self, id_type: str) -> "SpecialFocusUnreadBuilder":
        self._special_focus_unread.id_type = id_type
        return self

    def unread_count(self, unread_count: str) -> "SpecialFocusUnreadBuilder":
        self._special_focus_unread.unread_count = unread_count
        return self

    def build(self) -> "SpecialFocusUnread":
        return self._special_focus_unread
