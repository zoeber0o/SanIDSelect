# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ListModerator(object):
    _types = {
        "user_id_type": str,
        "user_id": str,
        "tenant_key": str,
    }

    def __init__(self, d=None):
        self.user_id_type: Optional[str] = None
        self.user_id: Optional[str] = None
        self.tenant_key: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ListModeratorBuilder":
        return ListModeratorBuilder()


class ListModeratorBuilder(object):
    def __init__(self) -> None:
        self._list_moderator = ListModerator()

    def user_id_type(self, user_id_type: str) -> "ListModeratorBuilder":
        self._list_moderator.user_id_type = user_id_type
        return self

    def user_id(self, user_id: str) -> "ListModeratorBuilder":
        self._list_moderator.user_id = user_id
        return self

    def tenant_key(self, tenant_key: str) -> "ListModeratorBuilder":
        self._list_moderator.tenant_key = tenant_key
        return self

    def build(self) -> "ListModerator":
        return self._list_moderator
