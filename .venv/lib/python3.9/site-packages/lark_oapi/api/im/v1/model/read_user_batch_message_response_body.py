# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .batch_message_read_user import BatchMessageReadUser


class ReadUserBatchMessageResponseBody(object):
    _types = {
        "read_user": BatchMessageReadUser,
    }

    def __init__(self, d=None):
        self.read_user: Optional[BatchMessageReadUser] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ReadUserBatchMessageResponseBodyBuilder":
        return ReadUserBatchMessageResponseBodyBuilder()


class ReadUserBatchMessageResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._read_user_batch_message_response_body = ReadUserBatchMessageResponseBody()

    def read_user(self, read_user: BatchMessageReadUser) -> "ReadUserBatchMessageResponseBodyBuilder":
        self._read_user_batch_message_response_body.read_user = read_user
        return self

    def build(self) -> "ReadUserBatchMessageResponseBody":
        return self._read_user_batch_message_response_body
