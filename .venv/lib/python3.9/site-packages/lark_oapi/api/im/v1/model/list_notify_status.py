# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .user_id import UserId


class ListNotifyStatus(object):
    _types = {
        "user_id": UserId,
        "notify_status_type": str,
    }

    def __init__(self, d=None):
        self.user_id: Optional[UserId] = None
        self.notify_status_type: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ListNotifyStatusBuilder":
        return ListNotifyStatusBuilder()


class ListNotifyStatusBuilder(object):
    def __init__(self) -> None:
        self._list_notify_status = ListNotifyStatus()

    def user_id(self, user_id: UserId) -> "ListNotifyStatusBuilder":
        self._list_notify_status.user_id = user_id
        return self

    def notify_status_type(self, notify_status_type: str) -> "ListNotifyStatusBuilder":
        self._list_notify_status.notify_status_type = notify_status_type
        return self

    def build(self) -> "ListNotifyStatus":
        return self._list_notify_status
