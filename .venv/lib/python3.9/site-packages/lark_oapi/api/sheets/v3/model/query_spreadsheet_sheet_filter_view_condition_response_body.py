# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .filter_view_condition import FilterViewCondition


class QuerySpreadsheetSheetFilterViewConditionResponseBody(object):
    _types = {
        "items": List[FilterViewCondition],
    }

    def __init__(self, d=None):
        self.items: Optional[List[FilterViewCondition]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QuerySpreadsheetSheetFilterViewConditionResponseBodyBuilder":
        return QuerySpreadsheetSheetFilterViewConditionResponseBodyBuilder()


class QuerySpreadsheetSheetFilterViewConditionResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._query_spreadsheet_sheet_filter_view_condition_response_body = QuerySpreadsheetSheetFilterViewConditionResponseBody()

    def items(self, items: List[FilterViewCondition]) -> "QuerySpreadsheetSheetFilterViewConditionResponseBodyBuilder":
        self._query_spreadsheet_sheet_filter_view_condition_response_body.items = items
        return self

    def build(self) -> "QuerySpreadsheetSheetFilterViewConditionResponseBody":
        return self._query_spreadsheet_sheet_filter_view_condition_response_body
