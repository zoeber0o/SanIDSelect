# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .find_replace_result import FindReplaceResult


class ReplaceSpreadsheetSheetResponseBody(object):
    _types = {
        "replace_result": FindReplaceResult,
    }

    def __init__(self, d=None):
        self.replace_result: Optional[FindReplaceResult] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ReplaceSpreadsheetSheetResponseBodyBuilder":
        return ReplaceSpreadsheetSheetResponseBodyBuilder()


class ReplaceSpreadsheetSheetResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._replace_spreadsheet_sheet_response_body = ReplaceSpreadsheetSheetResponseBody()

    def replace_result(self, replace_result: FindReplaceResult) -> "ReplaceSpreadsheetSheetResponseBodyBuilder":
        self._replace_spreadsheet_sheet_response_body.replace_result = replace_result
        return self

    def build(self) -> "ReplaceSpreadsheetSheetResponseBody":
        return self._replace_spreadsheet_sheet_response_body
