# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class RightBorderStyle(object):
    _types = {
        "style": str,
        "color": str,
    }

    def __init__(self, d=None):
        self.style: Optional[str] = None
        self.color: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "RightBorderStyleBuilder":
        return RightBorderStyleBuilder()


class RightBorderStyleBuilder(object):
    def __init__(self) -> None:
        self._right_border_style = RightBorderStyle()

    def style(self, style: str) -> "RightBorderStyleBuilder":
        self._right_border_style.style = style
        return self

    def color(self, color: str) -> "RightBorderStyleBuilder":
        self._right_border_style.color = color
        return self

    def build(self) -> "RightBorderStyle":
        return self._right_border_style
