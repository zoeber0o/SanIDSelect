# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class ValueElementSingleOption(object):
    _types = {
        "data_validation_id": int,
        "data_validiton_value": str,
    }

    def __init__(self, d=None):
        self.data_validation_id: Optional[int] = None
        self.data_validiton_value: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ValueElementSingleOptionBuilder":
        return ValueElementSingleOptionBuilder()


class ValueElementSingleOptionBuilder(object):
    def __init__(self) -> None:
        self._value_element_single_option = ValueElementSingleOption()

    def data_validation_id(self, data_validation_id: int) -> "ValueElementSingleOptionBuilder":
        self._value_element_single_option.data_validation_id = data_validation_id
        return self

    def data_validiton_value(self, data_validiton_value: str) -> "ValueElementSingleOptionBuilder":
        self._value_element_single_option.data_validiton_value = data_validiton_value
        return self

    def build(self) -> "ValueElementSingleOption":
        return self._value_element_single_option
