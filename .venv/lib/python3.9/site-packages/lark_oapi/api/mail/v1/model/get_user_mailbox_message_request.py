# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class GetUserMailboxMessageRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.user_mailbox_id: Optional[str] = None
        self.message_id: Optional[str] = None

    @staticmethod
    def builder() -> "GetUserMailboxMessageRequestBuilder":
        return GetUserMailboxMessageRequestBuilder()


class GetUserMailboxMessageRequestBuilder(object):

    def __init__(self) -> None:
        get_user_mailbox_message_request = GetUserMailboxMessageRequest()
        get_user_mailbox_message_request.http_method = HttpMethod.GET
        get_user_mailbox_message_request.uri = "/open-apis/mail/v1/user_mailboxes/:user_mailbox_id/messages/:message_id"
        get_user_mailbox_message_request.token_types = {AccessTokenType.USER, AccessTokenType.TENANT}
        self._get_user_mailbox_message_request: GetUserMailboxMessageRequest = get_user_mailbox_message_request

    def user_mailbox_id(self, user_mailbox_id: str) -> "GetUserMailboxMessageRequestBuilder":
        self._get_user_mailbox_message_request.user_mailbox_id = user_mailbox_id
        self._get_user_mailbox_message_request.paths["user_mailbox_id"] = str(user_mailbox_id)
        return self

    def message_id(self, message_id: str) -> "GetUserMailboxMessageRequestBuilder":
        self._get_user_mailbox_message_request.message_id = message_id
        self._get_user_mailbox_message_request.paths["message_id"] = str(message_id)
        return self

    def build(self) -> GetUserMailboxMessageRequest:
        return self._get_user_mailbox_message_request
