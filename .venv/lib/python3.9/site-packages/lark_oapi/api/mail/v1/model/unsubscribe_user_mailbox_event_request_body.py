# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class UnsubscribeUserMailboxEventRequestBody(object):
    _types = {
        "event_type": int,
    }

    def __init__(self, d=None):
        self.event_type: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "UnsubscribeUserMailboxEventRequestBodyBuilder":
        return UnsubscribeUserMailboxEventRequestBodyBuilder()


class UnsubscribeUserMailboxEventRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._unsubscribe_user_mailbox_event_request_body = UnsubscribeUserMailboxEventRequestBody()

    def event_type(self, event_type: int) -> "UnsubscribeUserMailboxEventRequestBodyBuilder":
        self._unsubscribe_user_mailbox_event_request_body.event_type = event_type
        return self

    def build(self) -> "UnsubscribeUserMailboxEventRequestBody":
        return self._unsubscribe_user_mailbox_event_request_body
