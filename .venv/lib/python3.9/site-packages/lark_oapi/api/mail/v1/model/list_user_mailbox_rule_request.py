# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.model import BaseRequest
from lark_oapi.core.enum import HttpMethod, AccessTokenType


class ListUserMailboxRuleRequest(BaseRequest):
    def __init__(self) -> None:
        super().__init__()
        self.user_mailbox_id: Optional[str] = None

    @staticmethod
    def builder() -> "ListUserMailboxRuleRequestBuilder":
        return ListUserMailboxRuleRequestBuilder()


class ListUserMailboxRuleRequestBuilder(object):

    def __init__(self) -> None:
        list_user_mailbox_rule_request = ListUserMailboxRuleRequest()
        list_user_mailbox_rule_request.http_method = HttpMethod.GET
        list_user_mailbox_rule_request.uri = "/open-apis/mail/v1/user_mailboxes/:user_mailbox_id/rules"
        list_user_mailbox_rule_request.token_types = {AccessTokenType.TENANT, AccessTokenType.USER}
        self._list_user_mailbox_rule_request: ListUserMailboxRuleRequest = list_user_mailbox_rule_request

    def user_mailbox_id(self, user_mailbox_id: str) -> "ListUserMailboxRuleRequestBuilder":
        self._list_user_mailbox_rule_request.user_mailbox_id = user_mailbox_id
        self._list_user_mailbox_rule_request.paths["user_mailbox_id"] = str(user_mailbox_id)
        return self

    def build(self) -> ListUserMailboxRuleRequest:
        return self._list_user_mailbox_rule_request
