# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class I18nMeetingDescription(object):
    _types = {
        "lang": str,
        "description": str,
    }

    def __init__(self, d=None):
        self.lang: Optional[str] = None
        self.description: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "I18nMeetingDescriptionBuilder":
        return I18nMeetingDescriptionBuilder()


class I18nMeetingDescriptionBuilder(object):
    def __init__(self) -> None:
        self._i18n_meeting_description = I18nMeetingDescription()

    def lang(self, lang: str) -> "I18nMeetingDescriptionBuilder":
        self._i18n_meeting_description.lang = lang
        return self

    def description(self, description: str) -> "I18nMeetingDescriptionBuilder":
        self._i18n_meeting_description.description = description
        return self

    def build(self) -> "I18nMeetingDescription":
        return self._i18n_meeting_description
