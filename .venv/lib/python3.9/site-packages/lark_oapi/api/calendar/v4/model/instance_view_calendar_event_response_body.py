# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .instance import Instance


class InstanceViewCalendarEventResponseBody(object):
    _types = {
        "items": List[Instance],
    }

    def __init__(self, d=None):
        self.items: Optional[List[Instance]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "InstanceViewCalendarEventResponseBodyBuilder":
        return InstanceViewCalendarEventResponseBodyBuilder()


class InstanceViewCalendarEventResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._instance_view_calendar_event_response_body = InstanceViewCalendarEventResponseBody()

    def items(self, items: List[Instance]) -> "InstanceViewCalendarEventResponseBodyBuilder":
        self._instance_view_calendar_event_response_body.items = items
        return self

    def build(self) -> "InstanceViewCalendarEventResponseBody":
        return self._instance_view_calendar_event_response_body
