# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .calendar_event import CalendarEvent


class GetCalendarEventResponseBody(object):
    _types = {
        "event": CalendarEvent,
    }

    def __init__(self, d=None):
        self.event: Optional[CalendarEvent] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetCalendarEventResponseBodyBuilder":
        return GetCalendarEventResponseBodyBuilder()


class GetCalendarEventResponseBodyBuilder(object):
    def __init__(self) -> None:
        self._get_calendar_event_response_body = GetCalendarEventResponseBody()

    def event(self, event: CalendarEvent) -> "GetCalendarEventResponseBodyBuilder":
        self._get_calendar_event_response_body.event = event
        return self

    def build(self) -> "GetCalendarEventResponseBody":
        return self._get_calendar_event_response_body
