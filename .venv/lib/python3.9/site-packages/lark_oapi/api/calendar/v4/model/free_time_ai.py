# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class FreeTimeAi(object):
    _types = {
        "free_time_list": str,
    }

    def __init__(self, d=None):
        self.free_time_list: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "FreeTimeAiBuilder":
        return FreeTimeAiBuilder()


class FreeTimeAiBuilder(object):
    def __init__(self) -> None:
        self._free_time_ai = FreeTimeAi()

    def free_time_list(self, free_time_list: str) -> "FreeTimeAiBuilder":
        self._free_time_ai.free_time_list = free_time_list
        return self

    def build(self) -> "FreeTimeAi":
        return self._free_time_ai
