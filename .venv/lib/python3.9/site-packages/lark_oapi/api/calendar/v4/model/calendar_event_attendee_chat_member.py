# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class CalendarEventAttendeeChatMember(object):
    _types = {
        "rsvp_status": str,
        "is_optional": bool,
        "display_name": str,
        "open_id": str,
        "is_organizer": bool,
        "is_external": bool,
    }

    def __init__(self, d=None):
        self.rsvp_status: Optional[str] = None
        self.is_optional: Optional[bool] = None
        self.display_name: Optional[str] = None
        self.open_id: Optional[str] = None
        self.is_organizer: Optional[bool] = None
        self.is_external: Optional[bool] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CalendarEventAttendeeChatMemberBuilder":
        return CalendarEventAttendeeChatMemberBuilder()


class CalendarEventAttendeeChatMemberBuilder(object):
    def __init__(self) -> None:
        self._calendar_event_attendee_chat_member = CalendarEventAttendeeChatMember()

    def rsvp_status(self, rsvp_status: str) -> "CalendarEventAttendeeChatMemberBuilder":
        self._calendar_event_attendee_chat_member.rsvp_status = rsvp_status
        return self

    def is_optional(self, is_optional: bool) -> "CalendarEventAttendeeChatMemberBuilder":
        self._calendar_event_attendee_chat_member.is_optional = is_optional
        return self

    def display_name(self, display_name: str) -> "CalendarEventAttendeeChatMemberBuilder":
        self._calendar_event_attendee_chat_member.display_name = display_name
        return self

    def open_id(self, open_id: str) -> "CalendarEventAttendeeChatMemberBuilder":
        self._calendar_event_attendee_chat_member.open_id = open_id
        return self

    def is_organizer(self, is_organizer: bool) -> "CalendarEventAttendeeChatMemberBuilder":
        self._calendar_event_attendee_chat_member.is_organizer = is_organizer
        return self

    def is_external(self, is_external: bool) -> "CalendarEventAttendeeChatMemberBuilder":
        self._calendar_event_attendee_chat_member.is_external = is_external
        return self

    def build(self) -> "CalendarEventAttendeeChatMember":
        return self._calendar_event_attendee_chat_member
