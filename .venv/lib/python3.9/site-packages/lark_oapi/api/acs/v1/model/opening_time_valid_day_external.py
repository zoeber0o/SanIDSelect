# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init


class OpeningTimeValidDayExternal(object):
    _types = {
        "start_day": int,
        "end_day": int,
    }

    def __init__(self, d=None):
        self.start_day: Optional[int] = None
        self.end_day: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "OpeningTimeValidDayExternalBuilder":
        return OpeningTimeValidDayExternalBuilder()


class OpeningTimeValidDayExternalBuilder(object):
    def __init__(self) -> None:
        self._opening_time_valid_day_external = OpeningTimeValidDayExternal()

    def start_day(self, start_day: int) -> "OpeningTimeValidDayExternalBuilder":
        self._opening_time_valid_day_external.start_day = start_day
        return self

    def end_day(self, end_day: int) -> "OpeningTimeValidDayExternalBuilder":
        self._opening_time_valid_day_external.end_day = end_day
        return self

    def build(self) -> "OpeningTimeValidDayExternal":
        return self._opening_time_valid_day_external
